var path = require("path");

/**
 * GET /login/login.htm?fromURI=/oauth2/v1/authorize/redirect;jsessionid=C8CAB112A54DECAB36F64A605FA44B2A?okta_key=scsiaBORXe6htXjLWjQY5U6S7UPx2utd0eRCWp3seRo
 *
 * host: rain.okta1.com:1802
 * connection: keep-alive
 * user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:48.0) Gecko/20100101 Firefox/48.0
 * accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,* / *;q=0.8
 * accept-encoding: gzip
 * accept-language: en-US
 * cookie: t=default; DT=DI0jRgRLD_uQBqSzCUCxXy5OA; JSESSIONID=C8CAB112A54DECAB36F64A605FA44B2A
 * cache-control: no-cache, no-store
 * pragma: no-cache
 */

module.exports = function (req, res) {
  res.statusCode = 200;

  res.setHeader("server", "Apache-Coyote/1.1");
  res.setHeader("x-okta-request-id", "reqZ93rPsoDR_SXCg2V9bOJ-w");
  res.setHeader("x-rate-limit-limit", "850");
  res.setHeader("x-rate-limit-remaining", "849");
  res.setHeader("x-rate-limit-reset", "1478388288");
  res.setHeader("p3p", "CP=\"HONK\"");
  res.setHeader("set-cookie", ["sid=\"\"; Expires=Thu, 01-Jan-1970 00:00:10 GMT; Path=/","t=default; Path=/","sid=\"\"; Expires=Thu, 01-Jan-1970 00:00:10 GMT; Path=/","JSESSIONID=C8CAB112A54DECAB36F64A605FA44B2A; Path=/"]);
  res.setHeader("x-okta-backend", "K1104");
  res.setHeader("cache-control", "no-cache, no-store");
  res.setHeader("pragma", "no-cache");
  res.setHeader("expires", "0");
  res.setHeader("x-frame-options", "SAMEORIGIN");
  res.setHeader("x-ua-compatible", "IE=edge");
  res.setHeader("content-type", "text/html;charset=utf-8");
  res.setHeader("content-language", "en");
  res.setHeader("transfer-encoding", "chunked");
  res.setHeader("date", "Sat, 05 Nov 2016 23:23:48 GMT");

  res.setHeader("x-yakbak-tape", path.basename(__filename, ".js"));

  res.write(new Buffer("", "base64"));
  res.write(new Buffer("Y2Vob2xkZXInOiBwYXNzd29yZExhYmVsLAogICAgJ3ByaW1hcnlhdXRoLnBhc3N3b3JkLnRvb2x0aXAnOiBwYXNzd29yZElubGluZUxhYmVsLAogICAgJ3ByaW1hcnlhdXRoLnRpdGxlJzogc2lnbmluTGFiZWwsCiAgICAnZm9yZ290cGFzc3dvcmQnOiBmb3Jnb3RwYXNzd29yZExhYmVsLAogICAgJ3VubG9ja2FjY291bnQnOiB1bmxvY2thY2NvdW50TGFiZWwsCiAgICAnaGVscCc6IGhlbHBMYWJlbAogIH07Cgo8L3NjcmlwdD4KPHNjcmlwdCBzcmM9Imh0dHA6Ly9yYWluLm9rdGExLmNvbToxODAyL2Fzc2V0cy9qcy9tdmMvdmVuZG9yL2xpYi9yZXF1aXJlLTIuMS4xOC5taW4uYjU3ZGVkNTQ5MmQ5MjIzMTQ5YWRiMWQ4ZmZmODg0YzAuanMiPjwvc2NyaXB0PjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5mdW5jdGlvbiBsb2FkUmVxdWlyZU1haW4oKSB7dmFyIG1haW5TY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTttYWluU2NyaXB0LnNyYyA9ICdodHRwOi8vcmFpbi5va3RhMS5jb206MTgwMi9hc3NldHMvanMvbXZjL2xvZ2lucGFnZS9tYWluLWxvZ2lucGFnZS4xZWNkZDhiNjBjOGMzNDE2Yjk4MjQyMWQ2YzBhMzY0Yi5qcyc7ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXS5hcHBlbmRDaGlsZChtYWluU2NyaXB0KTt9PC9zY3JpcHQ+PHNjcmlwdCB0eXBlPSJ0ZXh0L2ph", "base64"));
  res.write(new Buffer("dmFzY3JpcHQiPgogIGZ1bmN0aW9uIGlzT2xkV2ViQnJvd3NlckNvbnRyb2woKSB7CiAgICAvLyBXZSBubyBsb25nZXIgc3VwcG9ydCBJRTcuIElmIHdlIHNlZSB0aGUgTVNJRSA3LjAgYnJvd3NlciBtb2RlLCBpdCdzIGEgZ29vZCBzaWduYWwKICAgIC8vIHRoYXQgd2UncmUgaW4gYSB3aW5kb3dzIGVtYmVkZGVkIGJyb3dzZXIuCiAgICBpZiAobmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdNU0lFIDcuMCcpID09PSAtMSkgewogICAgICByZXR1cm4gZmFsc2U7CiAgICB9CgogICAgLy8gQmVjYXVzZSB0aGUgdXNlckFnZW50IGlzIHRoZSBzYW1lIGFjcm9zcyBlbWJlZGRlZCBicm93c2Vycywgd2UgdXNlIGZlYXR1cmUKICAgIC8vIGRldGVjdGlvbiB0byBzZWUgaWYgd2UncmUgcnVubmluZyBvbiBvbGRlciB2ZXJzaW9ucyB0aGF0IGRvIG5vdCBzdXBwb3J0IHVwZGF0aW5nCiAgICAvLyB0aGUgZG9jdW1lbnRNb2RlIHZpYSB4LXVhLWNvbXBhdGlibGUuCiAgICByZXR1cm4gZG9jdW1lbnQuYWxsICYmICF3aW5kb3cuYXRvYjsKICB9CgogIHZhciB1bnN1cHBvcnRlZENvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdva3RhLXNpZ24taW4nKTsKCiAgLy8gT2xkIHZlcnNpb25zIG9mIFdlYkJyb3dzZXIgQ29udHJvbHMgKHNwZWNpZmljYWxseSwgT25lRHJpdmUpIHJlbmRlciBpbiBJRTcgYnJvd3NlcgogIC8vIG1vZGUsIHdpdGggbm8gd2F5IHRvIG92ZXJyaWRlIHRoZSBkb2N1bWVudE1vZGUuIEluIHRoaXMgY2FzZSwgaW5mb3JtIHRoZSB1c2VyIHRoZXkgbmVlZAogIC8vIHRvIHVwZ3JhZGUuCiAgaWYgKGlzT2xkV2ViQnJvd3NlckNvbnRyb2woKSkgewogICAgdW5zdXBwb3J0ZWRDb250YWluZXIucmVtb3ZlQXR0cmlidXRlKCdzdHlsZScpOwogIH0KICBlbHNlIHsKICAgIHVuc3VwcG9ydGVkQ29udGFpbmVyLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodW5zdXBwb3J0ZWRDb250YWluZXIpOwogICAgbG9hZFJlcXVpcmVNYWluKCk7CiAgfQo8L3NjcmlwdD4KCjwvYm9keT4KPC9odG1sPgo=", "base64"));
  res.end();

  return __filename;
};
