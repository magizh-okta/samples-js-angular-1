var path = require("path");

/**
 * GET /assets/js/mvc/loginpage/widget/okta-sign-in-no-jquery.js
 *
 * host: rain.okta1.com:1802
 * connection: keep-alive
 * user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:48.0) Gecko/20100101 Firefox/48.0
 * accept: * / *
 * accept-encoding: gzip
 * accept-language: en-US
 * cookie: DT=DI0jRgRLD_uQBqSzCUCxXy5OA; t=default; JSESSIONID=C8CAB112A54DECAB36F64A605FA44B2A
 * cache-control: no-cache, no-store
 * pragma: no-cache
 */

module.exports = function (req, res) {
  res.statusCode = 200;

  res.setHeader("server", "Apache-Coyote/1.1");
  res.setHeader("accept-ranges", "bytes");
  res.setHeader("etag", "W/\"484452-1477768984000\"");
  res.setHeader("last-modified", "Sat, 29 Oct 2016 19:23:04 GMT");
  res.setHeader("content-type", "text/javascript");
  res.setHeader("content-length", "484452");
  res.setHeader("date", "Sat, 05 Nov 2016 23:23:48 GMT");

  res.setHeader("x-yakbak-tape", path.basename(__filename, ".js"));

  res.write(new Buffer("/*!
 * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 * 
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 * 
 */
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("jquery")):"function"==typeof define&&define.amd?define(["jquery"],e):"object"==typeof exports?exports.OktaSignIn=e(require("jquery")):t.OktaSignIn=e(t.jQuery)}(this,function(__WEBPACK_EXTERNAL_MODULE_6__){return function(t){function e(i){if(n[i])return n[i].exports;var o=n[i]={exports:{},id:i,loaded:!1};return t[i].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var n={};return e.m=t,e.c=n,e.p="",e(0)}([function(t,e,n){var i=function(){function t(t,e,n,i){function r(e){t.session.exists().then(e)}function s(e){t.session.close().then(e).fail(function(){e("There was a problem closing the session")})}function a(e){t.session.refresh().then(e).fail(function(){e({status:"INACTIVE"})})}function l(e,n,i){t.idToken.refresh(i).then(n).fail(function(){n("There was a problem refreshing the id_token")})}function c(e){t.session.get().then(function(t){"ACTIVE"===t.status&&t.user&&(t.user=o.pick(t.user,"id","profile","passwordChanged")),e(t)})}function u(n,r,s){var a=new e(o.extend({},i,n,{authClient:t,globalSuccessFn:r,globalErrorFn:s}));a.start()}function p(){return n.hasTokensInHash(window.location.hash)}function h(e,n){t.token.parseFromUrl().then(e).fail(n)}return{renderEl:u,signOut:s,idToken:{refresh:l},session:{close:s,exists:r,get:c,refresh:a},token:{hasTokensInUrl:p,parseTokensFromUrl:h},tokenManager:t.tokenManager}}function e(e){var r,s,a,l;n(3),n(5),n(16),r=n(17),s=n(37),l=n(93),a=new r({url:e.baseUrl,transformErrorXHR:s.transformErrorXHR,headers:{"X-Okta-User-Agent-Extended":"okta-signin-widget-"+i.version},clientId:e.clientId,redirectUri:e.redirectUri}),o.extend(this,l.prototype.Events,t(a,l,s,e)),this.listenTo(l.prototype,"all",this.trigger)}var i=n(1),o=n(2);return e}();t.exports=i},function(t,e){t.exports={version:"1.9.0-beta.0",supportedLanguages:["en","cs","da","de","es","fi","fr","hu","it","ja","ko","nl-NL","pt-BR","ro","ru","sv","th","uk","zh-CN","zh-TW"]}},function(t,e,n){var i,o;//     Underscore.js 1.8.3
//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.
(function(){function n(t){function e(e,n,i,o,r,s){for(;r>=0&&r<s;r+=t){var a=o?o[r]:r;i=n(i,e[a],a,e)}return i}return function(n,i,o,r){i=k(i,r,4);var s=!R(n)&&S.keys(n),a=(s||n).length,l=t>0?0:a-1;return arguments.length<3&&(o=n[s?s[l]:l],l+=t),e(n,i,o,s,l,a)}}function r(t){return function(e,n,i){n=x(n,i);for(var o=O(e),r=t>0?0:o-1;r>=0&&r<o;r+=t)if(n(e[r],r,e))return r;return-1}}function s(t,e,n){return function(i,o,r){var s=0,a=O(i);if("number"==typeof r)t>0?s=r>=0?r:Math.max(r+a,s):a=r>=0?Math.min(r+1,a):r+a+1;else if(n&&r&&a)return r=n(i,o),i[r]===o?r:-1;if(o!==o)return r=e(f.call(i,s,a),S.isNaN),r>=0?r+s:-1;for(r=t>0?s:a-1;r>=0&&r<a;r+=t)if(i[r]===o)return r;return-1}}function a(t,e){var n=M.length,i=t.constructor,o=S.isFunction(i)&&i.prototype||p,r="constructor";for(S.has(t,r)&&!S.contains(e,r)&&e.push(r);n--;)r=M[n],r in t&&t[r]!==o[r]&&!S.contains(e,r)&&e.push(r)}var l=this,c=l._,u=Array.prototype,p=Object.prototype,h=Function.prototype,d=u.push,f=u.slice,m=p.toString,g=p.hasOwnProperty,v=Array.isArray,y=Object.keys,_=h.bind,b=Object.create,w=function(){},S=function(t){return t instanceof S?t:this instanceof S?void(this._wrapped=t):new S(t)};"undefined"!=typeof t&&t.exports&&(e=t.exports=S),e._=S,S.VERSION="1.8.3";var k=function(t,e,n){if(void 0===e)return t;switch(null==n?3:n){case 1:return function(n){return t.call(e,n)};case 2:return function(n,i){return t.call(e,n,i)};case 3:return function(n,i,o){return t.call(e,n,i,o)};case 4:return function(n,i,o,r){return t.call(e,n,i,o,r)}}return function(){return t.apply(e,arguments)}},x=function(t,e,n){return null==t?S.identity:S.isFunction(t)?k(t,e,n):S.isObject(t)?S.matcher(t):S.property(t)};S.iteratee=function(t,e){return x(t,e,1/0)};var E=function(t,e){return function(n){var i=arguments.length;if(i<2||null==n)return n;for(var o=1;o<i;o++)for(var r=arguments[o],s=t(r),a=s.length,l=0;l<a;l++){var c=s[l];e&&void 0!==n[c]||(n[c]=r[c])}return n}},T=function(t){if(!S.isObject(t))return{};if(b)return b(t);w.prototype=t;var e=new w;return w.prototype=null,e},C=function(t){return function(e){return null==e?void 0:e[t]}},A=Math.pow(2,53)-1,O=C("length"),R=function(t){var e=O(t);return"number"==typeof e&&e>=0&&e<=A};S.each=S.forEach=function(t,e,n){e=k(e,n);var i,o;if(R(t))for(i=0,o=t.length;i<o;i++)e(t[i],i,t);else{var r=S.keys(t);for(i=0,o=r.length;i<o;i++)e(t[r[i]],r[i],t)}return t},S.map=S.collect=function(t,e,n){e=x(e,n);for(var i=!R(t)&&S.keys(t),o=(i||t).length,r=Array(o),s=0;s<o;s++){var a=i?i[s]:s;r[s]=e(t[a],a,t)}return r},S.reduce=S.foldl=S.inject=n(1),S.reduceRight=S.foldr=n(-1),S.find=S.detect=function(t,e,n){var i;if(i=R(t)?S.findIndex(t,e,n):S.findKey(t,e,n),void 0!==i&&i!==-1)return t[i]},S.filter=S.select=function(t,e,n){var i=[];return e=x(e,n),S.each(t,function(t,n,o){e(t,n,o)&&i.push(t)}),i},S.reject=function(t,e,n){return S.filter(t,S.negate(x(e)),n)},S.every=S.all=function(t,e,n){e=x(e,n);for(var i=!R(t)&&S.keys(t),o=(i||t).length,r=0;r<o;r++){var s=i?i[r]:r;if(!e(t[s],s,t))return!1}return!0},S.some=S.any=function(t,e,n){e=x(e,n);for(var i=!R(t)&&S.keys(t),o=(i||t).length,r=0;r<o;r++){var s=i?i[r]:r;if(e(t[s],s,t))return!0}return!1},S.contains=S.includes=S.include=function(t,e,n,i){return R(t)||(t=S.values(t)),("number"!=typeof n||i)&&(n=0),S.indexOf(t,e,n)>=0},S.invoke=function(t,e){var n=f.call(arguments,2),i=S.isFunction(e);return S.map(t,function(t){var o=i?e:t[e];return null==o?o:o.apply(t,n)})},S.pluck=function(t,e){return S.map(t,S.property(e))},S.where=function(t,e){return S.filter(t,S.matcher(e))},S.findWhere=function(t,e){return S.find(t,S.matcher(e))},S.max=function(t,e,n){var i,o,r=-(1/0),s=-(1/0);if(null==e&&null!=t){t=R(t)?t:S.values(t);for(var a=0,l=t.length;a<l;a++)i=t[a],i>r&&(r=i)}else e=x(e,n),S.each(t,function(t,n,i){o=e(t,n,i),(o>s||o===-(1/0)&&r===-(1/0))&&(r=t,s=o)});return r},S.min=function(t,e,n){var i,o,r=1/0,s=1/0;if(null==e&&null!=t){t=R(t)?t:S.values(t);for(var a=0,l=t.length;a<l;a++)i=t[a],i<r&&(r=i)}else e=x(e,n),S.each(t,function(t,n,i){o=e(t,n,i),(o<s||o===1/0&&r===1/0)&&(r=t,s=o)});return r},S.shuffle=function(t){for(var e,n=R(t)?t:S.values(t),i=n.length,o=Array(i),r=0;r<i;r++)e=S.random(0,r),e!==r&&(o[r]=o[e]),o[e]=n[r];return o},S.sample=function(t,e,n){return null==e||n?(R(t)||(t=S.values(t)),t[S.random(t.length-1)]):S.shuffle(t).slice(0,Math.max(0,e))},S.sortBy=function(t,e,n){return e=x(e,n),S.pluck(S.map(t,function(t,n,i){return{value:t,index:n,criteria:e(t,n,i)}}).sort(function(t,e){var n=t.criteria,i=e.criteria;if(n!==i){if(n>i||void 0===n)return 1;if(n<i||void 0===i)return-1}return t.index-e.index}),"value")};var N=function(t){return function(e,n,i){var o={};return n=x(n,i),S.each(e,function(i,r){var s=n(i,r,e);t(o,i,s)}),o}};S.groupBy=N(function(t,e,n){S.has(t,n)?t[n].push(e):t[n]=[e]}),S.indexBy=N(function(t,e,n){t[n]=e}),S.countBy=N(function(t,e,n){S.has(t,n)?t[n]++:t[n]=1}),S.toArray=function(t){return t?S.isArray(t)?f.call(t):R(t)?S.map(t,S.identity):S.values(t):[]},S.size=function(t){return null==t?0:R(t)?t.length:S.keys(t).length},S.partition=function(t,e,n){e=x(e,n);var i=[],o=[];return S.each(t,function(t,n,r){(e(t,n,r)?i:o).push(t)}),[i,o]},S.first=S.head=S.take=function(t,e,n){if(null!=t)return null==e||n?t[0]:S.initial(t,t.length-e)},S.initial=function(t,e,n){return f.call(t,0,Math.max(0,t.length-(null==e||n?1:e)))},S.last=function(t,e,n){if(null!=t)return null==e||n?t[t.length-1]:S.rest(t,Math.max(0,t.length-e))},S.rest=S.tail=S.drop=function(t,e,n){return f.call(t,null==e||n?1:e)},S.compact=function(t){return S.filter(t,S.identity)};var I=function(t,e,n,i){for(var o=[],r=0,s=i||0,a=O(t);s<a;s++){var l=t[s];if(R(l)&&(S.isArray(l)||S.isArguments(l))){e||(l=I(l,e,n));var c=0,u=l.length;for(o.length+=u;c<u;)o[r++]=l[c++]}else n||(o[r++]=l)}return o};S.flatten=function(t,e){return I(t,e,!1)},S.without=function(t){return S.difference(t,f.call(arguments,1))},S.uniq=S.unique=function(t,e,n,i){S.isBoolean(e)||(i=n,n=e,e=!1),null!=n&&(n=x(n,i));for(var o=[],r=[],s=0,a=O(t);s<a;s++){var l=t[s],c=n?n(l,s,t):l;e?(s&&r===c||o.push(l),r=c):n?S.contains(r,c)||(r.push(c),o.push(l)):S.contains(o,l)||o.push(l)}return o},S.union=function(){return S.uniq(I(arguments,!0,!0))},S.intersection=function(t){for(var e=[],n=arguments.length,i=0,o=O(t);i<o;i++){var r=t[i];if(!S.contains(e,r)){for(var s=1;s<n&&S.contains(arguments[s],r);s++);s===n&&e.push(r)}}return e},S.difference=function(t){var e=I(arguments,!0,!0,1);return S.filter(t,function(t){return!S.contains(e,t)})},S.zip=function(){return S.unzip(arguments)},S.unzip=function(t){for(var e=t&&S.max(t,O).length||0,n=Array(e),i=0;i<e;i++)n[i]=S.pluck(t,i);return n},S.object=function(t,e){for(var n={},i=0,o=O(t);i<o;i++)e?n[t[i]]=e[i]:n[t[i][0]]=t[i][1];return n},S.findIndex=r(1),S.findLastIndex=r(-1),S.sortedIndex=function(t,e,n,i){n=x(n,i,1);for(var o=n(e),r=0,s=O(t);r<s;){var a=Math.floor((r+s)/2);n(t[a])<o?r=a+1:s=a}return r},S.indexOf=s(1,S.findIndex,S.sortedIndex),S.lastIndexOf=s(-1,S.findLastIndex),S.range=function(t,e,n){null==e&&(e=t||0,t=0),n=n||1;for(var i=Math.max(Math.ceil((e-t)/n),0),o=Array(i),r=0;r<i;r++,t+=n)o[r]=t;return o};var P=function(t,e,n,i,o){if(!(i instanceof e))return t.apply(n,o);var r=T(t.prototype),s=t.apply(r,o);return S.isObject(s)?s:r};S.bind=function(t,e){if(_&&t.bind===_)return _.apply(t,f.call(arguments,1));if(!S.isFunction(t))throw new TypeError("Bind must be called on a function");var n=f.call(arguments,2),i=function(){return P(t,i,e,this,n.concat(f.call(arguments)))};return i},S.partial=function(t){var e=f.call(arguments,1),n=function(){for(var i=0,o=e.length,r=Array(o),s=0;s<o;s++)r[s]=e[s]===S?arguments[i++]:e[s];for(;i<arguments.length;)r.push(arguments[i++]);return P(t,n,this,this,r)};return n},S.bindAll=function(t){var e,n,i=arguments.length;if(i<=1)throw new Error("bindAll must be passed function names");for(e=1;e<i;e++)n=arguments[e],t[n]=S.bind(t[n],t);return t},S.memoize=function(t,e){var n=function(i){var o=n.cache,r=""+(e?e.apply(this,arguments):i);return S.has(o,r)||(o[r]=t.apply(this,arguments)),o[r]};return n.cache={},n},S.delay=function(t,e){var n=f.call(arguments,2);return setTimeout(function(){return t.apply(null,n)},e)},S.defer=S.partial(S.delay,S,1),S.throttle=function(t,e,n){var i,o,r,s=null,a=0;n||(n={});var l=function(){a=n.leading===!1?0:S.now(),s=null,r=t.apply(i,o),s||(i=o=null)};return function(){var c=S.now();a||n.leading!==!1||(a=c);var u=e-(c-a);return i=this,o=arguments,u<=0||u>e?(s&&(clearTimeout(s),s=null),a=c,r=t.apply(i,o),s||(i=o=null)):s||n.trailing===!1||(s=setTimeout(l,u)),r}},S.debounce=function(t,e,n){var i,o,r,s,a,l=function(){var c=S.now()-s;c<e&&c>=0?i=setTimeout(l,e-c):(i=null,n||(a=t.apply(r,o),i||(r=o=null)))};return function(){r=this,o=arguments,s=S.now();var c=n&&!i;return i||(i=setTimeout(l,e)),c&&(a=t.apply(r,o),r=o=null),a}},S.wrap=function(t,e){return S.partial(e,t)},S.negate=function(t){return function(){return!t.apply(this,arguments)}},S.compose=function(){var t=arguments,e=t.length-1;return function(){for(var n=e,i=t[e].apply(this,arguments);n--;)i=t[n].call(this,i);return i}},S.after=function(t,e){return function(){if(--t<1)return e.apply(this,arguments)}},S.before=function(t,e){var n;return function(){return--t>0&&(n=e.apply(this,arguments)),t<=1&&(e=null),n}},S.once=S.partial(S.before,2);var L=!{toString:null}.propertyIsEnumerable("toString"),M=["valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"];S.keys=function(t){if(!S.isObject(t))return[];if(y)return y(t);var e=[];for(var n in t)S.has(t,n)&&e.push(n);return L&&a(t,e),e},S.allKeys=function(t){if(!S.isObject(t))return[];var e=[];for(var n in t)e.push(n);return L&&a(t,e),e},S.values=function(t){for(var e=S.keys(t),n=e.length,i=Array(n),o=0;o<n;o++)i[o]=t[e[o]];return i},S.mapObject=function(t,e,n){e=x(e,n);for(var i,o=S.keys(t),r=o.length,s={},a=0;a<r;a++)i=o[a],s[i]=e(t[i],i,t);return s},S.pairs=function(t){for(var e=S.keys(t),n=e.length,i=Array(n),o=0;o<n;o++)i[o]=[e[o],t[e[o]]];return i},S.invert=function(t){for(var e={},n=S.keys(t),i=0,o=n.length;i<o;i++)e[t[n[i]]]=n[i];return e},S.functions=S.methods=function(t){var e=[];for(var n in t)S.isFunction(t[n])&&e.push(n);return e.sort()},S.extend=E(S.allKeys),S.extendOwn=S.assign=E(S.keys),S.findKey=function(t,e,n){e=x(e,n);for(var i,o=S.keys(t),r=0,s=o.length;r<s;r++)if(i=o[r],e(t[i],i,t))return i},S.pick=function(t,e,n){var i,o,r={},s=t;if(null==s)return r;S.isFunction(e)?(o=S.allKeys(s),i=k(e,n)):(o=I(arguments,!1,!1,1),i=function(t,e,n){return e in n},s=Object(s));for(var a=0,l=o.length;a<l;a++){var c=o[a],u=s[c];i(u,c,s)&&(r[c]=u)}return r},S.omit=function(t,e,n){if(S.isFunction(e))e=S.negate(e);else{var i=S.map(I(arguments,!1,!1,1),String);e=function(t,e){return!S.contains(i,e)}}return S.pick(t,e,n)},S.defaults=E(S.allKeys,!0),S.create=function(t,e){var n=T(t);return e&&S.extendOwn(n,e),n},S.clone=function(t){return S.isObject(t)?S.isArray(t)?t.slice():S.extend({},t):t},S.tap=function(t,e){return e(t),t},S.isMatch=function(t,e){var n=S.keys(e),i=n.length;if(null==t)return!i;for(var o=Object(t),r=0;r<i;r++){var s=n[r];if(e[s]!==o[s]||!(s in o))return!1}return!0};var D=function(t,e,n,i){if(t===e)return 0!==t||1/t===1/e;if(null==t||null==e)return t===e;t instanceof S&&(t=t._wrapped),e instanceof S&&(e=e._wrapped);var o=m.call(t);if(o!==m.call(e))return!1;switch(o){case"[object RegExp]":case"[object String]":return""+t==""+e;case"[object Number]":return+t!==+t?+e!==+e:0===+t?1/+t===1/e:+t===+e;case"[object Date]":case"[object Boolean]":return+t===+e}var r="[object Array]"===o;if(!r){if("object"!=typeof t||"object"!=typeof e)return!1;var s=t.constructor,a=e.constructor;if(s!==a&&!(S.isFunction(s)&&s instanceof s&&S.isFunction(a)&&a instanceof a)&&"constructor"in t&&"constructor"in e)return!1}n=n||[],i=i||[];for(var l=n.length;l--;)if(n[l]===t)return i[l]===e;if(n.push(t),i.push(e),r){if(l=t.length,l!==e.length)return!1;for(;l--;)if(!D(t[l],e[l],n,i))return!1}else{var c,u=S.keys(t);if(l=u.length,S.keys(e).length!==l)return!1;for(;l--;)if(c=u[l],!S.has(e,c)||!D(t[c],e[c],n,i))return!1}return n.pop(),i.pop(),!0};S.isEqual=function(t,e){return D(t,e)},S.isEmpty=function(t){return null==t||(R(t)&&(S.isArray(t)||S.isString(t)||S.isArguments(t))?0===t.length:0===S.keys(t).length)},S.isElement=function(t){return!(!t||1!==t.nodeType)},S.isArray=v||function(t){return"[object Array]"===m.call(t)},S.isObject=function(t){var e=typeof t;return"function"===e||"object"===e&&!!t},S.each(["Arguments","Function","String","Number","Date","RegExp","Error"],function(t){S["is"+t]=function(e){return m.call(e)==="[object "+t+"]"}}),S.isArguments(arguments)||(S.isArguments=function(t){return S.has(t,"callee")}),"function"!=typeof/./&&"object"!=typeof Int8Array&&(S.isFunction=function(t){return"function"==typeof t||!1}),S.isFinite=function(t){return isFinite(t)&&!isNaN(parseFloat(t))},S.isNaN=function(t){return S.isNumber(t)&&t!==+t},S.isBoolean=function(t){return t===!0||t===!1||"[object Boolean]"===m.call(t)},S.isNull=function(t){return null===t},S.isUndefined=function(t){return void 0===t},S.has=function(t,e){return null!=t&&g.call(t,e)},S.noConflict=function(){return l._=c,this},S.identity=function(t){return t},S.constant=function(t){return function(){return t}},S.noop=function(){},S.property=C,S.propertyOf=function(t){return null==t?function(){}:function(e){return t[e]}},S.matcher=S.matches=function(t){return t=S.extendOwn({},t),function(e){return S.isMatch(e,t)}},S.times=function(t,e,n){var i=Array(Math.max(0,t));e=k(e,n,1);for(var o=0;o<t;o++)i[o]=e(o);return i},S.random=function(t,e){return null==e&&(e=t,t=0),t+Math.floor(Math.random()*(e-t+1))},S.now=Date.now||function(){return(new Date).getTime()};var U={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},F=S.invert(U),B=function(t){var e=function(e){return t[e]},n="(?:"+S.keys(t).join("|")+")",i=RegExp(n),o=RegExp(n,"g");return function(t){return t=null==t?"":""+t,i.test(t)?t.replace(o,e):t}};S.escape=B(U),S.unescape=B(F),S.result=function(t,e,n){var i=null==t?void 0:t[e];return void 0===i&&(i=n),S.isFunction(i)?i.call(t):i};var j=0;S.uniqueId=function(t){var e=++j+"";return t?t+e:e},S.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var q=/(.)^/,$={"'":"'","\\":"\\","\r":"r","\n":"n","\u2028":"u2028","\u2029":"u2029"},H=/\\|'|\r|\n|\u2028|\u2029/g,V=function(t){return"\\"+$[t]};S.template=function(t,e,n){!e&&n&&(e=n),e=S.defaults({},e,S.templateSettings);var i=RegExp([(e.escape||q).source,(e.interpolate||q).source,(e.evaluate||q).source].join("|")+"|$","g"),o=0,r="__p+='";t.replace(i,function(e,n,i,s,a){return r+=t.slice(o,a).replace(H,V),o=a+e.length,n?r+="'+\n((__t=("+n+"))==null?'':_.escape(__t))+\n'":i?r+="'+\n((__t=("+i+"))==null?'':__t)+\n'":s&&(r+="';\n"+s+"\n__p+='"),e}),r+="';\n",e.variable||(r="with(obj||{}){\n"+r+"}\n"),r="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+r+"return __p;\n";try{var s=new Function(e.variable||"obj","_",r)}catch(a){throw a.source=r,a}var l=function(t){return s.call(this,t,S)},c=e.variable||"obj";return l.source="function("+c+"){\n"+r+"}",l},S.chain=function(t){var e=S(t);return e._chain=!0,e};var W=function(t,e){return t._chain?S(e).chain():e};S.mixin=function(t){S.each(S.functions(t),function(e){var n=S[e]=t[e];S.prototype[e]=function(){var t=[this._wrapped];return d.apply(t,arguments),W(this,n.apply(S,t))}})},S.mixin(S),S.each(["pop","push","reverse","shift","sort","splice","unshift"],function(t){var e=u[t];S.prototype[t]=function(){var n=this._wrapped;return e.apply(n,arguments),"shift"!==t&&"splice"!==t||0!==n.length||delete n[0],W(this,n)}}),S.each(["concat","join","slice"],function(t){var e=u[t];S.prototype[t]=function(){return W(this,e.apply(this._wrapped,arguments))}}),S.prototype.value=function(){return this._wrapped},S.prototype.valueOf=S.prototype.toJSON=S.prototype.value,S.prototype.toString=function(){return""+this._wrapped},i=[],o=function(){return S}.apply(e,i),!(void 0!==o&&(t.exports=o))}).call(this)},function(t,e,n){var i,o;i=[n(2),n(4)],o=function(t,e){var n=t.noConflict();return n.mixin({resultCtx:function(t,e,i,o){var r=n.isObject(t)?t[e]:void 0;return n.isFunction(r)&&(r=r.call(i||t)),r?r:n.isUndefined(o)?r:o},isInteger:function(t){return n.isNumber(t)&&t%1===0},template:function(t,n){var i=e.compile(t);return n?i(n):function(t){return i(t)}}}),n}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){/*!

	 handlebars v4.0.5

	Copyright (C) 2011-2015 by Yehuda Katz

	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
	THE SOFTWARE.

	@license
	*/
!function(e,n){t.exports=n()}(this,function(){return function(t){function e(i){if(n[i])return n[i].exports;var o=n[i]={exports:{},id:i,loaded:!1};return t[i].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var n={};return e.m=t,e.c=n,e.p="",e(0)}([function(t,e,n){"use strict";function i(){var t=v();return t.compile=function(e,n){return u.compile(e,n,t)},t.precompile=function(e,n){return u.precompile(e,n,t)},t.AST=l["default"],t.Compiler=u.Compiler,t.JavaScriptCompiler=h["default"],t.Parser=c.parser,t.parse=c.parse,t}var o=n(1)["default"];e.__esModule=!0;var r=n(2),s=o(r),a=n(21),l=o(a),c=n(22),u=n(27),p=n(28),h=o(p),d=n(25),f=o(d),m=n(20),g=o(m),v=s["default"].create,y=i();y.create=i,g["default"](y),y.Visitor=f["default"],y["default"]=y,e["default"]=y,t.exports=e["default"]},function(t,e){"use strict";e["default"]=function(t){return t&&t.__esModule?t:{"default":t}},e.__esModule=!0},function(t,e,n){"use strict";function i(){var t=new a.HandlebarsEnvironment;return d.extend(t,a),t.SafeString=c["default"],t.Exception=p["default"],t.Utils=d,t.escapeExpression=d.escapeExpression,t.VM=m,t.template=function(e){return m.template(e,t)},t}var o=n(3)["default"],r=n(1)["default"];e.__esModule=!0;var s=n(4),a=o(s),l=n(18),c=r(l),u=n(6),p=r(u),h=n(5),d=o(h),f=n(19),m=o(f),g=n(20),v=r(g),y=i();y.create=i,v["default"](y),y["default"]=y,e["default"]=y,t.exports=e["default"]},function(t,e){"use strict";e["default"]=function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e["default"]=t,e},e.__esModule=!0},function(t,e,n){"use strict";function i(t,e,n){this.helpers=t||{},this.partials=e||{},this.decorators=n||{},l.registerDefaultHelpers(this),c.registerDefaultDecorators(this)}var o=n(1)["default"];e.__esModule=!0,e.HandlebarsEnvironment=i;var r=n(5),s=n(6),a=o(s),l=n(7),c=n(15),u=n(17),p=o(u),h="4.0.5";e.VERSION=h;var d=7;e.COMPILER_REVISION=d;var f={1:"<= 1.0.rc.2",2:"== 1.0.0-rc.3",3:"== 1.0.0-rc.4",4:"== 1.x.x",5:"== 2.0.0-alpha.x",6:">= 2.0.0-beta.1",7:">= 4.0.0"};e.REVISION_CHANGES=f;var m="[object Object]";i.prototype={constructor:i,logger:p["default"],log:p["default"].log,registerHelper:function(t,e){if(r.toString.call(t)===m){if(e)throw new a["default"]("Arg not supported with multiple helpers");r.extend(this.helpers,t)}else this.helpers[t]=e},unregisterHelper:function(t){delete this.helpers[t]},registerPartial:function(t,e){if(r.toString.call(t)===m)r.extend(this.partials,t);else{if("undefined"==typeof e)throw new a["default"]('Attempting to register a partial called "'+t+'" as undefined');this.partials[t]=e}},unregisterPartial:function(t){delete this.partials[t]},registerDecorator:function(t,e){if(r.toString.call(t)===m){if(e)throw new a["default"]("Arg not supported with multiple decorators");r.extend(this.decorators,t)}else this.decorators[t]=e},unregisterDecorator:function(t){delete this.decorators[t]}};var g=p["default"].log;e.log=g,e.createFrame=r.createFrame,e.logger=p["default"]},function(t,e){"use strict";function n(t){return u[t]}function i(t){for(var e=1;e<arguments.length;e++)for(var n in arguments[e])Object.prototype.hasOwnProperty.call(arguments[e],n)&&(t[n]=arguments[e][n]);return t}function o(t,e){for(var n=0,i=t.length;n<i;n++)if(t[n]===e)return n;return-1}function r(t){if("string"!=typeof t){if(t&&t.toHTML)return t.toHTML();if(null==t)return"";if(!t)return t+"";t=""+t}return h.test(t)?t.replace(p,n):t}function s(t){return!t&&0!==t||!(!m(t)||0!==t.length)}function a(t){var e=i({},t);return e._parent=t,e}function l(t,e){return t.path=e,t}function c(t,e){return(t?t+".":"")+e}e.__esModule=!0,e.extend=i,e.indexOf=o,e.escapeExpression=r,e.isEmpty=s,e.createFrame=a,e.blockParams=l,e.appendContextPath=c;var u={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;","=":"&#x3D;"},p=/[&<>"'`=]/g,h=/[&<>"'`=]/,d=Object.prototype.toString;e.toString=d;var f=function(t){return"function"==typeof t};f(/x/)&&(e.isFunction=f=function(t){return"function"==typeof t&&"[object Function]"===d.call(t)}),e.isFunction=f;var m=Array.isArray||function(t){return!(!t||"object"!=typeof t)&&"[object Array]"===d.call(t)};e.isArray=m},function(t,e){"use strict";function n(t,e){var o=e&&e.loc,r=void 0,s=void 0;o&&(r=o.start.line,s=o.start.column,t+=" - "+r+":"+s);for(var a=Error.prototype.constructor.call(this,t),l=0;l<i.length;l++)this[i[l]]=a[i[l]];Error.captureStackTrace&&Error.captureStackTrace(this,n),o&&(this.lineNumber=r,this.column=s)}e.__esModule=!0;var i=["description","fileName","lineNumber","message","name","number","stack"];n.prototype=new Error,e["default"]=n,t.exports=e["default"]},function(t,e,n){"use strict";function i(t){s["default"](t),l["default"](t),u["default"](t),h["default"](t),f["default"](t),g["default"](t),y["default"](t)}var o=n(1)["default"];e.__esModule=!0,e.registerDefaultHelpers=i;var r=n(8),s=o(r),a=n(9),l=o(a),c=n(10),u=o(c),p=n(11),h=o(p),d=n(12),f=o(d),m=n(13),g=o(m),v=n(14),y=o(v)},function(t,e,n){"use strict";e.__esModule=!0;var i=n(5);e["default"]=function(t){t.registerHelper("blockHelperMissing",function(e,n){var o=n.inverse,r=n.fn;if(e===!0)return r(this);if(e===!1||null==e)return o(this);if(i.isArray(e))return e.length>0?(n.ids&&(n.ids=[n.name]),t.helpers.each(e,n)):o(this);if(n.data&&n.ids){var s=i.createFrame(n.data);s.contextPath=i.appendContextPath(n.data.contextPath,n.name),n={data:s}}return r(e,n)})},t.exports=e["default"]},function(t,e,n){"use strict";var i=n(1)["default"];e.__esModule=!0;var o=n(5),r=n(6),s=i(r);e["default"]=function(t){t.registerHelper("each",function(t,e){function n(e,n,r){c&&(c.key=e,c.index=n,c.first=0===n,c.last=!!r,u&&(c.contextPath=u+e)),l+=i(t[e],{data:c,blockParams:o.blockParams([t[e],e],[u+e,null])})}if(!e)throw new s["default"]("Must pass iterator to #each");var i=e.fn,r=e.inverse,a=0,l="",c=void 0,u=void 0;if(e.data&&e.ids&&(u=o.appendContextPath(e.data.contextPath,e.ids[0])+"."),o.isFunction(t)&&(t=t.call(this)),e.data&&(c=o.createFrame(e.data)),t&&"object"==typeof t)if(o.isArray(t))for(var p=t.length;a<p;a++)a in t&&n(a,a,a===t.length-1);else{var h=void 0;for(var d in t)t.hasOwnProperty(d)&&(void 0!==h&&n(h,a-1),h=d,a++);void 0!==h&&n(h,a-1,!0)}return 0===a&&(l=r(this)),l})},t.exports=e["default"]},function(t,e,n){"use strict";var i=n(1)["default"];e.__esModule=!0;var o=n(6),r=i(o);e["default"]=function(t){t.registerHelper("helperMissing",function(){if(1!==arguments.length)throw new r["default"]('Missing helper: "'+arguments[arguments.length-1].name+'"')})},t.exports=e["default"]},function(t,e,n){"use strict";e.__esModule=!0;var i=n(5);e["default"]=function(t){t.registerHelper("if",function(t,e){return i.isFunction(t)&&(t=t.call(this)),!e.hash.includeZero&&!t||i.isEmpty(t)?e.inverse(this):e.fn(this)}),t.registerHelper("unless",function(e,n){return t.helpers["if"].call(this,e,{fn:n.inverse,inverse:n.fn,hash:n.hash})})},t.exports=e["default"]},function(t,e){"use strict";e.__esModule=!0,e["default"]=function(t){t.registerHelper("log",function(){for(var e=[void 0],n=arguments[arguments.length-1],i=0;i<arguments.length-1;i++)e.push(arguments[i]);var o=1;null!=n.hash.level?o=n.hash.level:n.data&&null!=n.data.level&&(o=n.data.level),e[0]=o,t.log.apply(t,e)})},t.exports=e["default"]},function(t,e){"use strict";e.__esModule=!0,e["default"]=function(t){t.registerHelper("lookup",function(t,e){return t&&t[e]})},t.exports=e["default"]},function(t,e,n){"use strict";e.__esModule=!0;var i=n(5);e["default"]=function(t){t.registerHelper("with",function(t,e){i.isFunction(t)&&(t=t.call(this));var n=e.fn;if(i.isEmpty(t))return e.inverse(this);var o=e.data;return e.data&&e.ids&&(o=i.createFrame(e.data),o.contextPath=i.appendContextPath(e.data.contextPath,e.ids[0])),n(t,{data:o,blockParams:i.blockParams([t],[o&&o.contextPath])})})},t.exports=e["default"]},function(t,e,n){"use strict";function i(t){s["default"](t)}var o=n(1)["default"];e.__esModule=!0,e.registerDefaultDecorators=i;var r=n(16),s=o(r)},function(t,e,n){"use strict";e.__esModule=!0;var i=n(5);e["default"]=function(t){t.registerDecorator("inline",function(t,e,n,o){var r=t;return e.partials||(e.partials={},r=function(o,r){var s=n.partials;n.partials=i.extend({},s,e.partials);var a=t(o,r);return n.partials=s,a}),e.partials[o.args[0]]=o.fn,r})},t.exports=e["default"]},function(t,e,n){"use strict";e.__esModule=!0;var i=n(5),o={methodMap:["debug","info","warn","error"],level:"info",lookupLevel:function(t){if("string"==typeof t){var e=i.indexOf(o.methodMap,t.toLowerCase());t=e>=0?e:parseInt(t,10)}return t},log:function(t){if(t=o.lookupLevel(t),"undefined"!=typeof console&&o.lookupLevel(o.level)<=t){var e=o.methodMap[t];console[e]||(e="log");for(var n=arguments.length,i=Array(n>1?n-1:0),r=1;r<n;r++)i[r-1]=arguments[r];console[e].apply(console,i)}}};e["default"]=o,t.exports=e["default"]},function(t,e){"use strict";function n(t){this.string=t}e.__esModule=!0,n.prototype.toString=n.prototype.toHTML=function(){return""+this.string},e["default"]=n,t.exports=e["default"]},function(t,e,n){"use strict";function i(t){var e=t&&t[0]||1,n=v.COMPILER_REVISION;if(e!==n){if(e<n){var i=v.REVISION_CHANGES[n],o=v.REVISION_CHANGES[e];throw new g["default"]("Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version ("+i+") or downgrade your runtime to an older version ("+o+").")}throw new g["default"]("Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version ("+t[1]+").")}}function o(t,e){function n(n,i,o){o.hash&&(i=f.extend({},i,o.hash),o.ids&&(o.ids[0]=!0)),n=e.VM.resolvePartial.call(this,n,i,o);var r=e.VM.invokePartial.call(this,n,i,o);if(null==r&&e.compile&&(o.partials[o.name]=e.compile(n,t.compilerOptions,e),r=o.partials[o.name](i,o)),null!=r){if(o.indent){for(var s=r.split("\n"),a=0,l=s.length;a<l&&(s[a]||a+1!==l);a++)s[a]=o.indent+s[a];r=s.join("\n")}return r}throw new g["default"]("The partial "+o.name+" could not be compiled when running in runtime-only mode")}function i(e){function n(e){return""+t.main(o,e,o.helpers,o.partials,s,l,a)}var r=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],s=r.data;i._setup(r),!r.partial&&t.useData&&(s=c(e,s));var a=void 0,l=t.useBlockParams?[]:void 0;return t.useDepths&&(a=r.depths?e!==r.depths[0]?[e].concat(r.depths):r.depths:[e]),(n=u(t.main,n,o,r.depths||[],s,l))(e,r)}if(!e)throw new g["default"]("No environment passed to template");if(!t||!t.main)throw new g["default"]("Unknown template object: "+typeof t);t.main.decorator=t.main_d,e.VM.checkRevision(t.compiler);var o={strict:function(t,e){if(!(e in t))throw new g["default"]('"'+e+'" not defined in '+t);return t[e]},lookup:function(t,e){for(var n=t.length,i=0;i<n;i++)if(t[i]&&null!=t[i][e])return t[i][e]},lambda:function(t,e){return"function"==typeof t?t.call(e):t},escapeExpression:f.escapeExpression,invokePartial:n,fn:function(e){var n=t[e];return n.decorator=t[e+"_d"],n},programs:[],program:function(t,e,n,i,o){var s=this.programs[t],a=this.fn(t);return e||o||i||n?s=r(this,t,a,e,n,i,o):s||(s=this.programs[t]=r(this,t,a)),s},data:function(t,e){for(;t&&e--;)t=t._parent;return t},merge:function(t,e){var n=t||e;return t&&e&&t!==e&&(n=f.extend({},e,t)),n},noop:e.VM.noop,compilerInfo:t.compiler};return i.isTop=!0,i._setup=function(n){n.partial?(o.helpers=n.helpers,o.partials=n.partials,o.decorators=n.decorators):(o.helpers=o.merge(n.helpers,e.helpers),t.usePartial&&(o.partials=o.merge(n.partials,e.partials)),(t.usePartial||t.useDecorators)&&(o.decorators=o.merge(n.decorators,e.decorators)))},i._child=function(e,n,i,s){if(t.useBlockParams&&!i)throw new g["default"]("must pass block params");if(t.useDepths&&!s)throw new g["default"]("must pass parent depths");return r(o,e,t[e],n,0,i,s)},i}function r(t,e,n,i,o,r,s){function a(e){var o=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],a=s;return s&&e!==s[0]&&(a=[e].concat(s)),n(t,e,t.helpers,t.partials,o.data||i,r&&[o.blockParams].concat(r),a)}return a=u(n,a,t,s,i,r),a.program=e,a.depth=s?s.length:0,a.blockParams=o||0,a}function s(t,e,n){return t?t.call||n.name||(n.name=t,t=n.partials[t]):t="@partial-block"===n.name?n.data["partial-block"]:n.partials[n.name],t}function a(t,e,n){n.partial=!0,n.ids&&(n.data.contextPath=n.ids[0]||n.data.contextPath);var i=void 0;if(n.fn&&n.fn!==l&&(n.data=v.createFrame(n.data),i=n.data["partial-block"]=n.fn,i.partials&&(n.partials=f.extend({},n.partials,i.partials))),void 0===t&&i&&(t=i),void 0===t)throw new g["default"]("The partial "+n.name+" could not be found");if(t instanceof Function)return t(e,n)}function l(){return""}function c(t,e){return e&&"root"in e||(e=e?v.createFrame(e):{},e.root=t),e}function u(t,e,n,i,o,r){if(t.decorator){var s={};e=t.decorator(e,s,n,i&&i[0],o,r,i),f.extend(e,s)}return e}var p=n(3)["default"],h=n(1)["default"];e.__esModule=!0,e.checkRevision=i,e.template=o,e.wrapProgram=r,e.resolvePartial=s,e.invokePartial=a,e.noop=l;var d=n(5),f=p(d),m=n(6),g=h(m),v=n(4)},function(t,e){(function(n){"use strict";e.__esModule=!0,e["default"]=function(t){var e="undefined"!=typeof n?n:window,i=e.Handlebars;t.noConflict=function(){return e.Handlebars===t&&(e.Handlebars=i),t}},t.exports=e["default"]}).call(e,function(){return this}())},function(t,e){"use strict";e.__esModule=!0;var n={helpers:{helperExpression:function(t){return"SubExpression"===t.type||("MustacheStatement"===t.type||"BlockStatement"===t.type)&&!!(t.params&&t.params.length||t.hash)},scopedId:function(t){return/^\.|this\b/.test(t.original)},simpleId:function(t){return 1===t.parts.length&&!n.helpers.scopedId(t)&&!t.depth}}};e["default"]=n,t.exports=e["default"]},function(t,e,n){"use strict";function i(t,e){if("Program"===t.type)return t;a["default"].yy=d,d.locInfo=function(t){return new d.SourceLocation(e&&e.srcName,t)};var n=new c["default"](e);return n.accept(a["default"].parse(t))}var o=n(1)["default"],r=n(3)["default"];e.__esModule=!0,e.parse=i;var s=n(23),a=o(s),l=n(24),c=o(l),u=n(26),p=r(u),h=n(5);e.parser=a["default"];var d={};h.extend(d,p)},function(t,e){"use strict";var n=function(){function t(){this.yy={}}var e={trace:function(){},yy:{},symbols_:{error:2,root:3,program:4,EOF:5,program_repetition0:6,statement:7,mustache:8,block:9,rawBlock:10,partial:11,partialBlock:12,content:13,COMMENT:14,CONTENT:15,openRawBlock:16,rawBlock_repetition_plus0:17,END_RAW_BLOCK:18,OPEN_RAW_BLOCK:19,helperName:20,openRawBlock_repetition0:21,openRawBlock_option0:22,CLOSE_RAW_BLOCK:23,openBlock:24,block_option0:25,closeBlock:26,openInverse:27,block_option1:28,OPEN_BLOCK:29,openBlock_repetition0:30,openBlock_option0:31,openBlock_option1:32,CLOSE:33,OPEN_INVERSE:34,openInverse_repetition0:35,openInverse_option0:36,openInverse_option1:37,openInverseChain:38,OPEN_INVERSE_CHAIN:39,openInverseChain_repetition0:40,openInverseChain_option0:41,openInverseChain_option1:42,inverseAndProgram:43,INVERSE:44,inverseChain:45,inverseChain_option0:46,OPEN_ENDBLOCK:47,OPEN:48,mustache_repetition0:49,mustache_option0:50,OPEN_UNESCAPED:51,mustache_repetition1:52,mustache_option1:53,CLOSE_UNESCAPED:54,OPEN_PARTIAL:55,partialName:56,partial_repetition0:57,partial_option0:58,openPartialBlock:59,OPEN_PARTIAL_BLOCK:60,openPartialBlock_repetition0:61,openPartialBlock_option0:62,param:63,sexpr:64,OPEN_SEXPR:65,sexpr_repetition0:66,sexpr_option0:67,CLOSE_SEXPR:68,hash:69,hash_repetition_plus0:70,hashSegment:71,ID:72,EQUALS:73,blockParams:74,OPEN_BLOCK_PARAMS:75,blockParams_repetition_plus0:76,CLOSE_BLOCK_PARAMS:77,path:78,dataName:79,STRING:80,NUMBER:81,BOOLEAN:82,UNDEFINED:83,NULL:84,DATA:85,pathSegments:86,SEP:87,$accept:0,$end:1},terminals_:{2:"error",5:"EOF",14:"COMMENT",15:"CONTENT",18:"END_RAW_BLOCK",19:"OPEN_RAW_BLOCK",23:"CLOSE_RAW_BLOCK",29:"OPEN_BLOCK",33:"CLOSE",34:"OPEN_INVERSE",39:"OPEN_INVERSE_CHAIN",44:"INVERSE",47:"OPEN_ENDBLOCK",48:"OPEN",51:"OPEN_UNESCAPED",54:"CLOSE_UNESCAPED",55:"OPEN_PARTIAL",60:"OPEN_PARTIAL_BLOCK",65:"OPEN_SEXPR",68:"CLOSE_SEXPR",72:"ID",73:"EQUALS",75:"OPEN_BLOCK_PARAMS",77:"CLOSE_BLOCK_PARAMS",80:"STRING",81:"NUMBER",82:"BOOLEAN",83:"UNDEFINED",84:"NULL",85:"DATA",87:"SEP"},productions_:[0,[3,2],[4,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[13,1],[10,3],[16,5],[9,4],[9,4],[24,6],[27,6],[38,6],[43,2],[45,3],[45,1],[26,3],[8,5],[8,5],[11,5],[12,3],[59,5],[63,1],[63,1],[64,5],[69,1],[71,3],[74,3],[20,1],[20,1],[20,1],[20,1],[20,1],[20,1],[20,1],[56,1],[56,1],[79,2],[78,1],[86,3],[86,1],[6,0],[6,2],[17,1],[17,2],[21,0],[21,2],[22,0],[22,1],[25,0],[25,1],[28,0],[28,1],[30,0],[30,2],[31,0],[31,1],[32,0],[32,1],[35,0],[35,2],[36,0],[36,1],[37,0],[37,1],[40,0],[40,2],[41,0],[41,1],[42,0],[42,1],[46,0],[46,1],[49,0],[49,2],[50,0],[50,1],[52,0],[52,2],[53,0],[53,1],[57,0],[57,2],[58,0],[58,1],[61,0],[61,2],[62,0],[62,1],[66,0],[66,2],[67,0],[67,1],[70,1],[70,2],[76,1],[76,2]],performAction:function(t,e,n,i,o,r,s){var a=r.length-1;switch(o){case 1:return r[a-1];case 2:this.$=i.prepareProgram(r[a]);break;case 3:this.$=r[a];break;case 4:this.$=r[a];break;case 5:this.$=r[a];break;case 6:this.$=r[a];break;case 7:this.$=r[a];break;case 8:this.$=r[a];break;case 9:this.$={type:"CommentStatement",value:i.stripComment(r[a]),strip:i.stripFlags(r[a],r[a]),loc:i.locInfo(this._$)};break;case 10:this.$={type:"ContentStatement",original:r[a],value:r[a],loc:i.locInfo(this._$)};break;case 11:this.$=i.prepareRawBlock(r[a-2],r[a-1],r[a],this._$);break;case 12:this.$={path:r[a-3],params:r[a-2],hash:r[a-1]};break;case 13:this.$=i.prepareBlock(r[a-3],r[a-2],r[a-1],r[a],!1,this._$);break;case 14:this.$=i.prepareBlock(r[a-3],r[a-2],r[a-1],r[a],!0,this._$);break;case 15:this.$={open:r[a-5],path:r[a-4],params:r[a-3],hash:r[a-2],blockParams:r[a-1],strip:i.stripFlags(r[a-5],r[a])};break;case 16:this.$={path:r[a-4],params:r[a-3],hash:r[a-2],blockParams:r[a-1],strip:i.stripFlags(r[a-5],r[a])};break;case 17:this.$={path:r[a-4],params:r[a-3],hash:r[a-2],blockParams:r[a-1],strip:i.stripFlags(r[a-5],r[a])};break;case 18:this.$={strip:i.stripFlags(r[a-1],r[a-1]),program:r[a]};break;case 19:var l=i.prepareBlock(r[a-2],r[a-1],r[a],r[a],!1,this._$),c=i.prepareProgram([l],r[a-1].loc);c.chained=!0,this.$={strip:r[a-2].strip,program:c,chain:!0};break;case 20:this.$=r[a];break;case 21:this.$={path:r[a-1],strip:i.stripFlags(r[a-2],r[a])};break;case 22:this.$=i.prepareMustache(r[a-3],r[a-2],r[a-1],r[a-4],i.stripFlags(r[a-4],r[a]),this._$);break;case 23:this.$=i.prepareMustache(r[a-3],r[a-2],r[a-1],r[a-4],i.stripFlags(r[a-4],r[a]),this._$);break;case 24:this.$={type:"PartialStatement",name:r[a-3],params:r[a-2],hash:r[a-1],indent:"",strip:i.stripFlags(r[a-4],r[a]),loc:i.locInfo(this._$)};break;case 25:this.$=i.preparePartialBlock(r[a-2],r[a-1],r[a],this._$);break;case 26:this.$={path:r[a-3],params:r[a-2],hash:r[a-1],strip:i.stripFlags(r[a-4],r[a])};break;case 27:this.$=r[a];break;case 28:this.$=r[a];break;case 29:this.$={type:"SubExpression",path:r[a-3],params:r[a-2],hash:r[a-1],loc:i.locInfo(this._$)};break;case 30:this.$={type:"Hash",pairs:r[a],loc:i.locInfo(this._$)};break;case 31:this.$={type:"HashPair",key:i.id(r[a-2]),value:r[a],loc:i.locInfo(this._$)};break;case 32:this.$=i.id(r[a-1]);break;case 33:this.$=r[a];break;case 34:this.$=r[a];break;case 35:this.$={type:"StringLiteral",value:r[a],original:r[a],loc:i.locInfo(this._$)};break;case 36:this.$={type:"NumberLiteral",value:Number(r[a]),original:Number(r[a]),loc:i.locInfo(this._$)};break;case 37:this.$={type:"BooleanLiteral",value:"true"===r[a],original:"true"===r[a],loc:i.locInfo(this._$)};break;case 38:this.$={type:"UndefinedLiteral",original:void 0,value:void 0,loc:i.locInfo(this._$)};break;case 39:this.$={type:"NullLiteral",original:null,value:null,loc:i.locInfo(this._$)};break;case 40:this.$=r[a];break;case 41:this.$=r[a];break;case 42:this.$=i.preparePath(!0,r[a],this._$);break;case 43:this.$=i.preparePath(!1,r[a],this._$);break;case 44:r[a-2].push({part:i.id(r[a]),original:r[a],separator:r[a-1]}),this.$=r[a-2];break;case 45:this.$=[{part:i.id(r[a]),original:r[a]}];break;case 46:this.$=[];break;case 47:r[a-1].push(r[a]);break;case 48:this.$=[r[a]];break;case 49:r[a-1].push(r[a]);break;case 50:this.$=[];break;case 51:r[a-1].push(r[a]);break;case 58:this.$=[];break;case 59:r[a-1].push(r[a]);break;case 64:this.$=[];break;case 65:r[a-1].push(r[a]);break;case 70:this.$=[];break;case 71:r[a-1].push(r[a]);break;case 78:this.$=[];break;case 79:r[a-1].push(r[a]);break;case 82:this.$=[];break;case 83:r[a-1].push(r[a]);break;case 86:this.$=[];break;case 87:r[a-1].push(r[a]);break;case 90:this.$=[];break;case 91:r[a-1].push(r[a]);break;case 94:this.$=[];break;case 95:r[a-1].push(r[a]);break;case 98:this.$=[r[a]];break;case 99:r[a-1].push(r[a]);break;case 100:this.$=[r[a]];break;case 101:r[a-1].push(r[a])}},table:[{3:1,4:2,5:[2,46],6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{1:[3]},{5:[1,4]},{5:[2,2],7:5,8:6,9:7,10:8,11:9,12:10,13:11,14:[1,12],15:[1,20],16:17,19:[1,23],24:15,27:16,29:[1,21],34:[1,22],39:[2,2],44:[2,2],47:[2,2],48:[1,13],51:[1,14],55:[1,18],59:19,60:[1,24]},{1:[2,1]},{5:[2,47],14:[2,47],15:[2,47],19:[2,47],29:[2,47],34:[2,47],39:[2,47],44:[2,47],47:[2,47],48:[2,47],51:[2,47],55:[2,47],60:[2,47]},{5:[2,3],14:[2,3],15:[2,3],19:[2,3],29:[2,3],34:[2,3],39:[2,3],44:[2,3],47:[2,3],48:[2,3],51:[2,3],55:[2,3],60:[2,3]},{5:[2,4],14:[2,4],15:[2,4],19:[2,4],29:[2,4],34:[2,4],39:[2,4],44:[2,4],47:[2,4],48:[2,4],51:[2,4],55:[2,4],60:[2,4]},{5:[2,5],14:[2,5],15:[2,5],19:[2,5],29:[2,5],34:[2,5],39:[2,5],44:[2,5],47:[2,5],48:[2,5],51:[2,5],55:[2,5],60:[2,5]},{5:[2,6],14:[2,6],15:[2,6],19:[2,6],29:[2,6],34:[2,6],39:[2,6],44:[2,6],47:[2,6],48:[2,6],51:[2,6],55:[2,6],60:[2,6]},{5:[2,7],14:[2,7],15:[2,7],19:[2,7],29:[2,7],34:[2,7],39:[2,7],44:[2,7],47:[2,7],48:[2,7],51:[2,7],55:[2,7],60:[2,7]},{5:[2,8],14:[2,8],15:[2,8],19:[2,8],29:[2,8],34:[2,8],39:[2,8],44:[2,8],47:[2,8],48:[2,8],51:[2,8],55:[2,8],60:[2,8]},{5:[2,9],14:[2,9],15:[2,9],19:[2,9],29:[2,9],34:[2,9],39:[2,9],44:[2,9],47:[2,9],48:[2,9],51:[2,9],55:[2,9],60:[2,9]},{20:25,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:36,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:37,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],39:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{4:38,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{13:40,15:[1,20],17:39},{20:42,56:41,64:43,65:[1,44],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:45,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{5:[2,10],14:[2,10],15:[2,10],18:[2,10],19:[2,10],29:[2,10],34:[2,10],39:[2,10],44:[2,10],47:[2,10],48:[2,10],51:[2,10],55:[2,10],60:[2,10]},{20:46,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:47,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:48,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:42,56:49,64:43,65:[1,44],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[2,78],49:50,65:[2,78],72:[2,78],80:[2,78],81:[2,78],82:[2,78],83:[2,78],84:[2,78],85:[2,78]},{23:[2,33],33:[2,33],54:[2,33],65:[2,33],68:[2,33],72:[2,33],75:[2,33],80:[2,33],81:[2,33],82:[2,33],83:[2,33],84:[2,33],85:[2,33]},{23:[2,34],33:[2,34],54:[2,34],65:[2,34],68:[2,34],72:[2,34],75:[2,34],80:[2,34],81:[2,34],82:[2,34],83:[2,34],84:[2,34],85:[2,34]},{23:[2,35],33:[2,35],54:[2,35],65:[2,35],68:[2,35],72:[2,35],75:[2,35],80:[2,35],81:[2,35],82:[2,35],83:[2,35],84:[2,35],85:[2,35]},{23:[2,36],33:[2,36],54:[2,36],65:[2,36],68:[2,36],72:[2,36],75:[2,36],80:[2,36],81:[2,36],82:[2,36],83:[2,36],84:[2,36],85:[2,36]},{23:[2,37],33:[2,37],54:[2,37],65:[2,37],68:[2,37],72:[2,37],75:[2,37],80:[2,37],81:[2,37],82:[2,37],83:[2,37],84:[2,37],85:[2,37]},{23:[2,38],33:[2,38],54:[2,38],65:[2,38],68:[2,38],72:[2,38],75:[2,38],80:[2,38],81:[2,38],82:[2,38],83:[2,38],84:[2,38],85:[2,38]},{23:[2,39],33:[2,39],54:[2,39],65:[2,39],68:[2,39],72:[2,39],75:[2,39],80:[2,39],81:[2,39],82:[2,39],83:[2,39],84:[2,39],85:[2,39]},{23:[2,43],33:[2,43],54:[2,43],65:[2,43],68:[2,43],72:[2,43],75:[2,43],80:[2,43],81:[2,43],82:[2,43],83:[2,43],84:[2,43],85:[2,43],87:[1,51]},{72:[1,35],86:52},{23:[2,45],33:[2,45],54:[2,45],65:[2,45],68:[2,45],72:[2,45],75:[2,45],80:[2,45],81:[2,45],82:[2,45],83:[2,45],84:[2,45],85:[2,45],87:[2,45]},{52:53,54:[2,82],65:[2,82],72:[2,82],80:[2,82],81:[2,82],82:[2,82],83:[2,82],84:[2,82],85:[2,82]},{25:54,38:56,39:[1,58],43:57,44:[1,59],45:55,47:[2,54]},{28:60,43:61,44:[1,59],47:[2,56]},{13:63,15:[1,20],18:[1,62]},{15:[2,48],18:[2,48]},{33:[2,86],57:64,65:[2,86],72:[2,86],80:[2,86],81:[2,86],82:[2,86],83:[2,86],84:[2,86],85:[2,86]},{33:[2,40],65:[2,40],72:[2,40],80:[2,40],81:[2,40],82:[2,40],83:[2,40],84:[2,40],85:[2,40]},{33:[2,41],65:[2,41],72:[2,41],80:[2,41],81:[2,41],82:[2,41],83:[2,41],84:[2,41],85:[2,41]},{20:65,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{26:66,47:[1,67]},{30:68,33:[2,58],65:[2,58],72:[2,58],75:[2,58],80:[2,58],81:[2,58],82:[2,58],83:[2,58],84:[2,58],85:[2,58]},{33:[2,64],35:69,65:[2,64],72:[2,64],75:[2,64],80:[2,64],81:[2,64],82:[2,64],83:[2,64],84:[2,64],85:[2,64]},{21:70,23:[2,50],65:[2,50],72:[2,50],80:[2,50],81:[2,50],82:[2,50],83:[2,50],84:[2,50],85:[2,50]},{33:[2,90],61:71,65:[2,90],72:[2,90],80:[2,90],81:[2,90],82:[2,90],83:[2,90],84:[2,90],85:[2,90]},{20:75,33:[2,80],50:72,63:73,64:76,65:[1,44],69:74,70:77,71:78,72:[1,79],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{72:[1,80]},{23:[2,42],33:[2,42],54:[2,42],65:[2,42],68:[2,42],72:[2,42],75:[2,42],80:[2,42],81:[2,42],82:[2,42],83:[2,42],84:[2,42],85:[2,42],87:[1,51]},{20:75,53:81,54:[2,84],63:82,64:76,65:[1,44],69:83,70:77,71:78,72:[1,79],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{26:84,47:[1,67]},{47:[2,55]},{4:85,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],39:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{47:[2,20]},{20:86,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:87,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{26:88,47:[1,67]},{47:[2,57]},{5:[2,11],14:[2,11],15:[2,11],19:[2,11],29:[2,11],34:[2,11],39:[2,11],44:[2,11],47:[2,11],48:[2,11],51:[2,11],55:[2,11],60:[2,11]},{15:[2,49],18:[2,49]},{20:75,33:[2,88],58:89,63:90,64:76,65:[1,44],69:91,70:77,71:78,72:[1,79],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{65:[2,94],66:92,68:[2,94],72:[2,94],80:[2,94],81:[2,94],82:[2,94],83:[2,94],84:[2,94],85:[2,94]},{5:[2,25],14:[2,25],15:[2,25],19:[2,25],29:[2,25],34:[2,25],39:[2,25],44:[2,25],47:[2,25],48:[2,25],51:[2,25],55:[2,25],60:[2,25]},{20:93,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:75,31:94,33:[2,60],63:95,64:76,65:[1,44],69:96,70:77,71:78,72:[1,79],75:[2,60],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:75,33:[2,66],36:97,63:98,64:76,65:[1,44],69:99,70:77,71:78,72:[1,79],75:[2,66],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:75,22:100,23:[2,52],63:101,64:76,65:[1,44],69:102,70:77,71:78,72:[1,79],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:75,33:[2,92],62:103,63:104,64:76,65:[1,44],69:105,70:77,71:78,72:[1,79],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[1,106]},{33:[2,79],65:[2,79],72:[2,79],80:[2,79],81:[2,79],82:[2,79],83:[2,79],84:[2,79],85:[2,79]},{33:[2,81]},{23:[2,27],33:[2,27],54:[2,27],65:[2,27],68:[2,27],72:[2,27],75:[2,27],80:[2,27],81:[2,27],82:[2,27],83:[2,27],84:[2,27],85:[2,27]},{23:[2,28],33:[2,28],54:[2,28],65:[2,28],68:[2,28],72:[2,28],75:[2,28],80:[2,28],81:[2,28],82:[2,28],83:[2,28],84:[2,28],85:[2,28]},{23:[2,30],33:[2,30],54:[2,30],68:[2,30],71:107,72:[1,108],75:[2,30]},{23:[2,98],33:[2,98],54:[2,98],68:[2,98],72:[2,98],75:[2,98]},{23:[2,45],33:[2,45],54:[2,45],65:[2,45],68:[2,45],72:[2,45],73:[1,109],75:[2,45],80:[2,45],81:[2,45],82:[2,45],83:[2,45],84:[2,45],85:[2,45],87:[2,45]},{23:[2,44],33:[2,44],54:[2,44],65:[2,44],68:[2,44],72:[2,44],75:[2,44],80:[2,44],81:[2,44],82:[2,44],83:[2,44],84:[2,44],85:[2,44],87:[2,44]},{54:[1,110]},{54:[2,83],65:[2,83],72:[2,83],80:[2,83],81:[2,83],82:[2,83],83:[2,83],84:[2,83],85:[2,83]},{54:[2,85]},{5:[2,13],14:[2,13],15:[2,13],19:[2,13],29:[2,13],34:[2,13],39:[2,13],44:[2,13],47:[2,13],48:[2,13],51:[2,13],55:[2,13],60:[2,13]},{38:56,39:[1,58],43:57,44:[1,59],45:112,46:111,47:[2,76]},{33:[2,70],40:113,65:[2,70],72:[2,70],75:[2,70],80:[2,70],81:[2,70],82:[2,70],83:[2,70],84:[2,70],85:[2,70]},{47:[2,18]},{5:[2,14],14:[2,14],15:[2,14],19:[2,14],29:[2,14],34:[2,14],39:[2,14],44:[2,14],47:[2,14],48:[2,14],51:[2,14],55:[2,14],60:[2,14]},{33:[1,114]},{33:[2,87],65:[2,87],72:[2,87],80:[2,87],81:[2,87],82:[2,87],83:[2,87],84:[2,87],85:[2,87]},{33:[2,89]},{20:75,63:116,64:76,65:[1,44],67:115,68:[2,96],69:117,70:77,71:78,72:[1,79],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[1,118]},{32:119,33:[2,62],74:120,75:[1,121]},{33:[2,59],65:[2,59],72:[2,59],75:[2,59],80:[2,59],81:[2,59],82:[2,59],83:[2,59],84:[2,59],85:[2,59]},{33:[2,61],75:[2,61]},{33:[2,68],37:122,74:123,75:[1,121]},{33:[2,65],65:[2,65],72:[2,65],75:[2,65],80:[2,65],81:[2,65],82:[2,65],83:[2,65],84:[2,65],85:[2,65]},{33:[2,67],75:[2,67]},{23:[1,124]},{23:[2,51],65:[2,51],72:[2,51],80:[2,51],81:[2,51],82:[2,51],83:[2,51],84:[2,51],85:[2,51]},{23:[2,53]},{33:[1,125]},{33:[2,91],65:[2,91],72:[2,91],80:[2,91],81:[2,91],82:[2,91],83:[2,91],84:[2,91],85:[2,91]},{33:[2,93]},{5:[2,22],14:[2,22],15:[2,22],19:[2,22],29:[2,22],34:[2,22],39:[2,22],44:[2,22],47:[2,22],48:[2,22],51:[2,22],55:[2,22],60:[2,22]},{23:[2,99],33:[2,99],54:[2,99],68:[2,99],72:[2,99],75:[2,99]},{73:[1,109]},{20:75,63:126,64:76,65:[1,44],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{5:[2,23],14:[2,23],15:[2,23],19:[2,23],29:[2,23],34:[2,23],39:[2,23],44:[2,23],47:[2,23],48:[2,23],51:[2,23],55:[2,23],60:[2,23]},{47:[2,19]},{47:[2,77]},{20:75,33:[2,72],41:127,63:128,64:76,65:[1,44],69:129,70:77,71:78,72:[1,79],75:[2,72],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{5:[2,24],14:[2,24],15:[2,24],19:[2,24],29:[2,24],34:[2,24],39:[2,24],44:[2,24],47:[2,24],48:[2,24],51:[2,24],55:[2,24],60:[2,24]},{68:[1,130]},{65:[2,95],68:[2,95],72:[2,95],80:[2,95],81:[2,95],82:[2,95],83:[2,95],84:[2,95],85:[2,95]},{68:[2,97]},{5:[2,21],14:[2,21],15:[2,21],19:[2,21],29:[2,21],34:[2,21],39:[2,21],44:[2,21],47:[2,21],48:[2,21],51:[2,21],55:[2,21],60:[2,21]},{33:[1,131]},{33:[2,63]},{72:[1,133],76:132},{33:[1,134]},{33:[2,69]},{15:[2,12]},{14:[2,26],15:[2,26],19:[2,26],29:[2,26],34:[2,26],47:[2,26],48:[2,26],51:[2,26],55:[2,26],60:[2,26]},{23:[2,31],33:[2,31],54:[2,31],68:[2,31],72:[2,31],75:[2,31]},{33:[2,74],42:135,74:136,75:[1,121]},{33:[2,71],65:[2,71],72:[2,71],75:[2,71],80:[2,71],81:[2,71],82:[2,71],83:[2,71],84:[2,71],85:[2,71]},{33:[2,73],75:[2,73]},{23:[2,29],33:[2,29],54:[2,29],65:[2,29],68:[2,29],72:[2,29],75:[2,29],80:[2,29],81:[2,29],82:[2,29],83:[2,29],84:[2,29],85:[2,29]},{14:[2,15],15:[2,15],19:[2,15],29:[2,15],34:[2,15],39:[2,15],44:[2,15],47:[2,15],48:[2,15],51:[2,15],55:[2,15],60:[2,15]},{72:[1,138],77:[1,137]},{72:[2,100],77:[2,100]},{14:[2,16],15:[2,16],19:[2,16],29:[2,16],34:[2,16],44:[2,16],47:[2,16],48:[2,16],51:[2,16],55:[2,16],60:[2,16]},{33:[1,139]},{33:[2,75]},{33:[2,32]},{72:[2,101],77:[2,101]},{14:[2,17],15:[2,17],19:[2,17],29:[2,17],34:[2,17],39:[2,17],44:[2,17],
47:[2,17],48:[2,17],51:[2,17],55:[2,17],60:[2,17]}],defaultActions:{4:[2,1],55:[2,55],57:[2,20],61:[2,57],74:[2,81],83:[2,85],87:[2,18],91:[2,89],102:[2,53],105:[2,93],111:[2,19],112:[2,77],117:[2,97],120:[2,63],123:[2,69],124:[2,12],136:[2,75],137:[2,32]},parseError:function(t,e){throw new Error(t)},parse:function(t){function e(){var t;return t=n.lexer.lex()||1,"number"!=typeof t&&(t=n.symbols_[t]||t),t}var n=this,i=[0],o=[null],r=[],s=this.table,a="",l=0,c=0,u=0;this.lexer.setInput(t),this.lexer.yy=this.yy,this.yy.lexer=this.lexer,this.yy.parser=this,"undefined"==typeof this.lexer.yylloc&&(this.lexer.yylloc={});var p=this.lexer.yylloc;r.push(p);var h=this.lexer.options&&this.lexer.options.ranges;"function"==typeof this.yy.parseError&&(this.parseError=this.yy.parseError);for(var d,f,m,g,v,y,_,b,w,S={};;){if(m=i[i.length-1],this.defaultActions[m]?g=this.defaultActions[m]:(null!==d&&"undefined"!=typeof d||(d=e()),g=s[m]&&s[m][d]),"undefined"==typeof g||!g.length||!g[0]){var k="";if(!u){w=[];for(y in s[m])this.terminals_[y]&&y>2&&w.push("'"+this.terminals_[y]+"'");k=this.lexer.showPosition?"Parse error on line "+(l+1)+":\n"+this.lexer.showPosition()+"\nExpecting "+w.join(", ")+", got '"+(this.terminals_[d]||d)+"'":"Parse error on line "+(l+1)+": Unexpected "+(1==d?"end of input":"'"+(this.terminals_[d]||d)+"'"),this.parseError(k,{text:this.lexer.match,token:this.terminals_[d]||d,line:this.lexer.yylineno,loc:p,expected:w})}}if(g[0]instanceof Array&&g.length>1)throw new Error("Parse Error: multiple actions possible at state: "+m+", token: "+d);switch(g[0]){case 1:i.push(d),o.push(this.lexer.yytext),r.push(this.lexer.yylloc),i.push(g[1]),d=null,f?(d=f,f=null):(c=this.lexer.yyleng,a=this.lexer.yytext,l=this.lexer.yylineno,p=this.lexer.yylloc,u>0&&u--);break;case 2:if(_=this.productions_[g[1]][1],S.$=o[o.length-_],S._$={first_line:r[r.length-(_||1)].first_line,last_line:r[r.length-1].last_line,first_column:r[r.length-(_||1)].first_column,last_column:r[r.length-1].last_column},h&&(S._$.range=[r[r.length-(_||1)].range[0],r[r.length-1].range[1]]),v=this.performAction.call(S,a,c,l,this.yy,g[1],o,r),"undefined"!=typeof v)return v;_&&(i=i.slice(0,-1*_*2),o=o.slice(0,-1*_),r=r.slice(0,-1*_)),i.push(this.productions_[g[1]][0]),o.push(S.$),r.push(S._$),b=s[i[i.length-2]][i[i.length-1]],i.push(b);break;case 3:return!0}}return!0}},n=function(){var t={EOF:1,parseError:function(t,e){if(!this.yy.parser)throw new Error(t);this.yy.parser.parseError(t,e)},setInput:function(t){return this._input=t,this._more=this._less=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var t=this._input[0];this.yytext+=t,this.yyleng++,this.offset++,this.match+=t,this.matched+=t;var e=t.match(/(?:\r\n?|\n).*/g);return e?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),t},unput:function(t){var e=t.length,n=t.split(/(?:\r\n?|\n)/g);this._input=t+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-e-1),this.offset-=e;var i=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),n.length-1&&(this.yylineno-=n.length-1);var o=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:n?(n.length===i.length?this.yylloc.first_column:0)+i[i.length-n.length].length-n[0].length:this.yylloc.first_column-e},this.options.ranges&&(this.yylloc.range=[o[0],o[0]+this.yyleng-e]),this},more:function(){return this._more=!0,this},less:function(t){this.unput(this.match.slice(t))},pastInput:function(){var t=this.matched.substr(0,this.matched.length-this.match.length);return(t.length>20?"...":"")+t.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var t=this.match;return t.length<20&&(t+=this._input.substr(0,20-t.length)),(t.substr(0,20)+(t.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var t=this.pastInput(),e=new Array(t.length+1).join("-");return t+this.upcomingInput()+"\n"+e+"^"},next:function(){if(this.done)return this.EOF;this._input||(this.done=!0);var t,e,n,i,o;this._more||(this.yytext="",this.match="");for(var r=this._currentRules(),s=0;s<r.length&&(n=this._input.match(this.rules[r[s]]),!n||e&&!(n[0].length>e[0].length)||(e=n,i=s,this.options.flex));s++);return e?(o=e[0].match(/(?:\r\n?|\n).*/g),o&&(this.yylineno+=o.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:o?o[o.length-1].length-o[o.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+e[0].length},this.yytext+=e[0],this.match+=e[0],this.matches=e,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._input=this._input.slice(e[0].length),this.matched+=e[0],t=this.performAction.call(this,this.yy,this,r[i],this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),t?t:void 0):""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){var t=this.next();return"undefined"!=typeof t?t:this.lex()},begin:function(t){this.conditionStack.push(t)},popState:function(){return this.conditionStack.pop()},_currentRules:function(){return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules},topState:function(){return this.conditionStack[this.conditionStack.length-2]},pushState:function(t){this.begin(t)}};return t.options={},t.performAction=function(t,e,n,i){function o(t,n){return e.yytext=e.yytext.substr(t,e.yyleng-n)}switch(n){case 0:if("\\\\"===e.yytext.slice(-2)?(o(0,1),this.begin("mu")):"\\"===e.yytext.slice(-1)?(o(0,1),this.begin("emu")):this.begin("mu"),e.yytext)return 15;break;case 1:return 15;case 2:return this.popState(),15;case 3:return this.begin("raw"),15;case 4:return this.popState(),"raw"===this.conditionStack[this.conditionStack.length-1]?15:(e.yytext=e.yytext.substr(5,e.yyleng-9),"END_RAW_BLOCK");case 5:return 15;case 6:return this.popState(),14;case 7:return 65;case 8:return 68;case 9:return 19;case 10:return this.popState(),this.begin("raw"),23;case 11:return 55;case 12:return 60;case 13:return 29;case 14:return 47;case 15:return this.popState(),44;case 16:return this.popState(),44;case 17:return 34;case 18:return 39;case 19:return 51;case 20:return 48;case 21:this.unput(e.yytext),this.popState(),this.begin("com");break;case 22:return this.popState(),14;case 23:return 48;case 24:return 73;case 25:return 72;case 26:return 72;case 27:return 87;case 28:break;case 29:return this.popState(),54;case 30:return this.popState(),33;case 31:return e.yytext=o(1,2).replace(/\\"/g,'"'),80;case 32:return e.yytext=o(1,2).replace(/\\'/g,"'"),80;case 33:return 85;case 34:return 82;case 35:return 82;case 36:return 83;case 37:return 84;case 38:return 81;case 39:return 75;case 40:return 77;case 41:return 72;case 42:return e.yytext=e.yytext.replace(/\\([\\\]])/g,"$1"),72;case 43:return"INVALID";case 44:return 5}},t.rules=[/^(?:[^\x00]*?(?=(\{\{)))/,/^(?:[^\x00]+)/,/^(?:[^\x00]{2,}?(?=(\{\{|\\\{\{|\\\\\{\{|$)))/,/^(?:\{\{\{\{(?=[^\/]))/,/^(?:\{\{\{\{\/[^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=[=}\s\/.])\}\}\}\})/,/^(?:[^\x00]*?(?=(\{\{\{\{)))/,/^(?:[\s\S]*?--(~)?\}\})/,/^(?:\()/,/^(?:\))/,/^(?:\{\{\{\{)/,/^(?:\}\}\}\})/,/^(?:\{\{(~)?>)/,/^(?:\{\{(~)?#>)/,/^(?:\{\{(~)?#\*?)/,/^(?:\{\{(~)?\/)/,/^(?:\{\{(~)?\^\s*(~)?\}\})/,/^(?:\{\{(~)?\s*else\s*(~)?\}\})/,/^(?:\{\{(~)?\^)/,/^(?:\{\{(~)?\s*else\b)/,/^(?:\{\{(~)?\{)/,/^(?:\{\{(~)?&)/,/^(?:\{\{(~)?!--)/,/^(?:\{\{(~)?![\s\S]*?\}\})/,/^(?:\{\{(~)?\*?)/,/^(?:=)/,/^(?:\.\.)/,/^(?:\.(?=([=~}\s\/.)|])))/,/^(?:[\/.])/,/^(?:\s+)/,/^(?:\}(~)?\}\})/,/^(?:(~)?\}\})/,/^(?:"(\\["]|[^"])*")/,/^(?:'(\\[']|[^'])*')/,/^(?:@)/,/^(?:true(?=([~}\s)])))/,/^(?:false(?=([~}\s)])))/,/^(?:undefined(?=([~}\s)])))/,/^(?:null(?=([~}\s)])))/,/^(?:-?[0-9]+(?:\.[0-9]+)?(?=([~}\s)])))/,/^(?:as\s+\|)/,/^(?:\|)/,/^(?:([^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=([=~}\s\/.)|]))))/,/^(?:\[(\\\]|[^\]])*\])/,/^(?:.)/,/^(?:$)/],t.conditions={mu:{rules:[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],inclusive:!1},emu:{rules:[2],inclusive:!1},com:{rules:[6],inclusive:!1},raw:{rules:[3,4,5],inclusive:!1},INITIAL:{rules:[0,1,44],inclusive:!0}},t}();return e.lexer=n,t.prototype=e,e.Parser=t,new t}();e.__esModule=!0,e["default"]=n},function(t,e,n){"use strict";function i(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];this.options=t}function o(t,e,n){void 0===e&&(e=t.length);var i=t[e-1],o=t[e-2];return i?"ContentStatement"===i.type?(o||!n?/\r?\n\s*?$/:/(^|\r?\n)\s*?$/).test(i.original):void 0:n}function r(t,e,n){void 0===e&&(e=-1);var i=t[e+1],o=t[e+2];return i?"ContentStatement"===i.type?(o||!n?/^\s*?\r?\n/:/^\s*?(\r?\n|$)/).test(i.original):void 0:n}function s(t,e,n){var i=t[null==e?0:e+1];if(i&&"ContentStatement"===i.type&&(n||!i.rightStripped)){var o=i.value;i.value=i.value.replace(n?/^\s+/:/^[ \t]*\r?\n?/,""),i.rightStripped=i.value!==o}}function a(t,e,n){var i=t[null==e?t.length-1:e-1];if(i&&"ContentStatement"===i.type&&(n||!i.leftStripped)){var o=i.value;return i.value=i.value.replace(n?/\s+$/:/[ \t]+$/,""),i.leftStripped=i.value!==o,i.leftStripped}}var l=n(1)["default"];e.__esModule=!0;var c=n(25),u=l(c);i.prototype=new u["default"],i.prototype.Program=function(t){var e=!this.options.ignoreStandalone,n=!this.isRootSeen;this.isRootSeen=!0;for(var i=t.body,l=0,c=i.length;l<c;l++){var u=i[l],p=this.accept(u);if(p){var h=o(i,l,n),d=r(i,l,n),f=p.openStandalone&&h,m=p.closeStandalone&&d,g=p.inlineStandalone&&h&&d;p.close&&s(i,l,!0),p.open&&a(i,l,!0),e&&g&&(s(i,l),a(i,l)&&"PartialStatement"===u.type&&(u.indent=/([ \t]+$)/.exec(i[l-1].original)[1])),e&&f&&(s((u.program||u.inverse).body),a(i,l)),e&&m&&(s(i,l),a((u.inverse||u.program).body))}}return t},i.prototype.BlockStatement=i.prototype.DecoratorBlock=i.prototype.PartialBlockStatement=function(t){this.accept(t.program),this.accept(t.inverse);var e=t.program||t.inverse,n=t.program&&t.inverse,i=n,l=n;if(n&&n.chained)for(i=n.body[0].program;l.chained;)l=l.body[l.body.length-1].program;var c={open:t.openStrip.open,close:t.closeStrip.close,openStandalone:r(e.body),closeStandalone:o((i||e).body)};if(t.openStrip.close&&s(e.body,null,!0),n){var u=t.inverseStrip;u.open&&a(e.body,null,!0),u.close&&s(i.body,null,!0),t.closeStrip.open&&a(l.body,null,!0),!this.options.ignoreStandalone&&o(e.body)&&r(i.body)&&(a(e.body),s(i.body))}else t.closeStrip.open&&a(e.body,null,!0);return c},i.prototype.Decorator=i.prototype.MustacheStatement=function(t){return t.strip},i.prototype.PartialStatement=i.prototype.CommentStatement=function(t){var e=t.strip||{};return{inlineStandalone:!0,open:e.open,close:e.close}},e["default"]=i,t.exports=e["default"]},function(t,e,n){"use strict";function i(){this.parents=[]}function o(t){this.acceptRequired(t,"path"),this.acceptArray(t.params),this.acceptKey(t,"hash")}function r(t){o.call(this,t),this.acceptKey(t,"program"),this.acceptKey(t,"inverse")}function s(t){this.acceptRequired(t,"name"),this.acceptArray(t.params),this.acceptKey(t,"hash")}var a=n(1)["default"];e.__esModule=!0;var l=n(6),c=a(l);i.prototype={constructor:i,mutating:!1,acceptKey:function(t,e){var n=this.accept(t[e]);if(this.mutating){if(n&&!i.prototype[n.type])throw new c["default"]('Unexpected node type "'+n.type+'" found when accepting '+e+" on "+t.type);t[e]=n}},acceptRequired:function(t,e){if(this.acceptKey(t,e),!t[e])throw new c["default"](t.type+" requires "+e)},acceptArray:function(t){for(var e=0,n=t.length;e<n;e++)this.acceptKey(t,e),t[e]||(t.splice(e,1),e--,n--)},accept:function(t){if(t){if(!this[t.type])throw new c["default"]("Unknown type: "+t.type,t);this.current&&this.parents.unshift(this.current),this.current=t;var e=this[t.type](t);return this.current=this.parents.shift(),!this.mutating||e?e:e!==!1?t:void 0}},Program:function(t){this.acceptArray(t.body)},MustacheStatement:o,Decorator:o,BlockStatement:r,DecoratorBlock:r,PartialStatement:s,PartialBlockStatement:function(t){s.call(this,t),this.acceptKey(t,"program")},ContentStatement:function(){},CommentStatement:function(){},SubExpression:o,PathExpression:function(){},StringLiteral:function(){},NumberLiteral:function(){},BooleanLiteral:function(){},UndefinedLiteral:function(){},NullLiteral:function(){},Hash:function(t){this.acceptArray(t.pairs)},HashPair:function(t){this.acceptRequired(t,"value")}},e["default"]=i,t.exports=e["default"]},function(t,e,n){"use strict";function i(t,e){if(e=e.path?e.path.original:e,t.path.original!==e){var n={loc:t.path.loc};throw new g["default"](t.path.original+" doesn't match "+e,n)}}function o(t,e){thi", "base64"));
  res.write(new Buffer("s.source=t,this.start={line:e.first_line,column:e.first_column},this.end={line:e.last_line,column:e.last_column}}function r(t){return/^\[.*\]$/.test(t)?t.substr(1,t.length-2):t}function s(t,e){return{open:"~"===t.charAt(2),close:"~"===e.charAt(e.length-3)}}function a(t){return t.replace(/^\{\{~?\!-?-?/,"").replace(/-?-?~?\}\}$/,"")}function l(t,e,n){n=this.locInfo(n);for(var i=t?"@":"",o=[],r=0,s="",a=0,l=e.length;a<l;a++){var c=e[a].part,u=e[a].original!==c;if(i+=(e[a].separator||"")+c,u||".."!==c&&"."!==c&&"this"!==c)o.push(c);else{if(o.length>0)throw new g["default"]("Invalid path: "+i,{loc:n});".."===c&&(r++,s+="../")}}return{type:"PathExpression",data:t,depth:r,parts:o,original:i,loc:n}}function c(t,e,n,i,o,r){var s=i.charAt(3)||i.charAt(2),a="{"!==s&&"&"!==s,l=/\*/.test(i);return{type:l?"Decorator":"MustacheStatement",path:t,params:e,hash:n,escaped:a,strip:o,loc:this.locInfo(r)}}function u(t,e,n,o){i(t,n),o=this.locInfo(o);var r={type:"Program",body:e,strip:{},loc:o};return{type:"BlockStatement",path:t.path,params:t.params,hash:t.hash,program:r,openStrip:{},inverseStrip:{},closeStrip:{},loc:o}}function p(t,e,n,o,r,s){o&&o.path&&i(t,o);var a=/\*/.test(t.open);e.blockParams=t.blockParams;var l=void 0,c=void 0;if(n){if(a)throw new g["default"]("Unexpected inverse block on decorator",n);n.chain&&(n.program.body[0].closeStrip=o.strip),c=n.strip,l=n.program}return r&&(r=l,l=e,e=r),{type:a?"DecoratorBlock":"BlockStatement",path:t.path,params:t.params,hash:t.hash,program:e,inverse:l,openStrip:t.strip,inverseStrip:c,closeStrip:o&&o.strip,loc:this.locInfo(s)}}function h(t,e){if(!e&&t.length){var n=t[0].loc,i=t[t.length-1].loc;n&&i&&(e={source:n.source,start:{line:n.start.line,column:n.start.column},end:{line:i.end.line,column:i.end.column}})}return{type:"Program",body:t,strip:{},loc:e}}function d(t,e,n,o){return i(t,n),{type:"PartialBlockStatement",name:t.path,params:t.params,hash:t.hash,program:e,openStrip:t.strip,closeStrip:n&&n.strip,loc:this.locInfo(o)}}var f=n(1)["default"];e.__esModule=!0,e.SourceLocation=o,e.id=r,e.stripFlags=s,e.stripComment=a,e.preparePath=l,e.prepareMustache=c,e.prepareRawBlock=u,e.prepareBlock=p,e.prepareProgram=h,e.preparePartialBlock=d;var m=n(6),g=f(m)},function(t,e,n){"use strict";function i(){}function o(t,e,n){if(null==t||"string"!=typeof t&&"Program"!==t.type)throw new u["default"]("You must pass a string or Handlebars AST to Handlebars.precompile. You passed "+t);e=e||{},"data"in e||(e.data=!0),e.compat&&(e.useDepths=!0);var i=n.parse(t,e),o=(new n.Compiler).compile(i,e);return(new n.JavaScriptCompiler).compile(o,e)}function r(t,e,n){function i(){var i=n.parse(t,e),o=(new n.Compiler).compile(i,e),r=(new n.JavaScriptCompiler).compile(o,e,void 0,!0);return n.template(r)}function o(t,e){return r||(r=i()),r.call(this,t,e)}if(void 0===e&&(e={}),null==t||"string"!=typeof t&&"Program"!==t.type)throw new u["default"]("You must pass a string or Handlebars AST to Handlebars.compile. You passed "+t);"data"in e||(e.data=!0),e.compat&&(e.useDepths=!0);var r=void 0;return o._setup=function(t){return r||(r=i()),r._setup(t)},o._child=function(t,e,n,o){return r||(r=i()),r._child(t,e,n,o)},o}function s(t,e){if(t===e)return!0;if(p.isArray(t)&&p.isArray(e)&&t.length===e.length){for(var n=0;n<t.length;n++)if(!s(t[n],e[n]))return!1;return!0}}function a(t){if(!t.path.parts){var e=t.path;t.path={type:"PathExpression",data:!1,depth:0,parts:[e.original+""],original:e.original+"",loc:e.loc}}}var l=n(1)["default"];e.__esModule=!0,e.Compiler=i,e.precompile=o,e.compile=r;var c=n(6),u=l(c),p=n(5),h=n(21),d=l(h),f=[].slice;i.prototype={compiler:i,equals:function(t){var e=this.opcodes.length;if(t.opcodes.length!==e)return!1;for(var n=0;n<e;n++){var i=this.opcodes[n],o=t.opcodes[n];if(i.opcode!==o.opcode||!s(i.args,o.args))return!1}e=this.children.length;for(var n=0;n<e;n++)if(!this.children[n].equals(t.children[n]))return!1;return!0},guid:0,compile:function(t,e){this.sourceNode=[],this.opcodes=[],this.children=[],this.options=e,this.stringParams=e.stringParams,this.trackIds=e.trackIds,e.blockParams=e.blockParams||[];var n=e.knownHelpers;if(e.knownHelpers={helperMissing:!0,blockHelperMissing:!0,each:!0,"if":!0,unless:!0,"with":!0,log:!0,lookup:!0},n)for(var i in n)i in n&&(e.knownHelpers[i]=n[i]);return this.accept(t)},compileProgram:function(t){var e=new this.compiler,n=e.compile(t,this.options),i=this.guid++;return this.usePartial=this.usePartial||n.usePartial,this.children[i]=n,this.useDepths=this.useDepths||n.useDepths,i},accept:function(t){if(!this[t.type])throw new u["default"]("Unknown type: "+t.type,t);this.sourceNode.unshift(t);var e=this[t.type](t);return this.sourceNode.shift(),e},Program:function(t){this.options.blockParams.unshift(t.blockParams);for(var e=t.body,n=e.length,i=0;i<n;i++)this.accept(e[i]);return this.options.blockParams.shift(),this.isSimple=1===n,this.blockParams=t.blockParams?t.blockParams.length:0,this},BlockStatement:function(t){a(t);var e=t.program,n=t.inverse;e=e&&this.compileProgram(e),n=n&&this.compileProgram(n);var i=this.classifySexpr(t);"helper"===i?this.helperSexpr(t,e,n):"simple"===i?(this.simpleSexpr(t),this.opcode("pushProgram",e),this.opcode("pushProgram",n),this.opcode("emptyHash"),this.opcode("blockValue",t.path.original)):(this.ambiguousSexpr(t,e,n),this.opcode("pushProgram",e),this.opcode("pushProgram",n),this.opcode("emptyHash"),this.opcode("ambiguousBlockValue")),this.opcode("append")},DecoratorBlock:function(t){var e=t.program&&this.compileProgram(t.program),n=this.setupFullMustacheParams(t,e,void 0),i=t.path;this.useDecorators=!0,this.opcode("registerDecorator",n.length,i.original)},PartialStatement:function(t){this.usePartial=!0;var e=t.program;e&&(e=this.compileProgram(t.program));var n=t.params;if(n.length>1)throw new u["default"]("Unsupported number of partial arguments: "+n.length,t);n.length||(this.options.explicitPartialContext?this.opcode("pushLiteral","undefined"):n.push({type:"PathExpression",parts:[],depth:0}));var i=t.name.original,o="SubExpression"===t.name.type;o&&this.accept(t.name),this.setupFullMustacheParams(t,e,void 0,!0);var r=t.indent||"";this.options.preventIndent&&r&&(this.opcode("appendContent",r),r=""),this.opcode("invokePartial",o,i,r),this.opcode("append")},PartialBlockStatement:function(t){this.PartialStatement(t)},MustacheStatement:function(t){this.SubExpression(t),t.escaped&&!this.options.noEscape?this.opcode("appendEscaped"):this.opcode("append")},Decorator:function(t){this.DecoratorBlock(t)},ContentStatement:function(t){t.value&&this.opcode("appendContent",t.value)},CommentStatement:function(){},SubExpression:function(t){a(t);var e=this.classifySexpr(t);"simple"===e?this.simpleSexpr(t):"helper"===e?this.helperSexpr(t):this.ambiguousSexpr(t)},ambiguousSexpr:function(t,e,n){var i=t.path,o=i.parts[0],r=null!=e||null!=n;this.opcode("getContext",i.depth),this.opcode("pushProgram",e),this.opcode("pushProgram",n),i.strict=!0,this.accept(i),this.opcode("invokeAmbiguous",o,r)},simpleSexpr:function(t){var e=t.path;e.strict=!0,this.accept(e),this.opcode("resolvePossibleLambda")},helperSexpr:function(t,e,n){var i=this.setupFullMustacheParams(t,e,n),o=t.path,r=o.parts[0];if(this.options.knownHelpers[r])this.opcode("invokeKnownHelper",i.length,r);else{if(this.options.knownHelpersOnly)throw new u["default"]("You specified knownHelpersOnly, but used the unknown helper "+r,t);o.strict=!0,o.falsy=!0,this.accept(o),this.opcode("invokeHelper",i.length,o.original,d["default"].helpers.simpleId(o))}},PathExpression:function(t){this.addDepth(t.depth),this.opcode("getContext",t.depth);var e=t.parts[0],n=d["default"].helpers.scopedId(t),i=!t.depth&&!n&&this.blockParamIndex(e);i?this.opcode("lookupBlockParam",i,t.parts):e?t.data?(this.options.data=!0,this.opcode("lookupData",t.depth,t.parts,t.strict)):this.opcode("lookupOnContext",t.parts,t.falsy,t.strict,n):this.opcode("pushContext")},StringLiteral:function(t){this.opcode("pushString",t.value)},NumberLiteral:function(t){this.opcode("pushLiteral",t.value)},BooleanLiteral:function(t){this.opcode("pushLiteral",t.value)},UndefinedLiteral:function(){this.opcode("pushLiteral","undefined")},NullLiteral:function(){this.opcode("pushLiteral","null")},Hash:function(t){var e=t.pairs,n=0,i=e.length;for(this.opcode("pushHash");n<i;n++)this.pushParam(e[n].value);for(;n--;)this.opcode("assignToHash",e[n].key);this.opcode("popHash")},opcode:function(t){this.opcodes.push({opcode:t,args:f.call(arguments,1),loc:this.sourceNode[0].loc})},addDepth:function(t){t&&(this.useDepths=!0)},classifySexpr:function(t){var e=d["default"].helpers.simpleId(t.path),n=e&&!!this.blockParamIndex(t.path.parts[0]),i=!n&&d["default"].helpers.helperExpression(t),o=!n&&(i||e);if(o&&!i){var r=t.path.parts[0],s=this.options;s.knownHelpers[r]?i=!0:s.knownHelpersOnly&&(o=!1)}return i?"helper":o?"ambiguous":"simple"},pushParams:function(t){for(var e=0,n=t.length;e<n;e++)this.pushParam(t[e])},pushParam:function(t){var e=null!=t.value?t.value:t.original||"";if(this.stringParams)e.replace&&(e=e.replace(/^(\.?\.\/)*/g,"").replace(/\//g,".")),t.depth&&this.addDepth(t.depth),this.opcode("getContext",t.depth||0),this.opcode("pushStringParam",e,t.type),"SubExpression"===t.type&&this.accept(t);else{if(this.trackIds){var n=void 0;if(!t.parts||d["default"].helpers.scopedId(t)||t.depth||(n=this.blockParamIndex(t.parts[0])),n){var i=t.parts.slice(1).join(".");this.opcode("pushId","BlockParam",n,i)}else e=t.original||e,e.replace&&(e=e.replace(/^this(?:\.|$)/,"").replace(/^\.\//,"").replace(/^\.$/,"")),this.opcode("pushId",t.type,e)}this.accept(t)}},setupFullMustacheParams:function(t,e,n,i){var o=t.params;return this.pushParams(o),this.opcode("pushProgram",e),this.opcode("pushProgram",n),t.hash?this.accept(t.hash):this.opcode("emptyHash",i),o},blockParamIndex:function(t){for(var e=0,n=this.options.blockParams.length;e<n;e++){var i=this.options.blockParams[e],o=i&&p.indexOf(i,t);if(i&&o>=0)return[e,o]}}}},function(t,e,n){"use strict";function i(t){this.value=t}function o(){}function r(t,e,n,i){var o=e.popStack(),r=0,s=n.length;for(t&&s--;r<s;r++)o=e.nameLookup(o,n[r],i);return t?[e.aliasable("container.strict"),"(",o,", ",e.quotedString(n[r]),")"]:o}var s=n(1)["default"];e.__esModule=!0;var a=n(4),l=n(6),c=s(l),u=n(5),p=n(29),h=s(p);o.prototype={nameLookup:function(t,e){return o.isValidJavaScriptVariableName(e)?[t,".",e]:[t,"[",JSON.stringify(e),"]"]},depthedLookup:function(t){return[this.aliasable("container.lookup"),'(depths, "',t,'")']},compilerInfo:function(){var t=a.COMPILER_REVISION,e=a.REVISION_CHANGES[t];return[t,e]},appendToBuffer:function(t,e,n){return u.isArray(t)||(t=[t]),t=this.source.wrap(t,e),this.environment.isSimple?["return ",t,";"]:n?["buffer += ",t,";"]:(t.appendToBuffer=!0,t)},initializeBuffer:function(){return this.quotedString("")},compile:function(t,e,n,i){this.environment=t,this.options=e,this.stringParams=this.options.stringParams,this.trackIds=this.options.trackIds,this.precompile=!i,this.name=this.environment.name,this.isChild=!!n,this.context=n||{decorators:[],programs:[],environments:[]},this.preamble(),this.stackSlot=0,this.stackVars=[],this.aliases={},this.registers={list:[]},this.hashes=[],this.compileStack=[],this.inlineStack=[],this.blockParams=[],this.compileChildren(t,e),this.useDepths=this.useDepths||t.useDepths||t.useDecorators||this.options.compat,this.useBlockParams=this.useBlockParams||t.useBlockParams;var o=t.opcodes,r=void 0,s=void 0,a=void 0,l=void 0;for(a=0,l=o.length;a<l;a++)r=o[a],this.source.currentLocation=r.loc,s=s||r.loc,this[r.opcode].apply(this,r.args);if(this.source.currentLocation=s,this.pushSource(""),this.stackSlot||this.inlineStack.length||this.compileStack.length)throw new c["default"]("Compile completed with content left on stack");this.decorators.isEmpty()?this.decorators=void 0:(this.useDecorators=!0,this.decorators.prepend("var decorators = container.decorators;\n"),this.decorators.push("return fn;"),i?this.decorators=Function.apply(this,["fn","props","container","depth0","data","blockParams","depths",this.decorators.merge()]):(this.decorators.prepend("function(fn, props, container, depth0, data, blockParams, depths) {\n"),this.decorators.push("}\n"),this.decorators=this.decorators.merge()));var u=this.createFunctionContext(i);if(this.isChild)return u;var p={compiler:this.compilerInfo(),main:u};this.decorators&&(p.main_d=this.decorators,p.useDecorators=!0);var h=this.context,d=h.programs,f=h.decorators;for(a=0,l=d.length;a<l;a++)d[a]&&(p[a]=d[a],f[a]&&(p[a+"_d"]=f[a],p.useDecorators=!0));return this.environment.usePartial&&(p.usePartial=!0),this.options.data&&(p.useData=!0),this.useDepths&&(p.useDepths=!0),this.useBlockParams&&(p.useBlockParams=!0),this.options.compat&&(p.compat=!0),i?p.compilerOptions=this.options:(p.compiler=JSON.stringify(p.compiler),this.source.currentLocation={start:{line:1,column:0}},p=this.objectLiteral(p),e.srcName?(p=p.toStringWithSourceMap({file:e.destName}),p.map=p.map&&p.map.toString()):p=p.toString()),p},preamble:function(){this.lastContext=0,this.source=new h["default"](this.options.srcName),this.decorators=new h["default"](this.options.srcName)},createFunctionContext:function(t){var e="",n=this.stackVars.concat(this.registers.list);n.length>0&&(e+=", "+n.join(", "));var i=0;for(var o in this.aliases){var r=this.aliases[o];this.aliases.hasOwnProperty(o)&&r.children&&r.referenceCount>1&&(e+=", alias"+ ++i+"="+o,r.children[0]="alias"+i)}var s=["container","depth0","helpers","partials","data"];(this.useBlockParams||this.useDepths)&&s.push("blockParams"),this.useDepths&&s.push("depths");var a=this.mergeSource(e);return t?(s.push(a),Function.apply(this,s)):this.source.wrap(["function(",s.join(","),") {\n  ",a,"}"])},mergeSource:function(t){var e=this.environment.isSimple,n=!this.forceBuffer,i=void 0,o=void 0,r=void 0,s=void 0;return this.source.each(function(t){t.appendToBuffer?(r?t.prepend("  + "):r=t,s=t):(r&&(o?r.prepend("buffer += "):i=!0,s.add(";"),r=s=void 0),o=!0,e||(n=!1))}),n?r?(r.prepend("return "),s.add(";")):o||this.source.push('return "";'):(t+=", buffer = "+(i?"":this.initializeBuffer()),r?(r.prepend("return buffer + "),s.add(";")):this.source.push("return buffer;")),t&&this.source.prepend("var "+t.substring(2)+(i?"":";\n")),this.source.merge()},blockValue:function(t){var e=this.aliasable("helpers.blockHelperMissing"),n=[this.contextName(0)];this.setupHelperArgs(t,0,n);var i=this.popStack();n.splice(1,0,i),this.push(this.source.functionCall(e,"call",n))},ambiguousBlockValue:function(){var t=this.aliasable("helpers.blockHelperMissing"),e=[this.contextName(0)];this.setupHelperArgs("",0,e,!0),this.flushInline();var n=this.topStack();e.splice(1,0,n),this.pushSource(["if (!",this.lastHelper,") { ",n," = ",this.source.functionCall(t,"call",e),"}"])},appendContent:function(t){this.pendingContent?t=this.pendingContent+t:this.pendingLocation=this.source.currentLocation,this.pendingContent=t},append:function(){if(this.isInline())this.replaceStack(function(t){return[" != null ? ",t,' : ""']}),this.pushSource(this.appendToBuffer(this.popStack()));else{var t=this.popStack();this.pushSource(["if (",t," != null) { ",this.appendToBuffer(t,void 0,!0)," }"]),this.environment.isSimple&&this.pushSource(["else { ",this.appendToBuffer("''",void 0,!0)," }"])}},appendEscaped:function(){this.pushSource(this.appendToBuffer([this.aliasable("container.escapeExpression"),"(",this.popStack(),")"]))},getContext:function(t){this.lastContext=t},pushContext:function(){this.pushStackLiteral(this.contextName(this.lastContext))},lookupOnContext:function(t,e,n,i){var o=0;i||!this.options.compat||this.lastContext?this.pushContext():this.push(this.depthedLookup(t[o++])),this.resolvePath("context",t,o,e,n)},lookupBlockParam:function(t,e){this.useBlockParams=!0,this.push(["blockParams[",t[0],"][",t[1],"]"]),this.resolvePath("context",e,1)},lookupData:function(t,e,n){t?this.pushStackLiteral("container.data(data, "+t+")"):this.pushStackLiteral("data"),this.resolvePath("data",e,0,!0,n)},resolvePath:function(t,e,n,i,o){var s=this;if(this.options.strict||this.options.assumeObjects)return void this.push(r(this.options.strict&&o,this,e,t));for(var a=e.length;n<a;n++)this.replaceStack(function(o){var r=s.nameLookup(o,e[n],t);return i?[" && ",r]:[" != null ? ",r," : ",o]})},resolvePossibleLambda:function(){this.push([this.aliasable("container.lambda"),"(",this.popStack(),", ",this.contextName(0),")"])},pushStringParam:function(t,e){this.pushContext(),this.pushString(e),"SubExpression"!==e&&("string"==typeof t?this.pushString(t):this.pushStackLiteral(t))},emptyHash:function(t){this.trackIds&&this.push("{}"),this.stringParams&&(this.push("{}"),this.push("{}")),this.pushStackLiteral(t?"undefined":"{}")},pushHash:function(){this.hash&&this.hashes.push(this.hash),this.hash={values:[],types:[],contexts:[],ids:[]}},popHash:function(){var t=this.hash;this.hash=this.hashes.pop(),this.trackIds&&this.push(this.objectLiteral(t.ids)),this.stringParams&&(this.push(this.objectLiteral(t.contexts)),this.push(this.objectLiteral(t.types))),this.push(this.objectLiteral(t.values))},pushString:function(t){this.pushStackLiteral(this.quotedString(t))},pushLiteral:function(t){this.pushStackLiteral(t)},pushProgram:function(t){null!=t?this.pushStackLiteral(this.programExpression(t)):this.pushStackLiteral(null)},registerDecorator:function(t,e){var n=this.nameLookup("decorators",e,"decorator"),i=this.setupHelperArgs(e,t);this.decorators.push(["fn = ",this.decorators.functionCall(n,"",["fn","props","container",i])," || fn;"])},invokeHelper:function(t,e,n){var i=this.popStack(),o=this.setupHelper(t,e),r=n?[o.name," || "]:"",s=["("].concat(r,i);this.options.strict||s.push(" || ",this.aliasable("helpers.helperMissing")),s.push(")"),this.push(this.source.functionCall(s,"call",o.callParams))},invokeKnownHelper:function(t,e){var n=this.setupHelper(t,e);this.push(this.source.functionCall(n.name,"call",n.callParams))},invokeAmbiguous:function(t,e){this.useRegister("helper");var n=this.popStack();this.emptyHash();var i=this.setupHelper(0,t,e),o=this.lastHelper=this.nameLookup("helpers",t,"helper"),r=["(","(helper = ",o," || ",n,")"];this.options.strict||(r[0]="(helper = ",r.push(" != null ? helper : ",this.aliasable("helpers.helperMissing"))),this.push(["(",r,i.paramsInit?["),(",i.paramsInit]:[],"),","(typeof helper === ",this.aliasable('"function"')," ? ",this.source.functionCall("helper","call",i.callParams)," : helper))"])},invokePartial:function(t,e,n){var i=[],o=this.setupParams(e,1,i);t&&(e=this.popStack(),delete o.name),n&&(o.indent=JSON.stringify(n)),o.helpers="helpers",o.partials="partials",o.decorators="container.decorators",t?i.unshift(e):i.unshift(this.nameLookup("partials",e,"partial")),this.options.compat&&(o.depths="depths"),o=this.objectLiteral(o),i.push(o),this.push(this.source.functionCall("container.invokePartial","",i))},assignToHash:function(t){var e=this.popStack(),n=void 0,i=void 0,o=void 0;this.trackIds&&(o=this.popStack()),
this.stringParams&&(i=this.popStack(),n=this.popStack());var r=this.hash;n&&(r.contexts[t]=n),i&&(r.types[t]=i),o&&(r.ids[t]=o),r.values[t]=e},pushId:function(t,e,n){"BlockParam"===t?this.pushStackLiteral("blockParams["+e[0]+"].path["+e[1]+"]"+(n?" + "+JSON.stringify("."+n):"")):"PathExpression"===t?this.pushString(e):"SubExpression"===t?this.pushStackLiteral("true"):this.pushStackLiteral("null")},compiler:o,compileChildren:function(t,e){for(var n=t.children,i=void 0,o=void 0,r=0,s=n.length;r<s;r++){i=n[r],o=new this.compiler;var a=this.matchExistingProgram(i);null==a?(this.context.programs.push(""),a=this.context.programs.length,i.index=a,i.name="program"+a,this.context.programs[a]=o.compile(i,e,this.context,!this.precompile),this.context.decorators[a]=o.decorators,this.context.environments[a]=i,this.useDepths=this.useDepths||o.useDepths,this.useBlockParams=this.useBlockParams||o.useBlockParams):(i.index=a,i.name="program"+a,this.useDepths=this.useDepths||i.useDepths,this.useBlockParams=this.useBlockParams||i.useBlockParams)}},matchExistingProgram:function(t){for(var e=0,n=this.context.environments.length;e<n;e++){var i=this.context.environments[e];if(i&&i.equals(t))return e}},programExpression:function(t){var e=this.environment.children[t],n=[e.index,"data",e.blockParams];return(this.useBlockParams||this.useDepths)&&n.push("blockParams"),this.useDepths&&n.push("depths"),"container.program("+n.join(", ")+")"},useRegister:function(t){this.registers[t]||(this.registers[t]=!0,this.registers.list.push(t))},push:function(t){return t instanceof i||(t=this.source.wrap(t)),this.inlineStack.push(t),t},pushStackLiteral:function(t){this.push(new i(t))},pushSource:function(t){this.pendingContent&&(this.source.push(this.appendToBuffer(this.source.quotedString(this.pendingContent),this.pendingLocation)),this.pendingContent=void 0),t&&this.source.push(t)},replaceStack:function(t){var e=["("],n=void 0,o=void 0,r=void 0;if(!this.isInline())throw new c["default"]("replaceStack on non-inline");var s=this.popStack(!0);if(s instanceof i)n=[s.value],e=["(",n],r=!0;else{o=!0;var a=this.incrStack();e=["((",this.push(a)," = ",s,")"],n=this.topStack()}var l=t.call(this,n);r||this.popStack(),o&&this.stackSlot--,this.push(e.concat(l,")"))},incrStack:function(){return this.stackSlot++,this.stackSlot>this.stackVars.length&&this.stackVars.push("stack"+this.stackSlot),this.topStackName()},topStackName:function(){return"stack"+this.stackSlot},flushInline:function(){var t=this.inlineStack;this.inlineStack=[];for(var e=0,n=t.length;e<n;e++){var o=t[e];if(o instanceof i)this.compileStack.push(o);else{var r=this.incrStack();this.pushSource([r," = ",o,";"]),this.compileStack.push(r)}}},isInline:function(){return this.inlineStack.length},popStack:function(t){var e=this.isInline(),n=(e?this.inlineStack:this.compileStack).pop();if(!t&&n instanceof i)return n.value;if(!e){if(!this.stackSlot)throw new c["default"]("Invalid stack pop");this.stackSlot--}return n},topStack:function(){var t=this.isInline()?this.inlineStack:this.compileStack,e=t[t.length-1];return e instanceof i?e.value:e},contextName:function(t){return this.useDepths&&t?"depths["+t+"]":"depth"+t},quotedString:function(t){return this.source.quotedString(t)},objectLiteral:function(t){return this.source.objectLiteral(t)},aliasable:function(t){var e=this.aliases[t];return e?(e.referenceCount++,e):(e=this.aliases[t]=this.source.wrap(t),e.aliasable=!0,e.referenceCount=1,e)},setupHelper:function(t,e,n){var i=[],o=this.setupHelperArgs(e,t,i,n),r=this.nameLookup("helpers",e,"helper"),s=this.aliasable(this.contextName(0)+" != null ? "+this.contextName(0)+" : {}");return{params:i,paramsInit:o,name:r,callParams:[s].concat(i)}},setupParams:function(t,e,n){var i={},o=[],r=[],s=[],a=!n,l=void 0;a&&(n=[]),i.name=this.quotedString(t),i.hash=this.popStack(),this.trackIds&&(i.hashIds=this.popStack()),this.stringParams&&(i.hashTypes=this.popStack(),i.hashContexts=this.popStack());var c=this.popStack(),u=this.popStack();(u||c)&&(i.fn=u||"container.noop",i.inverse=c||"container.noop");for(var p=e;p--;)l=this.popStack(),n[p]=l,this.trackIds&&(s[p]=this.popStack()),this.stringParams&&(r[p]=this.popStack(),o[p]=this.popStack());return a&&(i.args=this.source.generateArray(n)),this.trackIds&&(i.ids=this.source.generateArray(s)),this.stringParams&&(i.types=this.source.generateArray(r),i.contexts=this.source.generateArray(o)),this.options.data&&(i.data="data"),this.useBlockParams&&(i.blockParams="blockParams"),i},setupHelperArgs:function(t,e,n,i){var o=this.setupParams(t,e,n);return o=this.objectLiteral(o),i?(this.useRegister("options"),n.push("options"),["options=",o]):n?(n.push(o),""):o}},function(){for(var t="break else new var case finally return void catch for switch while continue function this with default if throw delete in try do instanceof typeof abstract enum int short boolean export interface static byte extends long super char final native synchronized class float package throws const goto private transient debugger implements protected volatile double import public let yield await null true false".split(" "),e=o.RESERVED_WORDS={},n=0,i=t.length;n<i;n++)e[t[n]]=!0}(),o.isValidJavaScriptVariableName=function(t){return!o.RESERVED_WORDS[t]&&/^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(t)},e["default"]=o,t.exports=e["default"]},function(t,e,n){"use strict";function i(t,e,n){if(r.isArray(t)){for(var i=[],o=0,s=t.length;o<s;o++)i.push(e.wrap(t[o],n));return i}return"boolean"==typeof t||"number"==typeof t?t+"":t}function o(t){this.srcFile=t,this.source=[]}e.__esModule=!0;var r=n(5),s=void 0;try{}catch(a){}s||(s=function(t,e,n,i){this.src="",i&&this.add(i)},s.prototype={add:function(t){r.isArray(t)&&(t=t.join("")),this.src+=t},prepend:function(t){r.isArray(t)&&(t=t.join("")),this.src=t+this.src},toStringWithSourceMap:function(){return{code:this.toString()}},toString:function(){return this.src}}),o.prototype={isEmpty:function(){return!this.source.length},prepend:function(t,e){this.source.unshift(this.wrap(t,e))},push:function(t,e){this.source.push(this.wrap(t,e))},merge:function(){var t=this.empty();return this.each(function(e){t.add(["  ",e,"\n"])}),t},each:function(t){for(var e=0,n=this.source.length;e<n;e++)t(this.source[e])},empty:function(){var t=this.currentLocation||{start:{}};return new s(t.start.line,t.start.column,this.srcFile)},wrap:function(t){var e=arguments.length<=1||void 0===arguments[1]?this.currentLocation||{start:{}}:arguments[1];return t instanceof s?t:(t=i(t,this,e),new s(e.start.line,e.start.column,this.srcFile,t))},functionCall:function(t,e,n){return n=this.generateList(n),this.wrap([t,e?"."+e+"(":"(",n,")"])},quotedString:function(t){return'"'+(t+"").replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")+'"'},objectLiteral:function(t){var e=[];for(var n in t)if(t.hasOwnProperty(n)){var o=i(t[n],this);"undefined"!==o&&e.push([this.quotedString(n),":",o])}var r=this.generateList(e);return r.prepend("{"),r.add("}"),r},generateList:function(t){for(var e=this.empty(),n=0,o=t.length;n<o;n++)n&&e.add(","),e.add(i(t[n],this));return e},generateArray:function(t){var e=this.generateList(t);return e.prepend("["),e.add("]"),e}},e["default"]=o,t.exports=e["default"]}])})},function(t,e,n){var i,o;i=[n(4),n(2),n(6),n(7),n(15),n(15)],o=function(t,e,n,i,o,r){function s(t,e){return r.utc(e).zone("-07:00").format(t)}function a(t){return t&&t.replace(/^\s+|\s+$/g,"")}function l(t){return 0===t.indexOf(c)?t:c+t}var c="/assets";return t.registerHelper("i18n",function(t){var n,o=a(t.hash.code),r=a(t.hash.bundle),s=a(t.hash.arguments);return s&&(n=e.map(a(s).split(";"),function(t){t=a(t);var n,i=this;return e.each(t.split("."),function(t){n=n?n[t]:i[t]}),n},this)),i.localize(o,r,n)}),t.registerHelper("xsrfTokenInput",function(){return'<input type="hidden" class="hide" name="_xsrfToken" value="'+n("#_xsrfToken").text()+'">'}),t.registerHelper("img",function(t){var n="undefined"!=typeof okta&&okta.cdnUrlHostname||"",i=e.pick(t.hash,["src","alt","width","height","class","title"]);i.src=""+n+l(i.src);var o=e.map(i,function(t,n){return n+'="'+e.escape(t)+'"'});return"<img "+o.join(" ")+"/>"}),t.registerHelper("shortDate",e.partial(s,"MMM DD")),t.registerHelper("mediumDate",e.partial(s,"MMMM DD, YYYY")),t.registerHelper("longDate",e.partial(s,"MMMM DD, YYYY, h:mma")),t.registerHelper("formatDate",s),t.registerHelper("markdown",function(e){return o(t,e)}),t}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e){t.exports=__WEBPACK_EXTERNAL_MODULE_6__},function(t,e,n){var i,o;i=[n(2),n(6),n(8),n(14)],o=function(t,e,n){var i={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'","&#039;":"'","&#x2F;":"/"},o=/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@(?!-)((\[?[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\]?)|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,r={sprintf:function(){function t(){throw new Error("Mismatch number of variables: "+arguments[0]+", "+JSON.stringify(e))}for(var e=Array.prototype.slice.apply(arguments),n=e.shift(),i=n,o=0,r=e.length;o<r;o++){var s=e[o];n=n.replace("{"+o+"}",s),void 0!==s&&null!==s&&n!==i||t(),i=n}return/\{[\d+]\}/.test(n)&&t(),n},parseQuery:function(t){for(var e={},n=decodeURIComponent(t.replace(/\+/g," ")).split("&"),i=0;i<n.length;i++){var o=n[i],r=o.split("=");e[r.shift()]=r.join("=")}return e},encodeJSObject:function(t){return encodeURIComponent(JSON.stringify(t))},decodeJSObject:function(t){try{return JSON.parse(decodeURIComponent(t))}catch(e){return null}},unescapeHtml:function(t){return String(t).replace(/&[\w\#\d]{2,};/g,function(t){return i[t]||t})},localize:function(e,i,o){var s=i?n[i]:n[t.keys(n)[0]];if(!s)return"L10N_ERROR["+i+"]";var a=s[e];try{o=o&&o.slice?o.slice(0):[],o.unshift(a),a=r.sprintf.apply(null,o)}catch(l){a=null}return a||"L10N_ERROR["+e+"]"},parseFloat:function(t){var e=+t;return"string"==typeof t&&e===parseFloat(t)?e:t},randomString:function(t){var e="0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz".split("");if(void 0===t)t=Math.floor(Math.random()*e.length);else if(0===t)return"";for(var n="",i=0;i<t;i++)n+=e[Math.floor(Math.random()*e.length)];return n},endsWith:function(t,e){return t+="",e+="",t.length>=e.length&&t.substring(t.length-e.length)===e},isEmail:function(n){var i=e.trim(n);return!t.isEmpty(i)&&o.test(i)}};return r}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(2),n(9),n(6),n(10),n(11),n(12),n(1)],o=function(t,e,n,i,o,r,s){function a(e){return e?t.mapObject(e,function(e){var n={login:{},country:{}};if(!t.isObject(e))throw new Error('Invalid format for "i18n"');return t.each(e,function(t,e){var i=e.split(/^country\./);i.length>1?n.country[i[1]]=t:n.login[i[0]]=t}),n}):{}}function l(){var t=JSON.parse(localStorage.getItem(h));return t&&t.version===s.version||(t={version:s.version}),t}function c(t,e,n){var i=l();i[t]={login:e,country:n},localStorage.setItem(h,JSON.stringify(i))}function u(t,e,i){var o,r;return o=e.replace("-","_"),r=i.rewrite(d({bundle:t,languageCode:o})),n.ajax({url:i.baseUrl+r,dataType:"jsonp",cache:!0,timeout:5e3,jsonpCallback:"jsonp_"+t})}function p(n,i){if("en"===n||!t.contains(s.supportedLanguages,n))return e({});var o=l();return o[n]?e(o[n]):e.all([u("login",n,i),u("country",n,i)]).spread(function(t,e){return c(n,t,e),{login:t,country:e}}).fail(function(){return r.warn("Unable to load language: "+n),{}})}var h="osw.languages",d=t.template("/labels/jsonp/{{bundle}}_{{languageCode}}.jsonp");return{login:i,country:o,currentLanguage:null,isLoaded:function(t){return this.currentLanguage===t},loadLanguage:function(e,n,r){var s=a(n);return p(e,r).then(t.bind(function(n){this.login=t.extend({},i,n.login),this.country=t.extend({},o,n.country),s[e]&&(t.extend(this.login,s[e].login),t.extend(this.country,s[e].country)),this.currentLanguage=e},this))}}}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){/*!
	 *
	 * Copyright 2009-2012 Kris Kowal under the terms of the MIT
	 * license found at http://github.com/kriskowal/q/raw/master/LICENSE
	 *
	 * With parts by Tyler Close
	 * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found
	 * at http://www.opensource.org/licenses/mit-license.html
	 * Forked at ref_send.js version: 2009-05-11
	 *
	 * With parts by Mark Miller
	 * Copyright (C) 2011 Google Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 */
!function(e){"use strict";if("function"==typeof bootstrap)bootstrap("promise",e);else{t.exports=e()}}(function(){"use strict";function t(t){return function(){return G.apply(t,arguments)}}function e(t){return t===Object(t)}function n(t){return"[object StopIteration]"===nt(t)||t instanceof V}function i(t,e){if(q&&e.stack&&"object"==typeof t&&null!==t&&t.stack&&t.stack.indexOf(it)===-1){for(var n=[],i=e;i;i=i.source)i.stack&&n.unshift(i.stack);n.unshift(t.stack);var r=n.join("\n"+it+"\n");t.stack=o(r)}}function o(t){for(var e=t.split("\n"),n=[],i=0;i<e.length;++i){var o=e[i];a(o)||r(o)||!o||n.push(o)}return n.join("\n")}function r(t){return t.indexOf("(module.js:")!==-1||t.indexOf("(node.js:")!==-1}function s(t){var e=/at .+ \((.+):(\d+):(?:\d+)\)$/.exec(t);if(e)return[e[1],Number(e[2])];var n=/at ([^ ]+):(\d+):(?:\d+)$/.exec(t);if(n)return[n[1],Number(n[2])];var i=/.*@(.+):(\d+)$/.exec(t);return i?[i[1],Number(i[2])]:void 0}function a(t){var e=s(t);if(!e)return!1;var n=e[0],i=e[1];return n===H&&i>=W&&i<=lt}function l(){if(q)try{throw new Error}catch(t){var e=t.stack.split("\n"),n=e[0].indexOf("@")>0?e[1]:e[2],i=s(n);if(!i)return;return H=i[0],i[1]}}function c(t,e,n){return function(){return"undefined"!=typeof console&&"function"==typeof console.warn&&console.warn(e+" is deprecated, use "+n+" instead.",new Error("").stack),t.apply(t,arguments)}}function u(t){return t instanceof f?t:y(t)?C(t):T(t)}function p(){function t(t){e=t,r.source=t,J(n,function(e,n){u.nextTick(function(){t.promiseDispatch.apply(t,n)})},void 0),n=void 0,i=void 0}var e,n=[],i=[],o=Z(p.prototype),r=Z(f.prototype);if(r.promiseDispatch=function(t,o,r){var s=Y(arguments);n?(n.push(s),"when"===o&&r[1]&&i.push(r[1])):u.nextTick(function(){e.promiseDispatch.apply(e,s)})},r.valueOf=function(){if(n)return r;var t=g(e);return v(t)&&(e=t),t},r.inspect=function(){return e?e.inspect():{state:"pending"}},u.longStackSupport&&q)try{throw new Error}catch(s){r.stack=s.stack.substring(s.stack.indexOf("\n")+1)}return o.promise=r,o.resolve=function(n){e||t(u(n))},o.fulfill=function(n){e||t(T(n))},o.reject=function(n){e||t(E(n))},o.notify=function(t){e||J(i,function(e,n){u.nextTick(function(){n(t)})},void 0)},o}function h(t){if("function"!=typeof t)throw new TypeError("resolver must be a function.");var e=p();try{t(e.resolve,e.reject,e.notify)}catch(n){e.reject(n)}return e.promise}function d(t){return h(function(e,n){for(var i=0,o=t.length;i<o;i++)u(t[i]).then(e,n)})}function f(t,e,n){void 0===e&&(e=function(t){return E(new Error("Promise does not support operation: "+t))}),void 0===n&&(n=function(){return{state:"unknown"}});var i=Z(f.prototype);if(i.promiseDispatch=function(n,o,r){var s;try{s=t[o]?t[o].apply(i,r):e.call(i,o,r)}catch(a){s=E(a)}n&&n(s)},i.inspect=n,n){var o=n();"rejected"===o.state&&(i.exception=o.reason),i.valueOf=function(){var t=n();return"pending"===t.state||"rejected"===t.state?i:t.value}}return i}function m(t,e,n,i){return u(t).then(e,n,i)}function g(t){if(v(t)){var e=t.inspect();if("fulfilled"===e.state)return e.value}return t}function v(t){return t instanceof f}function y(t){return e(t)&&"function"==typeof t.then}function _(t){return v(t)&&"pending"===t.inspect().state}function b(t){return!v(t)||"fulfilled"===t.inspect().state}function w(t){return v(t)&&"rejected"===t.inspect().state}function S(){ot.length=0,rt.length=0,at||(at=!0)}function k(t,e){at&&("object"==typeof process&&"function"==typeof process.emit&&u.nextTick.runAfter(function(){Q(rt,t)!==-1&&(process.emit("unhandledRejection",e,t),st.push(t))}),rt.push(t),e&&"undefined"!=typeof e.stack?ot.push(e.stack):ot.push("(no stack) "+e))}function x(t){if(at){var e=Q(rt,t);e!==-1&&("object"==typeof process&&"function"==typeof process.emit&&u.nextTick.runAfter(function(){var n=Q(st,t);n!==-1&&(process.emit("rejectionHandled",ot[e],t),st.splice(n,1))}),rt.splice(e,1),ot.splice(e,1))}}function E(t){var e=f({when:function(e){return e&&x(this),e?e(t):this}},function(){return this},function(){return{state:"rejected",reason:t}});return k(e,t),e}function T(t){return f({when:function(){return t},get:function(e){return t[e]},set:function(e,n){t[e]=n},"delete":function(e){delete t[e]},post:function(e,n){return null===e||void 0===e?t.apply(void 0,n):t[e].apply(t,n)},apply:function(e,n){return t.apply(e,n)},keys:function(){return et(t)}},void 0,function(){return{state:"fulfilled",value:t}})}function C(t){var e=p();return u.nextTick(function(){try{t.then(e.resolve,e.reject,e.notify)}catch(n){e.reject(n)}}),e.promise}function A(t){return f({isDef:function(){}},function(e,n){return L(t,e,n)},function(){return u(t).inspect()})}function O(t,e,n){return u(t).spread(e,n)}function R(t){return function(){function e(t,e){var s;if("undefined"==typeof StopIteration){try{s=i[t](e)}catch(a){return E(a)}return s.done?u(s.value):m(s.value,o,r)}try{s=i[t](e)}catch(a){return n(a)?u(a.value):E(a)}return m(s,o,r)}var i=t.apply(this,arguments),o=e.bind(e,"next"),r=e.bind(e,"throw");return o()}}function N(t){u.done(u.async(t)())}function I(t){throw new V(t)}function P(t){return function(){return O([this,M(arguments)],function(e,n){return t.apply(e,n)})}}function L(t,e,n){return u(t).dispatch(e,n)}function M(t){return m(t,function(t){var e=0,n=p();return J(t,function(i,o,r){var s;v(o)&&"fulfilled"===(s=o.inspect()).state?t[r]=s.value:(++e,m(o,function(i){t[r]=i,0===--e&&n.resolve(t)},n.reject,function(t){n.notify({index:r,value:t})}))},void 0),0===e&&n.resolve(t),n.promise})}function D(t){if(0===t.length)return u.resolve();var e=u.defer(),n=0;return J(t,function(i,o,r){function s(t){e.resolve(t)}function a(){n--,0===n&&e.reject(new Error("Can't get fulfillment value from any promise, all promises were rejected."))}function l(t){e.notify({index:r,value:t})}var c=t[r];n++,m(c,s,a,l)},void 0),e.promise}function U(t){return m(t,function(t){return t=X(t,u),m(M(X(t,function(t){return m(t,z,z)})),function(){return t})})}function F(t){return u(t).allSettled()}function B(t,e){return u(t).then(void 0,void 0,e)}function j(t,e){return u(t).nodeify(e)}var q=!1;try{throw new Error}catch($){q=!!$.stack}var H,V,W=l(),z=function(){},K=function(){function t(){for(var t,i;n.next;)n=n.next,t=n.task,n.task=void 0,i=n.domain,i&&(n.domain=void 0,i.enter()),e(t,i);for(;a.length;)t=a.pop(),e(t);o=!1}function e(e,n){try{e()}catch(i){if(s)throw n&&n.exit(),setTimeout(t,0),n&&n.enter(),i;setTimeout(function(){throw i},0)}n&&n.exit()}var n={task:void 0,next:null},i=n,o=!1,r=void 0,s=!1,a=[];if(K=function(t){i=i.next={task:t,domain:s&&process.domain,next:null},o||(o=!0,r())},"object"==typeof process&&"[object process]"===process.toString()&&process.nextTick)s=!0,r=function(){process.nextTick(t)};else if("function"==typeof setImmediate)r="undefined"!=typeof window?setImmediate.bind(window,t):function(){setImmediate(t)};else if("undefined"!=typeof MessageChannel){var l=new MessageChannel;l.port1.onmessage=function(){r=c,l.port1.onmessage=t,t()};var c=function(){l.port2.postMessage(0)};r=function(){setTimeout(t,0),c()}}else r=function(){setTimeout(t,0)};return K.runAfter=function(t){a.push(t),o||(o=!0,r())},K}(),G=Function.call,Y=t(Array.prototype.slice),J=t(Array.prototype.reduce||function(t,e){var n=0,i=this.length;if(1===arguments.length)for(;;){if(n in this){e=this[n++];break}if(++n>=i)throw new TypeError}for(;n<i;n++)n in this&&(e=t(e,this[n],n));return e}),Q=t(Array.prototype.indexOf||function(t){for(var e=0;e<this.length;e++)if(this[e]===t)return e;return-1}),X=t(Array.prototype.map||function(t,e){var n=this,i=[];return J(n,function(o,r,s){i.push(t.call(e,r,s,n))},void 0),i}),Z=Object.create||function(t){function e(){}return e.prototype=t,new e},tt=t(Object.prototype.hasOwnProperty),et=Object.keys||function(t){var e=[];for(var n in t)tt(t,n)&&e.push(n);return e},nt=t(Object.prototype.toString);V="undefined"!=typeof ReturnValue?ReturnValue:function(t){this.value=t};var it="From previous event:";u.resolve=u,u.nextTick=K,u.longStackSupport=!1,"object"==typeof process&&process&&process.env&&process.env.Q_DEBUG&&(u.longStackSupport=!0),u.defer=p,p.prototype.makeNodeResolver=function(){var t=this;return function(e,n){e?t.reject(e):arguments.length>2?t.resolve(Y(arguments,1)):t.resolve(n)}},u.Promise=h,u.promise=h,h.race=d,h.all=M,h.reject=E,h.resolve=u,u.passByCopy=function(t){return t},f.prototype.passByCopy=function(){return this},u.join=function(t,e){return u(t).join(e)},f.prototype.join=function(t){return u([this,t]).spread(function(t,e){if(t===e)return t;throw new Error("Can't join: not the same: "+t+" "+e)})},u.race=d,f.prototype.race=function(){return this.then(u.race)},u.makePromise=f,f.prototype.toString=function(){return"[object Promise]"},f.prototype.then=function(t,e,n){function o(e){try{return"function"==typeof t?t(e):e}catch(n){return E(n)}}function r(t){if("function"==typeof e){i(t,a);try{return e(t)}catch(n){return E(n)}}return E(t)}function s(t){return"function"==typeof n?n(t):t}var a=this,l=p(),c=!1;return u.nextTick(function(){a.promiseDispatch(function(t){c||(c=!0,l.resolve(o(t)))},"when",[function(t){c||(c=!0,l.resolve(r(t)))}])}),a.promiseDispatch(void 0,"when",[void 0,function(t){var e,n=!1;try{e=s(t)}catch(i){if(n=!0,!u.onerror)throw i;u.onerror(i)}n||l.notify(e)}]),l.promise},u.tap=function(t,e){return u(t).tap(e)},f.prototype.tap=function(t){return t=u(t),this.then(function(e){return t.fcall(e).thenResolve(e)})},u.when=m,f.prototype.thenResolve=function(t){return this.then(function(){return t})},u.thenResolve=function(t,e){return u(t).thenResolve(e)},f.prototype.thenReject=function(t){return this.then(function(){throw t})},u.thenReject=function(t,e){return u(t).thenReject(e)},u.nearer=g,u.isPromise=v,u.isPromiseAlike=y,u.isPending=_,f.prototype.isPending=function(){return"pending"===this.inspect().state},u.isFulfilled=b,f.prototype.isFulfilled=function(){return"fulfilled"===this.inspect().state},u.isRejected=w,f.prototype.isRejected=function(){return"rejected"===this.inspect().state};var ot=[],rt=[],st=[],at=!0;u.resetUnhandledRejections=S,u.getUnhandledReasons=function(){return ot.slice()},u.stopUnhandledRejectionTracking=function(){S(),at=!1},S(),u.reject=E,u.fulfill=T,u.master=A,u.spread=O,f.prototype.spread=function(t,e){return this.all().then(function(e){return t.apply(void 0,e)},e)},u.async=R,u.spawn=N,u["return"]=I,u.promised=P,u.dispatch=L,f.prototype.dispatch=function(t,e){var n=this,i=p();return u.nextTick(function(){n.promiseDispatch(i.resolve,t,e)}),i.promise},u.get=function(t,e){return u(t).dispatch("get",[e])},f.prototype.get=function(t){return this.dispatch("get",[t])},u.set=function(t,e,n){return u(t).dispatch("set",[e,n])},f.prototype.set=function(t,e){return this.dispatch("set",[t,e])},u.del=u["delete"]=function(t,e){return u(t).dispatch("delete",[e])},f.prototype.del=f.prototype["delete"]=function(t){return this.dispatch("delete",[t])},u.mapply=u.post=function(t,e,n){return u(t).dispatch("post",[e,n])},f.prototype.mapply=f.prototype.post=function(t,e){return this.dispatch("post",[t,e])},u.send=u.mcall=u.invoke=function(t,e){return u(t).dispatch("post",[e,Y(arguments,2)])},f.prototype.send=f.prototype.mcall=f.prototype.invoke=function(t){return this.dispatch("post",[t,Y(arguments,1)])},u.fapply=function(t,e){return u(t).dispatch("apply",[void 0,e])},f.prototype.fapply=function(t){return this.dispatch("apply",[void 0,t])},u["try"]=u.fcall=function(t){return u(t).dispatch("apply",[void 0,Y(arguments,1)])},f.prototype.fcall=function(){return this.dispatch("apply",[void 0,Y(arguments)])},u.fbind=function(t){var e=u(t),n=Y(arguments,1);return function(){return e.dispatch("apply",[this,n.concat(Y(arguments))])}},f.prototype.fbind=function(){var t=this,e=Y(arguments);return function(){return t.dispatch("apply",[this,e.concat(Y(arguments))])}},u.keys=function(t){return u(t).dispatch("keys",[])},f.prototype.keys=function(){return this.dispatch("keys",[])},u.all=M,f.prototype.all=function(){return M(this)},u.any=D,f.prototype.any=function(){return D(this)},u.allResolved=c(U,"allResolved","allSettled"),f.prototype.allResolved=function(){return U(this)},u.allSettled=F,f.prototype.allSettled=function(){return this.then(function(t){return M(X(t,function(t){function e(){return t.inspect()}return t=u(t),t.then(e,e)}))})},u.fail=u["catch"]=function(t,e){return u(t).then(void 0,e)},f.prototype.fail=f.prototype["catch"]=function(t){return this.then(void 0,t)},u.progress=B,f.prototype.progress=function(t){return this.then(void 0,void 0,t)},u.fin=u["finally"]=function(t,e){return u(t)["finally"](e)},f.prototype.fin=f.prototype["finally"]=function(t){return t=u(t),this.then(function(e){return t.fcall().then(function(){return e})},function(e){return t.fcall().then(function(){throw e})})},u.done=function(t,e,n,i){return u(t).done(e,n,i)},f.prototype.done=function(t,e,n){var o=function(t){u.nextTick(function(){if(i(t,r),!u.onerror)throw t;u.onerror(t)})},r=t||e||n?this.then(t,e,n):this;"object"==typeof process&&process&&process.domain&&(o=process.domain.bind(o)),r.then(void 0,o)},u.timeout=function(t,e,n){return u(t).timeout(e,n)},f.prototype.timeout=function(t,e){var n=p(),i=setTimeout(function(){e&&"string"!=typeof e||(e=new Error(e||"Timed out after "+t+" ms"),e.code="ETIMEDOUT"),n.reject(e)},t);return this.then(function(t){clearTimeout(i),n.resolve(t)},function(t){clearTimeout(i),n.reject(t)},n.notify),n.promise},u.delay=function(t,e){return void 0===e&&(e=t,t=void 0),u(t).delay(e)},f.prototype.delay=function(t){return this.then(function(e){var n=p();return setTimeout(function(){n.resolve(e)},t),n.promise})},u.nfapply=function(t,e){return u(t).nfapply(e)},f.prototype.nfapply=function(t){var e=p(),n=Y(t);return n.push(e.makeNodeResolver()),this.fapply(n).fail(e.reject),e.promise},u.nfcall=function(t){var e=Y(arguments,1);return u(t).nfapply(e)},f.prototype.nfcall=function(){var t=Y(arguments),e=p();return t.push(e.makeNodeResolver()),this.fapply(t).fail(e.reject),e.promise},u.nfbind=u.denodeify=function(t){var e=Y(arguments,1);return function(){var n=e.concat(Y(arguments)),i=p();return n.push(i.makeNodeResolver()),u(t).fapply(n).fail(i.reject),i.promise}},f.prototype.nfbind=f.prototype.denodeify=function(){var t=Y(arguments);return t.unshift(this),u.denodeify.apply(void 0,t)},u.nbind=function(t,e){var n=Y(arguments,2);return function(){function i(){return t.apply(e,arguments)}var o=n.concat(Y(arguments)),r=p();return o.push(r.makeNodeResolver()),u(i).fapply(o).fail(r.reject),r.promise}},f.prototype.nbind=function(){var t=Y(arguments,0);return t.unshift(this),u.nbind.apply(void 0,t)},u.nmapply=u.npost=function(t,e,n){return u(t).npost(e,n)},f.prototype.nmapply=f.prototype.npost=function(t,e){var n=Y(e||[]),i=p();return n.push(i.makeNodeResolver()),this.dispatch("post",[t,n]).fail(i.reject),i.promise},u.nsend=u.nmcall=u.ninvoke=function(t,e){var n=Y(arguments,2),i=p();return n.push(i.makeNodeResolver()),u(t).dispatch("post",[e,n]).fail(i.reject),i.promise},f.prototype.nsend=f.prototype.nmcall=f.prototype.ninvoke=function(t){var e=Y(arguments,1),n=p();return e.push(n.makeNodeResolver()),this.dispatch("post",[t,e]).fail(n.reject),n.promise},u.nodeify=j,f.prototype.nodeify=function(t){return t?void this.then(function(e){u.nextTick(function(){t(null,e)})},function(e){u.nextTick(function(){t(e)})}):this},u.noConflict=function(){throw new Error("Q.noConflict only works when Q is used as a global")};var lt=l();return u})},function(t,e){t.exports={signout:"Sign Out",remember:"Remember me",rememberDevice:"Trust this device","rememberDevice.timebased":"Do not challenge me on this device for the next {0}","rememberDevice.devicebased":"Do not challenge me on this device again",autoPush:"Send push automatically",unlockaccount:"Unlock account?",needhelp:"Need help signing in?",goback:"Back to Sign In",forgotpassword:"Forgot password?",help:"Help","minutes.oneMinute":"minute",minutes:"{0} minutes",hours:"{0} hours",days:"{0} days","error.config":"There was a configuration error","error.required.authParams":'Missing parameters for the configured authentication scheme - "OAUTH2"',"error.required.baseUrl":'"baseUrl" is a required widget parameter',"error.required.success":"A success handler is required","error.required.el":'"el" is a required widget parameter',"error.unsupported.browser":"Unsupported browser","error.unsupported.cors":"Unsupported browser - missing CORS support","error.unsupported.localStorage":"Unsupported browser - missing localStorage support","error.enabled.cors":"There was an error sending the request - have you enabled CORS?","error.expired.session":"Your session has expired. Please try to log in again.","error.auth.lockedOut":"Your account is locked. Please contact your administrator.","error.oauth.idToken":"There was a problem generating the id_token for the user. Please try again.","error.network.connection":"Unable to connect to the server. Please check your network connection.","errors.E0000004":"Sign in failed!","errors.E0000069":"Your account was locked due to excessive MFA attempts.","errors.E0000047":"You exceeded the maximum number of requests. Try again in a while.","oform.next":"Next","oform.verify":"Verify","oform.send":"Send","oform.back":"Back","oform.save":"Save","oform.cancel":"Cancel","oform.edit":"Edit","oform.previous":"Previous","oform.errorbanner.title":"We found some errors. Please review the form and make corrections.","oform.errormsg.title":"Please review the form to correct the following errors:","oform.error.unexpected":"There was an unexpected internal error. Please try again.","model.validation.field.blank":"The field cannot be left blank","model.validation.field.wrong.type":"The field is of the wrong type","model.validation.field.invalid":"The field has an invalid value","model.validation.field.value.not.allowed":"The field value is not allowed","model.validation.field.array.minItems":"The array does not have enough items","model.validation.field.array.unique":"The array can only have unique values","model.validation.field.username":"Please check your username","factor.totpSoft.oktaVerify":"Okta Verify","factor.totpSoft.googleAuthenticator":"Google Authenticator","factor.totpSoft.description":"Enter single-use code from the mobile app.","factor.totpHard.rsaSecurId":"RSA SecurID","factor.totpHard.symantecVip":"Symantec VIP","factor.totpHard.description":"Enter a single-use code from a hardware token.","factor.totpHard.yubikey":"Yubikey","factor.totpHard.yubikey.description":"Insert your Yubikey and tap it to get a verification code.","factor.oktaVerifyPush":"Okta Verify","factor.push.description":"Use a push notification sent to the mobile app.","factor.duo":"Duo Security","factor.duo.description":"Use Push Notification, SMS, or Voice call to authenticate.","factor.sms":"SMS Authentication","factor.sms.description":"Enter a single-use code sent to your mobile phone.","factor.call":"Voice Call Authentication","factor.call.description":"Use a phone to authenticate by following voice instructions.","factor.securityQuestion":"Security Question","factor.securityQuestion.description":"Use the answer to a security question to authenticate.","factor.windowsHello":"Windows Hello","factor.windowsHello.signin.description":"Sign in to Okta using Windows Hello.","factor.u2f":"Security Key (U2F)","factor.u2f.description":"Use a Universal 2nd Factor (U2F) security key to sign on to Okta.","mfa.challenge.verify":"Verify","mfa.challenge.answer.placeholder":"Answer","mfa.challenge.answer.tooltip":"Answer","mfa.challenge.answer.showAnswer":"Show","mfa.challenge.answer.hideAnswer":"Hide","mfa.challenge.enterCode.placeholder":"Enter Code","mfa.challenge.enterCode.tooltip":"Enter Code","mfa.backToFactors":"Back to factor list","mfa.phoneNumber.placeholder":"Phone number","mfa.phoneNumber.ext.placeholder":"Extension","mfa.sendCode":"Send code","mfa.sent":"Sent","mfa.resendCode":"Re-send code","mfa.call":"Call","mfa.calling":"Calling","mfa.redial":"Redial","mfa.scanBarcode":"Scan barcode","mfa.noAccessToEmail":"Can't access email","password.reset":"Reset Password","password.oldPassword.placeholder":"Old password","password.oldPassword.tooltip":"Old password","password.newPassword.placeholder":"New password","password.newPassword.tooltip":"New password","password.confirmPassword.placeholder":"Repeat password","password.confirmPassword.tooltip":"Repeat password","password.error.match":"New passwords must match","recovery.sms.hint":"SMS can only be used if a mobile phone number has been configured.","recovery.mobile.hint":"{0} can only be used if a mobile phone number has been configured.","recovery.sms":"SMS","recovery.call":"Voice Call","recovery.smsOrCall":"SMS or Voice Call","enroll.choices.title":"Set up multifactor authentication","enroll.choices.description":"Your company requires multifactor authentication to add an additional layer of security when signing into your Okta account","enroll.choices.optional":"You can configure any additional optional factor or click finish","enroll.choices.list.setup":"Setup required","enroll.choices.list.enrolled":"Enrolled factors","enroll.choices.list.optional":"Additional optional factors","enroll.choices.step":"{0} of {1}","enroll.choices.setup":"Setup","enroll.choices.submit.finish":"Finish","enroll.choices.submit.configure":"Configure factor","enroll.choices.submit.next":"Configure next factor","enroll.securityQuestion.setup":"Setup secret question authentication","security.disliked_food":"What is the food you least liked as a child?","security.name_of_first_plush_toy":"What is the name of your first stuffed animal?","security.first_award":"What did you earn your first medal or award for?","security.favorite_security_question":"What is your favorite security question?","security.favorite_toy":"What is the toy/stuffed animal you liked the most as a kid?","security.first_computer_game":"What was the first computer game you played?","security.favorite_movie_quote":"What is your favorite movie quote?","security.first_sports_team_mascot":"What was the mascot of the first sports team you played on?","security.first_music_purchase":"What music album or song did you first purchase?","security.favorite_art_piece":"What is your favorite piece of art?","security.grandmother_favorite_desert":"What was your grandmother's favorite dessert?","security.first_thing_cooked":"What was the first thing you learned to cook?","security.childhood_dream_job":"What was your dream job as a child?","security.first_kiss_location":"Where did you have your first kiss?","security.place_where_significant_other_was_met":"Where did you meet your spouse/significant other?","security.favorite_vacation_location":"Where did you go for your favorite vacation?","security.new_years_two_thousand":"Where were you on New Year's Eve in the year 2000?","security.favorite_speaker_actor":"Who is your favorite speaker/orator?","security.favorite_book_movie_character":"Who is your favorite book/movie character?","security.favorite_sports_player":"Who is your favorite sports player?","enroll.sms.setup":"Receive a code via SMS to authenticate","enroll.call.setup":"Follow phone call instructions to authenticate","enroll.onprem.username.placeholder":"Enter {0} username","enroll.onprem.username.tooltip":"Enter {0} username","enroll.onprem.passcode.placeholder":"Enter {0} passcode","enroll.onprem.passcode.tooltip":"Enter {0} passcode","enroll.symantecVip.subtitle":"Enter Credential ID and two consecutive generated codes","enroll.symantecVip.credentialId.placeholder":"Enter credential ID","enroll.symantecVip.credentialId.tooltip":"Enter credential ID","enroll.symantecVip.passcode1.placeholder":"Security code 1","enroll.symantecVip.passcode1.tooltip":"Security code 1","enroll.symantecVip.passcode2.placeholder":"Security code 2","enroll.symantecVip.passcode2.tooltip":"Security code 2","enroll.yubikey.title":"Setup Yubikey","enroll.yubikey.subtitle":"Insert your Yubikey into a USB port and tap it to generate a verification code","enroll.totp.title":"Setup {0}","enroll.totp.selectDevice":"Select your device type","enroll.totp.downloadApp":'Download <a href="{0}" class="inline-link">{1} from the {2}</a> onto your mobile device.',"enroll.totp.installApp":"Install {0}","enroll.duo.title":"Setup Duo Security","enroll.windowsHello.title":"Enroll Windows Hello","enroll.windowsHello.subtitle":"Click below to enroll Windows Hello as a second form of authentication","enroll.windowsHello.subtitle.loading":"Please wait while Windows Hello is loading...","enroll.windowsHello.save":"Enroll Windows Hello","enroll.windowsHello.error.notWindows":"Windows Hello can only be used on Windows Edge with Windows 10. Contact your admin for assistance.","enroll.windowsHello.error.notConfiguredHtml":"Windows Hello is not configured. Select the <b>Start</b> button, then select <b>Settings</b> &gt; <b>Accounts</b> &gt; <b>Sign-in</b> to configure Windows Hello.","verify.windowsHello.subtitle":"Verify your identity with Windows Hello","verify.windowsHello.subtitle.loading":"Please wait while Windows Hello is loading...","verify.windowsHello.subtitle.signingIn":"Signing into Okta...","verify.windowsHello.save":"Verify with Windows Hello","verify.windowsHello.error.notFound":"Your Windows Hello enrollment does not match our records. Contact your administrator for assistance.","verify.windowsHello.error.notFound.selectAnother":"Your Windows Hello enrollment does not match our records. Select another factor or contact your administrator for assistance.","enroll.u2f.title":"Setup Security Key (U2F)","enroll.u2f.save":"Register Security Key","enroll.u2f.general1":"If using Firefox download and install the U2F browser extension.","enroll.u2f.general2":"Make sure you have a Security Key. If already inserted, remove it now.<br>If you have a Bluetooth Security Key, turn on your computer's Bluetooth.","enroll.u2f.general3":"Click the button below to register","enroll.u2f.instructions":"Insert your Security Key into a USB port on this computer. If it has a button or gold disk, tap it.","enroll.u2f.instructionsBluetooth":"If you are using a Bluetooth Security Key, press the button.","verify.u2f.instructions":"Insert your Security Key. If it has a button or gold disk, tap it.","verify.u2f.instructionsBluetooth":"If you are using a Bluetooth Security Key, turn on your computer's Bluetooth and press the button.","verify.u2f.retry":"Retry","enroll.totp.enterCode":"Enter code displayed from the application","enroll.totp.setupApp":"Launch {0} application on your mobile device and select Add an account.","enroll.totp.setupGoogleAuthApp":'Launch {0}, tap the "+" icon, then select "Scan barcode".',"enroll.totp.cannotScan":"Can't scan?","enroll.totp.refreshBarcode":"Refresh code","enroll.totp.cannotScanBarcode":"Can't scan barcode?","enroll.totp.manualSetupInstructions":"To set up manually enter your Okta Account username and then input the following in the Secret Key Field","enroll.totp.sharedSecretInstructions":"Enter your Okta Account username and enter the following in the Secret Key Field","enroll.totp.sendSms":"Send activation link via SMS","enroll.totp.sendEmail":"Send activation link via email","enroll.totp.setupManually":"Setup manually without push notification","enroll.totp.enrollViaEmail.title":"Activation email sent!","enroll.totp.enrollViaEmail.msg":"Open the email from your mobile device.","enroll.totp.enrollViaSms.title":"SMS sent!","enroll.totp.enrollViaSms.msg":"View the SMS on your mobile device.","recoveryChallenge.sms.title":"Enter verification code sent via SMS","recoveryChallenge.call.title":"Enter verification code received via Voice Call","mfa.factors.dropdown.title":"Select an authentication factor","mfa.duoSecurity.push":"Push — {0}","mfa.duoSecurity.sms":"SMS — {0}","mfa.duoSecurity.call":"Call — {0}","mfa.challenge.title":"Enter your {0} passcode","mfa.challenge.orEnterCode":"Or enter code","oktaverify.send":"Send Push","oktaverify.sent":"Push sent!","oktaverify.rejected":"You have chosen to reject this login.","oktaverify.timeout":"Your push notification has expired.","primaryauth.title":"Sign In","primaryauth.username.placeholder":"Username","primaryauth.username.tooltip":"Username","primaryauth.password.placeholder":"Password","primaryauth.password.tooltip":"Password","primaryauth.submit":"Sign In","primaryauth.newUser.tooltip":"This is the first time you are connecting to {0} from this browser","primaryauth.newUser.tooltip.close":"Close","password.forgot.email.or.username.placeholder":"Email or Username","password.forgot.email.or.username.tooltip":"Email or Username","password.forgot.sendText":"Reset via SMS","password.forgot.sendEmail":"Reset via Email","password.forgot.call":"Reset via Voice Call","password.forgot.emailSent.title":"Email sent!","password.forgot.emailSent.desc":"Email has been sent to {0} with instructions on resetting your password.","password.forgot.question.title":"Answer Forgotten Password Challenge","password.forgot.question.submit":"Reset Password","password.forgot.sms.notReceived":"Didn't receive an SMS? Reset via email","password.forgot.code.notReceived":"Didn't receive a code? Reset via email","password.reset.title":"Reset your Okta password","password.complexity.description":"Your password must have {0}.","password.complexity.length":"at least {0} characters","password.complexity.list.element":", {0}","password.complexity.lowercase":"a lowercase letter","password.complexity.uppercase":"an uppercase letter","password.complexity.number":"a number","password.complexity.symbol":"a symbol","password.complexity.no_username":"no parts of your username","password.expired.submit":"Change Password","password.expired.title":"Your Okta password has expired","password.expiring.later":"Remind me later","password.expiring.title":"Your password will expire in {0} days","password.expiring.today":"Your password will expire later today","password.expiring.subtitle":"When password expires you may be locked out of Okta Mobile, mobile email, and other services.","account.unlock.title":"Unlock account","account.unlock.email.or.username.placeholder":"Email or username","account.unlock.email.or.username.tooltip":"Email or username","account.unlock.sendText":"Send SMS","account.unlock.sendEmail":"Send Email","account.unlock.emailSent.title":"Email sent!","account.unlock.emailSent.desc":"Email has been sent to {0} with instructions on unlocking your account.","account.unlock.question.title":"Answer Unlock Account Challenge","account.unlock.question.submit":"Unlock Account","account.unlock.unlocked.title":"Account successfully unlocked!","account.unlock.unlocked.desc":"You can log in using your existing username and password.","account.unlock.sms.notReceived":"Didn't receive an SMS? Unlock via email","contact.support":"If you didn't provide a secondary email address or don't have access to email, please contact your administrator at {0}","socialauth.divider.text":"OR","socialauth.facebook.label":"Sign in with Facebook","socialauth.google.label":"Sign in with Google","socialauth.linkedin.label":"Sign in with LinkedIn","socialauth.microsoft.label":"Sign in with Microsoft","socialauth.popup.title":"External Identity Provider User Authentication","unsupported.oneDrive.title":"Your OneDrive version is not supported","unsupported.oneDrive.desc":"Upgrade now by installing the OneDrive for Business Next Generation Sync Client to login to Okta","unsupported.oneDrive.action":"Learn how to upgrade","factor.windowsHello.description":"Use Windows Hello to sign on to Okta","enroll.windowsHello.error.notConfigured":"Windows Hello not configured. Select the Start button, then select Settings - Accounts - Sign-in to configure Windows Hello."}},function(t,e){t.exports={AF:"Afghanistan",AX:"Åland Islands",AL:"Albania",DZ:"Algeria",AS:"American Samoa",AD:"Andorra",AO:"Angola",AI:"Anguilla",AQ:"Antarctica",AG:"Antigua and Barbuda",AR:"Argentina",AM:"Armenia",AW:"Aruba",AU:"Australia",AT:"Austria",AZ:"Azerbaijan",BS:"Bahamas",BH:"Bahrain",BD:"Bangladesh",
BB:"Barbados",BY:"Belarus",BE:"Belgium",BZ:"Belize",BJ:"Benin",BM:"Bermuda",BT:"Bhutan",BO:"Bolivia, Plurinational State of",BA:"Bosnia and Herzegovina",BW:"Botswana",BV:"Bouvet Island",BR:"Brazil",IO:"British Indian Ocean Territory",VG:"Virgin Islands, British",BN:"Brunei Darussalam",BG:"Bulgaria",BF:"Burkina Faso",BI:"Burundi",KH:"Cambodia",CM:"Cameroon",CA:"Canada",CV:"Cape Verde",KY:"Cayman Islands",CF:"Central African Republic",TD:"Chad",CL:"Chile",CN:"China",CX:"Christmas Island",CO:"Colombia",KM:"Comoros",CG:"Congo",CK:"Cook Islands",CR:"Costa Rica",CI:"Côte d'Ivoire",HR:"Croatia",CU:"Cuba",CY:"Cyprus",CZ:"Czech Republic",CD:"Congo, the Democratic Republic of the",DK:"Denmark",DJ:"Djibouti",DM:"Dominica",DO:"Dominican Republic",TL:"Timor-Leste",EC:"Ecuador",EG:"Egypt",SV:"El Salvador",GQ:"Equatorial Guinea",ER:"Eritrea",EE:"Estonia",ET:"Ethiopia",FK:"Falkland Islands (Malvinas)",FO:"Faroe Islands",FJ:"Fiji",FI:"Finland",FR:"France",GF:"French Guiana",PF:"French Polynesia",TF:"French Southern Territories",GA:"Gabon",GM:"Gambia",GE:"Georgia",DE:"Germany",GH:"Ghana",GI:"Gibraltar",GR:"Greece",GL:"Greenland",GD:"Grenada",GP:"Guadeloupe",GU:"Guam",GT:"Guatemala",GG:"Guernsey",GN:"Guinea",GW:"Guinea-Bissau",GY:"Guyana",HT:"Haiti",HM:"Heard Island and McDonald Islands",HN:"Honduras",HK:"Hong Kong",HU:"Hungary",IS:"Iceland",IN:"India",ID:"Indonesia",IR:"Iran, Islamic Republic of",IQ:"Iraq",IE:"Ireland",IL:"Israel",IT:"Italy",JM:"Jamaica",JP:"Japan",JE:"Jersey",JO:"Jordan",KZ:"Kazakhstan",KE:"Kenya",KI:"Kiribati",KR:"Korea, Republic of",KW:"Kuwait",KG:"Kyrgyzstan",LA:"Lao People's D", "base64"));
  res.write(new Buffer("emocratic Republic",LV:"Latvia",LB:"Lebanon",LS:"Lesotho",LR:"Liberia",LY:"Libya",LI:"Liechtenstein",LT:"Lithuania",LU:"Luxembourg",MO:"Macao",MK:"Macedonia, the former Yugoslav Republic of",MG:"Madagascar",MW:"Malawi",MY:"Malaysia",MV:"Maldives",ML:"Mali",MT:"Malta",MH:"Marshall Islands",MQ:"Martinique",MR:"Mauritania",MU:"Mauritius",YT:"Mayotte",MX:"Mexico",FM:"Micronesia, Federated States of",MD:"Moldova, Republic of",MC:"Monaco",MN:"Mongolia",ME:"Montenegro",MS:"Montserrat",MA:"Morocco",MZ:"Mozambique",MM:"Myanmar",NA:"Namibia",NR:"Nauru",NP:"Nepal",NL:"Netherlands",AN:"Netherlands Antilles",NC:"New Caledonia",NZ:"New Zealand",NI:"Nicaragua",NE:"Niger",NG:"Nigeria",NU:"Niue",NF:"Norfolk Island",KP:"Korea, Democratic People's Republic of",MP:"Northern Mariana Islands",NO:"Norway",OM:"Oman",PK:"Pakistan",PW:"Palau",PS:"Palestine, State of",PA:"Panama",PG:"Papua New Guinea",PY:"Paraguay",PE:"Peru",PH:"Philippines",PN:"Pitcairn",PL:"Poland",PT:"Portugal",PR:"Puerto Rico",QA:"Qatar",RE:"Réunion",RO:"Romania",RU:"Russian Federation",RW:"Rwanda",SH:"Saint Helena, Ascension and Tristan da Cunha",KN:"Saint Kitts and Nevis",LC:"Saint Lucia",PM:"Saint Pierre and Miquelon",VC:"Saint Vincent and the Grenadines",WS:"Samoa",SM:"San Marino",ST:"São Tomé and Príncipe",SA:"Saudi Arabia",SN:"Senegal",RS:"Serbia",SC:"Seychelles",SL:"Sierra Leone",SG:"Singapore",SK:"Slovakia",SI:"Slovenia",SB:"Solomon Islands",SO:"Somalia",ZA:"South Africa",GS:"South Georgia and the South Sandwich Islands",SS:"South Sudan",ES:"Spain",LK:"Sri Lanka",SD:"Sudan",SR:"Suriname",SJ:"Svalbard and Jan Mayen",SZ:"Swaziland",SE:"Sweden",CH:"Switzerland",SY:"Syrian Arab Republic",TW:"Taiwan",TJ:"Tajikistan",TZ:"Tanzania, United Republic of",TH:"Thailand",TG:"Togo",TK:"Tokelau",TO:"Tonga",TT:"Trinidad and Tobago",TN:"Tunisia",TR:"Turkey",TM:"Turkmenistan",TC:"Turks and Caicos Islands",TV:"Tuvalu",VI:"Virgin Islands, U.S.",UG:"Uganda",UA:"Ukraine",AE:"United Arab Emirates",GB:"United Kingdom",US:"United States",UM:"United States Minor Outlying Islands",UY:"Uruguay",UZ:"Uzbekistan",VU:"Vanuatu",VA:"Holy See (Vatican City State)",VE:"Venezuela, Bolivarian Republic of",VN:"Viet Nam",WF:"Wallis and Futuna",EH:"Western Sahara",YE:"Yemen",ZM:"Zambia",ZW:"Zimbabwe"}},function(t,e,n){var i,o;i=[n(2),n(13)],o=function(t,e){return t.extend(e,{deprecate:function(t){e.warn("[okta-signin-widget] DEPRECATED:",t)}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i;i=function(){function t(t,e){window.console&&window.console[t].apply(window.console,e)}return{trace:function(){return t("trace",arguments)},dir:function(){return t("dir",arguments)},time:function(){return t("time",arguments)},timeEnd:function(){return t("timeEnd",arguments)},group:function(){return t("group",arguments)},groupEnd:function(){return t("groupEnd",arguments)},assert:function(){return t("assert",arguments)},log:function(){return t("log",arguments)},info:function(){return t("info",arguments)},warn:function(){return t("warn",arguments)},error:function(){return t("error",arguments)}}}.call(e,n,e,t),!(void 0!==i&&(t.exports=i))},function(module,exports){"object"!=typeof JSON&&(JSON={}),function(){"use strict";function f(t){return t<10?"0"+t:t}function quote(t){return escapable.lastIndex=0,escapable.test(t)?'"'+t.replace(escapable,function(t){var e=meta[t];return"string"==typeof e?e:"\\u"+("0000"+t.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+t+'"'}function str(t,e){var n,i,o,r,s,a=gap,l=e[t];switch(l&&"object"==typeof l&&"function"==typeof l.toJSON&&(l=l.toJSON(t)),"function"==typeof rep&&(l=rep.call(e,t,l)),typeof l){case"string":return quote(l);case"number":return isFinite(l)?String(l):"null";case"boolean":case"null":return String(l);case"object":if(!l)return"null";if(gap+=indent,s=[],"[object Array]"===Object.prototype.toString.apply(l)){for(r=l.length,n=0;n<r;n+=1)s[n]=str(n,l)||"null";return o=0===s.length?"[]":gap?"[\n"+gap+s.join(",\n"+gap)+"\n"+a+"]":"["+s.join(",")+"]",gap=a,o}if(rep&&"object"==typeof rep)for(r=rep.length,n=0;n<r;n+=1)"string"==typeof rep[n]&&(i=rep[n],o=str(i,l),o&&s.push(quote(i)+(gap?": ":":")+o));else for(i in l)Object.prototype.hasOwnProperty.call(l,i)&&(o=str(i,l),o&&s.push(quote(i)+(gap?": ":":")+o));return o=0===s.length?"{}":gap?"{\n"+gap+s.join(",\n"+gap)+"\n"+a+"}":"{"+s.join(",")+"}",gap=a,o}}"function"!=typeof Date.prototype.toJSON&&(Date.prototype.toJSON=function(t){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate())+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTCSeconds())+"Z":null},String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(t){return this.valueOf()});var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},rep;"function"!=typeof JSON.stringify&&(JSON.stringify=function(t,e,n){var i;if(gap="",indent="","number"==typeof n)for(i=0;i<n;i+=1)indent+=" ";else"string"==typeof n&&(indent=n);if(rep=e,e&&"function"!=typeof e&&("object"!=typeof e||"number"!=typeof e.length))throw new Error("JSON.stringify");return str("",{"":t})}),"function"!=typeof JSON.parse&&(JSON.parse=function(text,reviver){function walk(t,e){var n,i,o=t[e];if(o&&"object"==typeof o)for(n in o)Object.prototype.hasOwnProperty.call(o,n)&&(i=walk(o,n),void 0!==i?o[n]=i:delete o[n]);return reviver.call(t,e,o)}var j;if(text=String(text),cx.lastIndex=0,cx.test(text)&&(text=text.replace(cx,function(t){return"\\u"+("0000"+t.charCodeAt(0).toString(16)).slice(-4)})),/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,"")))return j=eval("("+text+")"),"function"==typeof reviver?walk({"":j},""):j;throw new SyntaxError("JSON.parse")})}()},function(t,e,n){var i;i=function(){}.call(e,n,e,t),!(void 0!==i&&(t.exports=i))},function(t,e,n){var i,o;i=[n(6),n(14)],o=function(t){return t(function(){t.ajaxSetup({headers:{"X-Okta-XsrfToken":t("#_xsrfToken").text()},converters:{"text secureJSON":function(t){return"while(1){};"===t.substring(0,11)&&(t=t.substring(11)),JSON.parse(t)}}})}),window.jQueryCourage=t,t}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i=n(18);t.exports=n(19)(i)},function(t,e,n){function i(t,e,n){var i=o.Deferred();return o.ajax({type:t,url:e,headers:n.headers,data:JSON.stringify(n.data),xhrFields:{withCredentials:!0}}).then(function(t,e,n){delete n.then,i.resolve(n)},function(t){delete t.then,i.reject(t)}),i}var o=n(6);t.exports=i},function(t,e,n){function i(t){var e=this;if(!t)throw new c("No arguments passed to constructor. Required usage: new OktaAuth(args)");if(!t.url)throw new c('No url passed to constructor. Required usage: new OktaAuth({url: "https://sample.okta.com"})');this.options={url:t.url,clientId:t.clientId,redirectUri:t.redirectUri,ajaxRequest:t.ajaxRequest,transformErrorXHR:t.transformErrorXHR,headers:t.headers},t.maxClockSkew||0===t.maxClockSkew?this.options.maxClockSkew=t.maxClockSkew:this.options.maxClockSkew=u.DEFAULT_MAX_CLOCK_SKEW,"/"===this.options.url.slice(-1)&&(this.options.url=this.options.url.slice(0,-1)),e.session={close:o.bind(s.closeSession,null,e),exists:o.bind(s.sessionExists,null,e),get:o.bind(s.getSession,null,e),refresh:o.bind(s.refreshSession,null,e),setCookieAndRedirect:o.bind(s.setCookieAndRedirect,null,e)},e.tx={status:o.bind(r.transactionStatus,null,e),resume:o.bind(r.resumeTransaction,null,e),exists:o.bind(r.transactionExists,null,e)},e.tx.exists._getCookie=function(t){return a.getCookie(t)},e.idToken={authorize:o.deprecateWrap("Use token.getWithoutPrompt, token.getWithPopup, or token.getWithRedirect instead of idToken.authorize.",o.bind(l.getToken,null,e)),verify:o.bind(l.verifyIdToken,null,e),refresh:o.deprecateWrap("Use token.refresh instead of idToken.refresh",o.bind(l.refreshIdToken,null,e)),decode:o.deprecateWrap("Use token.decode instead of idToken.decode",l.decodeToken)},e.idToken.authorize._getLocationHref=function(){return window.location.href},e.token={getWithoutPrompt:o.bind(l.getWithoutPrompt,null,e),getWithPopup:o.bind(l.getWithPopup,null,e),getWithRedirect:o.bind(l.getWithRedirect,null,e),parseFromUrl:o.bind(l.parseFromUrl,null,e),decode:l.decodeToken,refresh:o.bind(l.refreshToken,null,e),getUserInfo:o.bind(l.getUserInfo,null,e)},e.token.getWithRedirect._setLocation=function(t){window.location=t},e.token.parseFromUrl._getLocationHash=function(t){return window.location.hash},e.tokenManager=new p(e,t.tokenManager)}n(20);var o=n(22),r=n(23),s=n(30),a=n(25),l=n(31),c=n(28),u=n(27),p=n(34),h=i.prototype;h.features={},h.features.isPopupPostMessageSupported=function(){var t=document.documentMode&&document.documentMode<10;return!(!window.postMessage||t)},h.features.isTokenVerifySupported=function(){return"undefined"!=typeof crypto&&crypto.subtle&&"undefined"!=typeof Uint8Array},h.signIn=function(t){return r.postToTransaction(this,"/api/v1/authn",t)},h.signOut=function(){return this.session.close()},h.forgotPassword=function(t){return r.postToTransaction(this,"/api/v1/authn/recovery/password",t)},h.unlockAccount=function(t){return r.postToTransaction(this,"/api/v1/authn/recovery/unlock",t)},h.verifyRecoveryToken=function(t){return r.postToTransaction(this,"/api/v1/authn/recovery/token",t)},t.exports=function(t){function e(n){return this instanceof e?(n&&!n.ajaxRequest&&(n.ajaxRequest=t),void o.bind(i,this)(n)):new e(n)}return e.prototype=i.prototype,e.prototype.constructor=e,e}},function(t,e,n){n(21),Array.prototype.indexOf||(Array.prototype.indexOf=function(t,e){var n;if(null==this)throw new TypeError('"this" is null or not defined');var i=Object(this),o=i.length>>>0;if(0===o)return-1;var r=+e||0;if(Math.abs(r)===1/0&&(r=0),r>=o)return-1;for(n=Math.max(r>=0?r:o-Math.abs(r),0);n<o;){if(n in i&&i[n]===t)return n;n++}return-1}),Array.isArray||(Array.isArray=function(t){return"[object Array]"===Object.prototype.toString.call(t)})},function(t,e,n){!function(){function t(t){this.message=t}var n=e,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";t.prototype=new Error,t.prototype.name="InvalidCharacterError",n.btoa||(n.btoa=function(e){for(var n,o,r=String(e),s=0,a=i,l="";r.charAt(0|s)||(a="=",s%1);l+=a.charAt(63&n>>8-s%1*8)){if(o=r.charCodeAt(s+=.75),o>255)throw new t("'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.");n=n<<8|o}return l}),n.atob||(n.atob=function(e){var n=String(e).replace(/=+$/,"");if(n.length%4==1)throw new t("'atob' failed: The string to be decoded is not correctly encoded.");for(var o,r,s=0,a=0,l="";r=n.charAt(a++);~r&&(o=s%4?64*o+r:r,s++%4)?l+=String.fromCharCode(255&o>>(-2*s&6)):0)r=i.indexOf(r);return l})}()},function(t,e){function n(t){return t.replace(/\-/g,"+").replace(/_/g,"/")}function i(t){var e=n(t);switch(e.length%4){case 0:break;case 2:e+="==";break;case 3:e+="=";break;default:throw"Not a valid Base64Url"}var i=atob(e);try{return decodeURIComponent(escape(i))}catch(o){return i}}function o(t){for(var e=new Uint8Array(t.length),n=0;n<t.length;n++)e[n]=t.charCodeAt(n);return e}function r(t){return atob(n(t))}function s(t,e){var n=Array.prototype.slice.call(arguments,2);return function(){var i=Array.prototype.slice.call(arguments);return i=n.concat(i),t.apply(e,i)}}function a(t){return/^(?:[a-z]+:)?\/\//i.test(t)}function l(t){return"[object String]"===Object.prototype.toString.call(t)}function c(t){return"[object Object]"===Object.prototype.toString.call(t)}function u(t){return"[object Number]"===Object.prototype.toString.call(t)}function p(t){return"[object Array]"===Object.prototype.toString.call(t)}function h(t){var e=t.match(/\d+/g),n=Date.UTC(e[0],e[1]-1,e[2],e[3],e[4],e[5]),i=new Date(n);return i.toUTCString()}function d(t){var e=[];if(null!==t)for(var n in t)t.hasOwnProperty(n)&&void 0!==t[n]&&null!==t[n]&&e.push(n+"="+encodeURIComponent(t[n]));return e.length?"?"+e.join("&"):""}function f(t){for(var e="abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",n="",i=0,o=e.length;i<t;++i)n+=e[Math.floor(Math.random()*o)];return n}function m(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])}function g(t){var e={};for(var n in t)if(t.hasOwnProperty(n)){var i=t[n];null!==i&&void 0!==i&&(e[n]=i)}return e}function v(t){if(t){var e=JSON.stringify(t);if(e)return JSON.parse(e)}return t}function y(t){var e=Array.prototype.slice.call(arguments,1),n={};for(var i in t)t.hasOwnProperty(i)&&e.indexOf(i)==-1&&(n[i]=t[i]);return v(n)}function _(t,e){for(var n=t.length;n--;){var i=t[n],o=!0;for(var r in e)if(e.hasOwnProperty(r)&&i[r]!==e[r]){o=!1;break}if(o)return i}}function b(t,e,n){if(t&&t._links){var i=v(t._links[e]);return i&&i.name&&n?i.name===n?i:void 0:i}}function w(t){console.log("[okta-auth-sdk] DEPRECATION: "+t)}function S(t,e){return function(){return w(t),e.apply(null,arguments)}}t.exports={base64UrlToBase64:n,base64UrlToString:i,stringToBuffer:o,base64UrlDecode:r,bind:s,isAbsoluteUrl:a,isString:l,isObject:c,isNumber:u,isArray:p,isoToUTCString:h,toQueryParams:d,genRandomString:f,extend:m,removeNils:g,clone:v,omit:y,find:_,getLink:b,deprecate:w,deprecateWrap:S}},function(t,e,n){function i(t,e){var n=m.clone(e)||{};return!n.stateToken&&t.stateToken&&(n.stateToken=t.stateToken),n}function o(t){return i(t)}function r(t,e){return e=i(t,e),f.post(t,t.options.url+"/api/v1/authn",e)}function s(t,e){if(!e||!e.stateToken){var n=t.tx.exists._getCookie(_.STATE_TOKEN_COOKIE_NAME);if(!n)return g.reject(new v("No transaction to resume"));e={stateToken:n}}return t.tx.status(e).then(function(e){return new d(t,e)})}function a(t){return!!t.tx.exists._getCookie(_.STATE_TOKEN_COOKIE_NAME)}function l(t,e,n){return f.post(t,e,n).then(function(e){return new d(t,e)})}function c(t,e,n){return function(i){function r(){var n=l.href;return a&&(n+="?rememberDevice=true"),f.post(t,n,o(e),!0,!0)}var s,a;m.isNumber(i)?s=i:m.isObject(i)&&(s=i.delay,a=i.rememberDevice),s||0===s||(s=_.DEFAULT_POLLING_DELAY);var l=m.getLink(e,"next","poll");n.isPolling=!0;var c=0,u=function(){return n.isPolling?r().then(function(e){if(c=0,e.factorResult&&"WAITING"===e.factorResult){if(!n.isPolling)throw new y;return g.delay(s).then(u)}return n.isPolling=!1,new d(t,e)}).fail(function(t){if(t.xhr&&(0===t.xhr.status||429===t.xhr.status)&&c<=4){var e=1e3*Math.pow(2,c);return c++,g.delay(e).then(u)}throw t}):g.reject(new y)};return u().fail(function(t){throw n.isPolling=!1,t})}}function u(t,e,n,o,r){if(Array.isArray(o))return function(i,s){if(!i)throw new v("Must provide a link name");var a=m.find(o,{name:i});if(!a)throw new v("No link found for that name");return u(t,e,n,a,r)(s)};if(o.hints&&o.hints.allow&&1===o.hints.allow.length){var s=o.hints.allow[0];switch(s){case"GET":return function(){return f.get(t,o.href)};case"POST":return function(s){r&&r.isPolling&&(r.isPolling=!1);var a=i(e,s);"MFA_ENROLL"===e.status&&m.extend(a,{factorType:n.factorType,provider:n.provider});var c=o.href;return void 0!==a.rememberDevice?(a.rememberDevice&&(c+="?rememberDevice=true"),a=m.omit(a,"rememberDevice")):a.profile&&void 0!==a.profile.updatePhone&&(a.profile.updatePhone&&(c+="?updatePhone=true"),a.profile=m.omit(a.profile,"updatePhone")),l(t,c,a)}}}}function p(t,e,n,i){var o={};for(var r in n._links)if(n._links.hasOwnProperty(r)){var s=n._links[r];if("next"===r&&(r=s.name),s.type)o[r]=s;else switch(r){case"poll":o.poll=c(t,e,i);break;default:var a=u(t,e,n,s,i);a&&(o[r]=a)}}return o}function h(t,e,n,i){if(n=n||e,n=m.clone(n),Array.isArray(n)){for(var o=[],r=0,s=n.length;r<s;r++)o.push(h(t,e,n[r],i));return o}var a=n._embedded||{};for(var l in a)a.hasOwnProperty(l)&&(m.isObject(a[l])||Array.isArray(a[l]))&&(a[l]=h(t,e,a[l],i));var c=p(t,e,n,i);return m.extend(a,c),n=m.omit(n,"_embedded","_links"),m.extend(n,a),n}function d(t,e){e&&(this.data=e,m.extend(this,h(t,e,e,{})),delete this.stateToken,"RECOVERY_CHALLENGE"!==e.status||e._links||(this.cancel=function(){return new g(new d(t))}))}var f=n(24),m=n(22),g=n(9),v=n(28),y=n(29),_=n(27);t.exports={transactionStatus:r,resumeTransaction:s,transactionExists:a,postToTransaction:l}},function(t,e,n){function i(t,e){e=e||{};var n=e.url,i=e.method,o=e.args,r=e.dontSaveResponse,p=e.accessToken,h={Accept:"application/json","Content-Type":"application/json","X-Okta-User-Agent-Extended":"okta-auth-js-"+u.SDK_VERSION};s.extend(h,t.options.headers||{}),p&&s.isString(p)&&(h.Authorization="Bearer "+p);var d,f,m={headers:h,data:o||void 0};return new l(t.options.ajaxRequest(i,n,m)).then(function(t){return f=t.responseText,f&&s.isString(f)&&(f=JSON.parse(f)),r||f.stateToken||a.deleteCookie(u.STATE_TOKEN_COOKIE_NAME),f&&f.stateToken&&f.expiresAt&&a.setCookie(u.STATE_TOKEN_COOKIE_NAME,f.stateToken,f.expiresAt),f}).fail(function(e){var n=e.responseText||{};if(s.isString(n))try{n=JSON.parse(n)}catch(i){n={errorSummary:"Unknown error"}}throw e.status>=500&&(n.errorSummary="Unknown error"),t.options.transformErrorXHR&&(e=t.options.transformErrorXHR(s.clone(e))),d=new c(n,e),"E0000011"===d.errorCode&&a.deleteCookie(u.STATE_TOKEN_COOKIE_NAME),d})}function o(t,e,n){return e=s.isAbsoluteUrl(e)?e:t.options.url+e,i(t,{url:e,method:"GET",dontSaveResponse:!n})}function r(t,e,n,o){return e=s.isAbsoluteUrl(e)?e:t.options.url+e,i(t,{url:e,method:"POST",args:n,dontSaveResponse:o})}var s=n(22),a=n(25),l=n(9),c=n(26),u=n(27);t.exports={get:o,post:r,httpRequest:i}},function(t,e,n){function i(t,e,n){var o="";n&&(o=" expires="+s.isoToUTCString(n)+";");var r=t+"="+e+";"+o;return i._setDocumentCookie(r),r}function o(t){var e=new RegExp(t+"=([^;]*)"),n=o._getDocumentCookie().match(e);if(n){var i=n[1];return i}}function r(t){i(t,"","1970-01-01T00:00:00Z")}var s=n(22);i._setDocumentCookie=function(t){document.cookie=t},o._getDocumentCookie=function(){return document.cookie},t.exports={setCookie:i,getCookie:o,deleteCookie:r}},function(t,e){function n(t,e){this.name="AuthApiError",this.message=t.errorSummary,this.errorSummary=t.errorSummary,this.errorCode=t.errorCode,this.errorLink=t.errorLink,this.errorId=t.errorId,this.errorCauses=t.errorCauses,e&&(this.xhr=e)}n.prototype=new Error,t.exports=n},function(t,e){t.exports={STATE_TOKEN_COOKIE_NAME:"oktaStateToken",DEFAULT_POLLING_DELAY:500,DEFAULT_MAX_CLOCK_SKEW:300,REDIRECT_OAUTH_PARAMS_COOKIE_NAME:"okta-oauth-redirect-params",TOKEN_STORAGE_NAME:"okta-token-storage",SDK_VERSION:"1.5.0"}},function(t,e){function n(t,e){this.name="AuthSdkError",this.message=t,this.errorCode="INTERNAL",this.errorSummary=t,this.errorLink="INTERNAL",this.errorId="INTERNAL",this.errorCauses=[],e&&(this.xhr=e)}n.prototype=new Error,t.exports=n},function(t,e){function n(){this.name="AuthPollStopError",this.message="The poll was stopped by the sdk"}n.prototype=new Error,t.exports=n},function(t,e,n){function i(t){return t.session.get().then(function(t){return"ACTIVE"===t.status}).fail(function(){return!1})}function o(t){return c.get(t,"/api/v1/sessions/me").then(function(e){var n=l.omit(e,"_links");return n.refresh=function(){return c.post(t,l.getLink(e,"refresh").href)},n.user=function(){return c.get(t,l.getLink(e,"user").href)},n}).fail(function(){return{status:"INACTIVE"}})}function r(t){return c.httpRequest(t,{url:t.options.url+"/api/v1/sessions/me",method:"DELETE",dontSaveResponse:!0})}function s(t){return c.post(t,"/api/v1/sessions/me/lifecycle/refresh")}function a(t,e,n){n=n||window.location.href,window.location=t.options.url+"/login/sessionCookieRedirect"+l.toQueryParams({checkAccountSetupComplete:!0,token:e,redirectUrl:n})}var l=n(22),c=n(24);t.exports={sessionExists:i,getSession:o,closeSession:r,refreshSession:s,setCookieAndRedirect:a}},function(t,e,n){function i(t){return C.get(t,t.options.url+"/.well-known/openid-configuration")}function o(t,e,n){var i=t.options.url;if(!e||!i||!n)throw new N("The jwt, iss, and aud arguments are all required");var o=Math.floor((new Date).getTime()/1e3);if(e.iss!==i)throw new N("The issuer ["+e.iss+"] does not match ["+i+"]");if(e.aud!==n)throw new N("The audience ["+e.aud+"] does not match ["+n+"]");if(e.iat>e.exp)throw new N("The JWT expired before it was issued");if(o-t.options.maxClockSkew>e.exp)throw new N("The JWT expired and is no longer valid");if(e.iat>o+t.options.maxClockSkew)throw new N("The JWT was issued in the future")}function r(t){var e,n=t.split(".");try{e={header:JSON.parse(A.base64UrlToString(n[0])),payload:JSON.parse(A.base64UrlToString(n[1])),signature:n[2]}}catch(i){throw new N("Malformed token")}return e}function s(t,e,n){function o(t){var e;if(e=n.expirationTime||0===n.expirationTime?n.expirationTime:Math.floor(Date.now()/1e3),t&&t>e)return!0}function r(t){if(!n.audience)return!0;for(var e=Array.isArray(n.audience)?n.audience:[n.audience],i=Array.isArray(t)?t:[t],o=e.length;o--;){var r=e[o];if(i.indexOf(r)!==-1)return!0}}return n=n||{},t.features.isTokenVerifySupported()?i(t).then(function(e){return C.get(t,e.jwks_uri)}).then(function(t){var n=t.keys[0];return R.verifyToken(e,n)}).then(function(i){if(!i)return!1;var s=t.token.decode(e);return!o(s.payload.exp)&&(!!r(s.payload.aud)&&(!n.issuer||n.issuer===s.payload.iss))}):O.reject(new N("This browser doesn't support crypto.subtle"))}function a(t,e){return e=e||{},e.display=null,e.prompt="none",_(t,e)}function l(t){var e=document.createElement("iframe");return e.style.display="none",e.src=t,document.body.appendChild(e)}function c(t,e){var n=e.popupTitle||"External Identity Provider User Authentication",i="toolbar=no, scrollbars=yes, resizable=yes, top=100, left=500, width=600, height=600";return window.open(t,n,i)}function u(t,e,n){t.addEventListener?t.addEventListener(e,n):t.attachEvent("on"+e,n)}function p(t,e,n){t.removeEventListener?t.removeEventListener(e,n):t.detachEvent("on"+e,n)}function h(t,e,n){function i(e){!e.data||e.origin!==t.options.url||e.data&&A.isString(n)&&e.data.state!==n||o.resolve(e.data)}var o=O.defer();return u(window,"message",i),o.promise.timeout(e||12e4,new N("OAuth flow timed out")).fin(function(){p(window,"message",i)})}function d(t){for(var e,n=/\+/g,i=/([^&=]+)=?([^&]*)/g,o=t.substring(1),r={};;){if(e=i.exec(o),!e)break;var s=e[1],a=e[2];"id_token"===s||"access_token"===s||"code"===s?r[s]=a:r[s]=decodeURIComponent(a.replace(n," "))}return r}function f(t,e,n){function i(){try{e&&e.location&&e.location.hash?o.resolve(d(e.location.hash)):e&&!e.closed&&setTimeout(i,500)}catch(t){setTimeout(i,500)}}var o=O.defer();return i(),o.promise.timeout(n||12e4,new N("OAuth flow timed out"))}function m(t,e,n){if(n.error||n.error_description)throw new I(n.error,n.error_description);if(n.state!==e.state)throw new N("OAuth flow response state doesn't match request state");var i=e.responseType,r=A.clone(e.scopes),s={};if(n.id_token){var a=t.token.decode(n.id_token);if(a.payload.nonce!==e.nonce)throw new N("OAuth flow response nonce doesn't match request nonce");var l=e.clientId||t.options.clientId;o(t,a.payload,l);var c={idToken:n.id_token,claims:a.payload,expiresAt:a.payload.exp,scopes:r};if(!Array.isArray(i))return c;s.id_token=c}if(n.access_token){var u={accessToken:n.access_token,expiresAt:Number(n.expires_in)+Math.floor(Date.now()/1e3),tokenType:n.token_type,scopes:r};if(!Array.isArray(i))return u;s.token=u}if(n.code){var p={authorizationCode:n.code};if(!Array.isArray(i))return p;s.code=p}if(!s.token&&!s.id_token)throw new N("Unable to parse OAuth flow response");for(var h=[],d=0,f=i.length;d<f;d++){var m=i[d];s[m]&&h.push(s[m])}return h}function g(t,e){e=A.clone(e)||{},e.scope&&(A.deprecate('The param "scope" is equivalent to "scopes". Use "scopes" instead.'),e.scopes=e.scope,delete e.scope);var n={clientId:t.options.clientId,redirectUri:t.options.redirectUri||window.location.href,responseType:"id_token",responseMode:"okta_post_message",state:A.genRandomString(64),nonce:A.genRandomString(64),scopes:["openid","email"]};return A.extend(n,e),n}function v(t){if(!t.clientId)throw new N("A clientId must be specified in the OktaAuth constructor to get a token");if(A.isString(t.responseType)&&t.responseType.indexOf(" ")!==-1)throw new N("Multiple OAuth responseTypes must be defined as an array");var e=A.removeNils({client_id:t.clientId,redirect_uri:t.redirectUri,response_type:t.responseType,response_mode:t.responseMode,state:t.state,nonce:t.nonce,prompt:t.prompt,display:t.display,sessionToken:t.sessionToken,idp:t.idp,max_age:t.maxAge});if(Array.isArray(e.response_type)&&(e.response_type=e.response_type.join(" ")),t.responseType.indexOf("id_token")!==-1&&t.scopes.indexOf("openid")===-1)throw new N("openid scope must be specified in the scopes argument when requesting an id_token");return e.scope=t.scopes.join(" "),e}function y(t,e){var n=v(e);return t.options.url+"/oauth2/v1/authorize"+A.toQueryParams(n)}function _(t,e,n){function i(t){var e=/^(https?\:\/\/)?([^:\/?#]*(?:\:[0-9]+)?)/;return e.exec(t)[0]}function o(t){t.closed&&E.reject(new N("Unable to parse OAuth flow response"))}e=e||{},n=n||{};var r=g(t,e),s={prompt:"none",responseMode:"okta_post_message",display:null},a={display:"popup"};e.sessionToken?A.extend(r,s):e.idp&&A.extend(r,a);var u;try{u=y(t,r)}catch(p){return O.reject(p)}var d;switch(d=r.sessionToken||null===r.display?"IFRAME":"popup"===r.display?"POPUP":"IMPLICIT"){case"IFRAME":var v=h(t,n.timeout,r.state),_=l(u);return v.then(function(e){return m(t,r,e)}).fin(function(){document.body.contains(_)&&_.parentElement.removeChild(_)});case"POPUP":var b;if("okta_post_message"===r.responseMode){if(!t.features.isPopupPostMessageSupported())return O.reject(new N("This browser doesn't have full postMessage support"));b=h(t,n.timeout,r.state)}var w={popupTitle:n.popupTitle},S=c(u,w);if("fragment"===r.responseMode){var k=i(t.idToken.authorize._getLocationHref()),x=i(r.redirectUri);if(k!==x)return O.reject(new N("Using fragment, the redirectUri origin ("+x+") must match the origin of this page ("+k+")"));b=f(t,S,n.timeout)}var E=O.defer(),T=setInterval(function(){o(S)},500);return b.then(function(t){E.resolve(t)}).fail(function(t){E.reject(t)}),E.promise.then(function(e){return m(t,r,e)}).fin(function(){S.closed||(clearInterval(T),S.close())});default:return O.reject(new N("The full page redirect flow is not supported"))}}function b(t,e,n){var i=A.clone(e)||{};return A.extend(i,{prompt:"none",responseMode:"okta_post_message",display:null}),_(t,i,n)}function w(t,e,n){var i=A.clone(e)||{};return A.extend(i,{display:"popup"}),_(t,i,n)}function S(t,e,n){e=A.clone(e)||{};var i=g(t,e);if(!e.responseMode){var o=i.responseType;o.indexOf("code")!==-1&&(A.isString(o)||Array.isArray(o)&&1===o.length)?A.extend(i,{responseMode:"query"}):A.extend(i,{responseMode:"fragment"})}var r=y(t,i);L.setCookie(P.REDIRECT_OAUTH_PARAMS_COOKIE_NAME,JSON.stringify({responseType:i.responseType,state:i.state,nonce:i.nonce,scopes:i.scopes})),t.token.getWithRedirect._setLocation(r)}function k(t){return!(!t||!t.accessToken&&!t.idToken||!Array.isArray(t.scopes))}function x(t,e){if(!k(e))return O.reject(new N("Refresh must be passed a token with an array of scopes and an accessToken or idToken"));var n;return n=e.accessToken?"token":"id_token",t.token.getWithoutPrompt({responseType:n,scopes:e.scopes})}function E(t,e){var n=t.token.parseFromUrl._getLocationHash();e&&(n=e.substring(e.indexOf("#")));var i=L.getCookie(P.REDIRECT_OAUTH_PARAMS_COOKIE_NAME);if(!n||!i)return O.reject(new N("Unable to parse a token from the url"));try{var o=JSON.parse(i);L.deleteCookie(P.REDIRECT_OAUTH_PARAMS_COOKIE_NAME)}catch(r){return O.reject(new N("Unable to parse the "+P.REDIRECT_OAUTH_PARAMS_COOKIE_NAME+" cookie: "+r.message))}return O.resolve(d(n)).then(function(e){return m(t,o,e)})}function T(t,e){return e&&(k(e)||e.accessToken)?C.httpRequest(t,{url:t.options.url+"/oauth2/v1/userinfo",method:"GET",dontSaveResponse:!0,accessToken:e.accessToken}).fail(function(t){if(t.xhr&&(401===t.xhr.status||403===t.xhr.status)){var e=t.xhr.getResponseHeader("WWW-Authenticate");if(e){var n=e.match(/error="(.*?)"/)||[],i=e.match(/error_description="(.*?)"/)||[],o=n[1],r=i[1];o&&r&&(t=new I(o,r))}}throw t}):O.reject(new N("getUserInfo requires an access token object"))}var C=n(24),A=n(22),O=n(9),R=n(32),N=n(28),I=n(33),P=n(27),L=n(25);t.exports={getToken:_,getWithoutPrompt:b,getWithPopup:w,getWithRedirect:S,parseFromUrl:E,refreshIdToken:a,decodeToken:r,verifyIdToken:s,refreshToken:x,getUserInfo:T}},function(t,e,n){function i(t,e){var n="jwk",i={name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},r=!0,s=["verify"];return crypto.subtle.importKey(n,e,i,r,s).then(function(e){var n=t.split("."),r=o.stringToBuffer(n[0]+"."+n[1]),s=o.base64UrlDecode(n[2]),a=o.stringToBuffer(s);return crypto.subtle.verify(i,e,a,r)})}var o=n(22);t.exports={verifyToken:i}},function(t,e){function n(t,e){this.name="OAuthError",this.message=e,this.errorCode=t,this.errorSummary=e}n.prototype=new Error,t.exports=n},function(t,e,n){function i(t,e,n){t.emitter.emit("expired",e,n)}function o(t,e){clearTimeout(t.refreshTimeouts[e]),delete t.refreshTimeouts[e]}function r(t){var e=t.refreshTimeouts;for(var n in e)e.hasOwnProperty(n)&&o(t,n);t.refreshTimeouts={}}function s(t,e,n,r,s){var a=1e3*s.expiresAt-Date.now();a<0&&(a=0);var l=setTimeout(function(){return e.autoRefresh?p(t,e,n,r):void(1e3*s.expiresAt<=Date.now()&&(u(e,n,r),i(e,r,s)))},a);o(e,r),e.refreshTimeouts[r]=l}function a(t,e,n){try{var i=n.getTokenStorage()}catch(o){return void e.emitter.emit("error",o)}for(var r in i)if(i.hasOwnProperty(r)){var a=i[r];s(t,e,n,r,a)}}function l(t,e,n,i,o){var r=n.getTokenStorage();if(!f.isObject(o)||!o.scopes||!o.expiresAt&&0!==o.expiresAt||!o.idToken&&!o.accessToken)throw new m("Token must be an Object with scopes, expiresAt, and an idToken or accessToken properties");r[i]=o,n.setTokenStorage(r),s(t,e,n,i,o)}function c(t,e){var n=t.getTokenStorage();return n[e]}function u(t,e,n){o(t,n);var i=e.getTokenStorage();delete i[n],e.setTokenStorage(i)}function p(t,e,n,r){try{var s=c(n,r);if(!s)throw new m("The tokenManager has no token for the key: "+r)}catch(a){return y.reject(a)}return o(e,r),t.token.refresh(s).then(function(i){return l(t,e,n,r,i),e.emitter.emit("refreshed",r,i,s),i}).fail(function(t){throw"OAuthError"===t.name&&(u(e,n,r),i(e,r,s)),
t})}function h(t,e){r(t),e.clearTokenStorage()}function d(t,e){e=e||{},e.storage=e.storage||"localStorage",e.autoRefresh||e.autoRefresh===!1||(e.autoRefresh=!0);var n;switch(e.storage){case"localStorage":n=v(localStorage);break;case"sessionStorage":n=v(sessionStorage);break;case"cookie":n=v(b);break;default:throw new m("Unrecognized storage option")}var i={emitter:new _,autoRefresh:e.autoRefresh,refreshTimeouts:{}};this.add=f.bind(l,this,t,i,n),this.get=f.bind(c,this,n),this.remove=f.bind(u,this,i,n),this.clear=f.bind(h,this,i,n),this.refresh=f.bind(p,this,t,i,n),this.on=f.bind(i.emitter.on,i.emitter),this.off=f.bind(i.emitter.off,i.emitter),a(t,i,n)}var f=n(22),m=n(28),g=n(25),v=n(35),y=n(9),_=n(36),b={getItem:g.getCookie,setItem:function(t,e){g.setCookie(t,e,"2038-01-19T03:14:07.000Z")}};t.exports=d},function(t,e,n){function i(t){function e(){var e=t.getItem(r.TOKEN_STORAGE_NAME);e=e||"{}";try{return JSON.parse(e)}catch(n){throw new o("Unable to parse token storage string")}}function n(e){try{var n=JSON.stringify(e);t.setItem(r.TOKEN_STORAGE_NAME,n)}catch(i){throw new o("Unable to set token storage string")}}function i(){n({})}return{getTokenStorage:e,setTokenStorage:n,clearTokenStorage:i}}var o=n(28),r=n(27);t.exports=i},function(t,e){function n(){}n.prototype={on:function(t,e,n){var i=this.e||(this.e={});return(i[t]||(i[t]=[])).push({fn:e,ctx:n}),this},once:function(t,e,n){function i(){o.off(t,i),e.apply(n,arguments)}var o=this;return i._=e,this.on(t,i,n)},emit:function(t){var e=[].slice.call(arguments,1),n=((this.e||(this.e={}))[t]||[]).slice(),i=0,o=n.length;for(i;i<o;i++)n[i].fn.apply(n[i].ctx,e);return this},off:function(t,e){var n=this.e||(this.e={}),i=n[t],o=[];if(i&&e)for(var r=0,s=i.length;r<s;r++)i[r].fn!==e&&i[r].fn._!==e&&o.push(i[r]);return o.length?n[t]=o:delete n[t],this}},t.exports=n},function(t,e,n){var i,o;i=[n(38)],o=function(t){function e(t){for(var e=[t],n=t.split("-");n.pop()&&n.length>0;)e.push(n.join("-"));return e}var n={},i=t._;return n.hasTokensInHash=function(t){return/((id|access)_token=)/i.test(t)},n.transformErrorXHR=function(e){if(0===e.status&&i.isEmpty(e.responseJSON))return e.responseJSON={errorSummary:t.loc("error.network.connection","login")},e;if(!e.responseJSON)try{e.responseJSON=JSON.parse(e.responseText)}catch(n){return e.responseJSON={errorSummary:t.loc("oform.error.unexpected","login")},e}if(e.responseJSON&&e.responseJSON.errorCauses&&e.responseJSON.errorCauses.length&&(e.responseJSON.errorSummary=e.responseJSON.errorCauses[0].errorSummary),!i.isEmpty(e.responseJSON)){var o=t.loc("errors."+e.responseJSON.errorCode,"login");o.indexOf("L10N_ERROR[")===-1&&(e.responseJSON.errorSummary=o)}return e},n.toLower=function(t){return i.map(t,function(t){return t.toLowerCase()})},n.expandLanguages=function(t){return i.chain(t).map(e).flatten().uniq().value()},n}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(6),n(2),n(4),n(39),n(42),n(43),n(45),n(48),n(15),n(50),n(15),n(53),n(15),n(15),n(55),n(15),n(15),n(15),n(92),n(15),n(15),n(7),n(46),n(80),n(13),n(15)],o=function(t,e,n,i,o,r,s,a,l,c,u,p,h,d,f,m,g,v,y,_,b,w,S,k,x,E){return{$:t,_:e,Handlebars:n,loc:w.localize,createButton:k.create,createCallout:y.create,tpl:S.tpl,Model:i,BaseModel:o,Collection:r,View:s,ListView:a,TableView:l,Router:c,TabbedRouter:u,Controller:p,DataListController:h,DataList:d,ModalDialog:g,MultiViewModalDialog:v,Form:f,FormDialog:m,DropDown:_,Wizard:b,Logger:x,Metrics:E}}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(2),n(40)],o=function(t,e){return e.extend({secureJSON:!1,_builtInLocalProps:{__edit__:"boolean"},constructor:function(){this.local=t.defaults({},t.result(this,"local"),this._builtInLocalProps),t.result(this,"secureJSON")&&(this.sync=t.wrap(this.sync,function(e,n,i,o){return e.call(this,n,i,t.extend({dataType:"secureJSON"},o))})),e.apply(this,arguments)}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o,r;!function(s,a){o=[n(2),n(41)],i=a,r="function"==typeof i?i.apply(e,o):i,!(void 0!==r&&(t.exports=r))}(this,function(t,e){function n(e,i,o,r){var s=t.contains(i,o);return r||(r={}),s||!t.isObject(e)||t.isArray(e)||t.isFunction(e)?void 0!==o&&(r[o]=e):t.each(e,function(t,e){n(t,i,o?o+"."+e:e,r)}),r}function i(e){return t.each(e,function(t,e,n){if(e.indexOf(".")!=-1){for(var i,o=n,r=e.split(".");void 0!==(i=r.shift());)o[i]||(o[i]=r.length?{}:t),o=o[i];delete n[e]}}),e}function o(t,e){var n={};return n[t.name]=e,n}function r(e,n){var i;return i=t.isString(e)?{type:e}:t.isArray(e)?{type:e[0],required:e[1],value:e[2]}:t.clone(e),t.defaults(i,{required:!1,name:n}),i}function s(t){return t.toLowerCase().replace(/\b[a-z]/g,function(t){return t.toUpperCase()})}function a(e,n){return t.isBoolean(e)?e:t.isRegExp(e)?e.test(n):!!t.isFunction(e)&&e.call(this,n)}function l(e,n){var i,r,a=t.partial(o,e),l=!t.isUndefined(n)&&!t.isNull(n);return!e.required||l&&!t.isNull(n)&&""!==n?(i=t["is"+s(e.type)],!l||"any"==e.type||t.isFunction(i)&&i(n)?l&&e.values&&!t.contains(e.values,n)?a(u.ERROR_NOT_ALLOWED):t.isFunction(e.validate)&&!e.validate(n)?a(u.ERROR_INVALID):l&&"array"==e.type&&(r=c(e,n))?a(r):void 0:a(u.ERROR_WRONG_TYPE)):a(u.ERROR_BLANK)}function c(e,n){if(e.minItems&&n.length<e.minItems)return"model.validation.field.array.minItems";if(e.maxItems&&n.length>e.maxItems)return"model.validation.field.array.maxItems";if(e.uniqueItems&&n.length>t.uniq(n).length)return u.ERROR_IARRAY_UNIQUE;if(e.items)for(var i=r(e.items,"placeholder"),o=0;o<n.length;o++){var s=n[o],a=l(i,s);if(a)return a.placeholder}}var u;return u=e.Model.extend({props:{},derived:{},local:{},extraProperties:!1,flat:!0,defaults:{},constructor:function(i){this.options=i||{};var o=this.__schema__={},s=[];o.computedProperties={},o.extraProperties=this.extraProperties,o.props=t.clone(t.result(this,"props")||{}),o.derived=t.clone(t.result(this,"derived")||{}),o.local=t.clone(t.result(this,"local")||{});var a={};if(t.each(t.extend({},o.props,o.local),function(e,n){var i=r(e,n);t.isUndefined(i.value)||(a[n]=i.value),"object"===i.type&&s.push(n)},this),t.size(a)){var l=t.result(this,"defaults");this.defaults=function(){return t.defaults({},a,l)}}this.validate=t.wrap(this.validate,function(e){var n=t.rest(arguments),i=t.extend(this._validateSchema.apply(this,n),e.apply(this,n));return t.size(i)&&i||void 0}),this.parse=t.wrap(this.parse,function(e){var i=e.apply(this,t.rest(arguments));return this.flat&&(i=n(i,s)),i}),e.Model.apply(this,arguments),t.each(o.derived,function(t,e){o.computedProperties[e]=this.__getDerivedValue(e);var n=t.deps||[];n.length&&this.on("cache:clear change:"+n.join(" change:"),function(){var t=this.__getDerivedValue(e);t!==o.computedProperties[e]&&(o.computedProperties[e]=t,this.trigger("change:"+e,this,t))},this)},this),this.on("sync",function(){this.__syncedData=this.toJSON()},this)},validate:function(){},allows:function(e){var n=this.__schema__,i=t.extend({},n.props,n.local);return!!t.has(i,e)||!!a.call(this,n.extraProperties,e)},getPropertySchema:function(e){var n=this.__schema__;return t.reduce([n.props,n.local],function(t,n){return t||r(n[e],e)},null)},set:function(n,i){var o;"object"==typeof n?o=n:(o={})[n]=i,t.each(o,function(e,n){if(t.has(this.__schema__.derived,n))throw"overriding derived properties is not supported: "+n},this);var r=[];if(t.each(o,function(t,e){this.allows(e)||r.push(e)},this),r.length)throw"field not allowed: "+r.join(", ");return e.Model.prototype.set.apply(this,arguments)},get:function(n){var i=this.__schema__;return t.has(i.derived,n)?i.derived[n].cache!==!1?i.computedProperties[n]:this.__getDerivedValue(n):e.Model.prototype.get.apply(this,arguments)},toJSON:function(n){n||(n={});var o=t.clone(e.Model.prototype.toJSON.apply(this,arguments)),r=this.__schema__;return n.verbose?t.each(r.derived,function(t,e){o[e]=this.get(e)},this):o=t.omit(o,t.keys(r.local)),this.flat&&(o=i(o)),o},reset:function(e){this.clear(e),this.set(t.result(this,"defaults"),e)},isSynced:function(){return t.isEqual(this.__syncedData,this.toJSON())},_validateSchema:function(){var e={},n=this.__schema__;return t.each(t.extend({},n.props,n.local),function(n,i){var o=r(n,i),s=l(o,this.get(i));t.extend(e,s||{})},this),e},__getDerivedValue:function(e){var n=this.__schema__.derived[e];if(t.isString(n)){var i=n;n={deps:[i],fn:function(){return this.get(i)}}}var o=n.deps||[];return n.fn.apply(this,t.map(o,this.get,this))}},{ERROR_BLANK:"model.validation.field.blank",ERROR_WRONG_TYPE:"model.validation.field.wrong.type",ERROR_NOT_ALLOWED:"model.validation.field.value.not.allowed",ERROR_INVALID:"model.validation.field.invalid",ERROR_IARRAY_UNIQUE:"model.validation.field.array.unique"})})},function(t,e,n){var i,o;(function(r){
//     (c) 2010-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Backbone may be freely distributed under the MIT license.
!function(s){var a="object"==typeof self&&self.self==self&&self||"object"==typeof r&&r.global==r&&r;i=[n(2),n(6),e],o=function(t,e,n){a.Backbone=s(a,n,t,e)}.apply(e,i),!(void 0!==o&&(t.exports=o))}(function(t,e,n,i){var o=t.Backbone,r=[].slice;e.VERSION="1.2.1",e.$=i,e.noConflict=function(){return t.Backbone=o,this},e.emulateHTTP=!1,e.emulateJSON=!1;var s=function(t,e,i){switch(t){case 1:return function(){return n[e](this[", "base64"));
  res.write(new Buffer("i])};case 2:return function(t){return n[e](this[i],t)};case 3:return function(t,o){return n[e](this[i],t,o)};case 4:return function(t,o,r){return n[e](this[i],t,o,r)};default:return function(){var t=r.call(arguments);return t.unshift(this[i]),n[e].apply(n,t)}}},a=function(t,e,i){n.each(e,function(e,o){n[o]&&(t.prototype[o]=s(e,o,i))})},l=e.Events={},c=/\s+/,u=function(t,e,i,o,r){var s,a=0;if(i&&"object"==typeof i){void 0!==o&&"context"in r&&void 0===r.context&&(r.context=o);for(s=n.keys(i);a<s.length;a++)e=t(e,s[a],i[s[a]],r)}else if(i&&c.test(i))for(s=i.split(c);a<s.length;a++)e=t(e,s[a],o,r);else e=t(e,i,o,r);return e};l.on=function(t,e,n){return p(this,t,e,n)};var p=function(t,e,n,i,o){if(t._events=u(h,t._events||{},e,n,{context:i,ctx:t,listening:o}),o){var r=t._listeners||(t._listeners={});r[o.id]=o}return t};l.listenTo=function(t,e,i){if(!t)return this;var o=t._listenId||(t._listenId=n.uniqueId("l")),r=this._listeningTo||(this._listeningTo={}),s=r[o];if(!s){var a=this._listenId||(this._listenId=n.uniqueId("l"));s=r[o]={obj:t,objId:o,id:a,listeningTo:r,count:0}}return p(t,e,i,this,s),this};var h=function(t,e,n,i){if(n){var o=t[e]||(t[e]=[]),r=i.context,s=i.ctx,a=i.listening;a&&a.count++,o.push({callback:n,context:r,ctx:r||s,listening:a})}return t};l.off=function(t,e,n){return this._events?(this._events=u(d,this._events,t,e,{context:n,listeners:this._listeners}),this):this},l.stopListening=function(t,e,i){var o=this._listeningTo;if(!o)return this;for(var r=t?[t._listenId]:n.keys(o),s=0;s<r.length;s++){var a=o[r[s]];if(!a)break;a.obj.off(e,i,this)}return n.isEmpty(o)&&(this._listeningTo=void 0),this};var d=function(t,e,i,o){if(t){var r,s=0,a=o.context,l=o.listeners;if(e||i||a){for(var c=e?[e]:n.keys(t);s<c.length;s++){e=c[s];var u=t[e];if(!u)break;for(var p=[],h=0;h<u.length;h++){var d=u[h];i&&i!==d.callback&&i!==d.callback._callback||a&&a!==d.context?p.push(d):(r=d.listening,r&&0===--r.count&&(delete l[r.id],delete r.listeningTo[r.objId]))}p.length?t[e]=p:delete t[e]}return n.size(t)?t:void 0}for(var f=n.keys(l);s<f.length;s++)r=l[f[s]],delete l[r.id],delete r.listeningTo[r.objId]}};l.once=function(t,e,i){var o=u(f,{},t,e,n.bind(this.off,this));return this.on(o,void 0,i)},l.listenToOnce=function(t,e,i){var o=u(f,{},e,i,n.bind(this.stopListening,this,t));return this.listenTo(t,o)};var f=function(t,e,i,o){if(i){var r=t[e]=n.once(function(){o(e,r),i.apply(this,arguments)});r._callback=i}return t};l.trigger=function(t){if(!this._events)return this;for(var e=Math.max(0,arguments.length-1),n=Array(e),i=0;i<e;i++)n[i]=arguments[i+1];return u(m,this._events,t,void 0,n),this};var m=function(t,e,n,i){if(t){var o=t[e],r=t.all;o&&r&&(r=r.slice()),o&&g(o,i),r&&g(r,[e].concat(i))}return t},g=function(t,e){var n,i=-1,o=t.length,r=e[0],s=e[1],a=e[2];switch(e.length){case 0:for(;++i<o;)(n=t[i]).callback.call(n.ctx);return;case 1:for(;++i<o;)(n=t[i]).callback.call(n.ctx,r);return;case 2:for(;++i<o;)(n=t[i]).callback.call(n.ctx,r,s);return;case 3:for(;++i<o;)(n=t[i]).callback.call(n.ctx,r,s,a);return;default:for(;++i<o;)(n=t[i]).callback.apply(n.ctx,e);return}};l.bind=l.on,l.unbind=l.off,n.extend(e,l);var v=e.Model=function(t,e){var i=t||{};e||(e={}),this.cid=n.uniqueId(this.cidPrefix),this.attributes={},e.collection&&(this.collection=e.collection),e.parse&&(i=this.parse(i,e)||{}),i=n.defaults({},i,n.result(this,"defaults")),this.set(i,e),this.changed={},this.initialize.apply(this,arguments)};n.extend(v.prototype,l,{changed:null,validationError:null,idAttribute:"id",cidPrefix:"c",initialize:function(){},toJSON:function(t){return n.clone(this.attributes)},sync:function(){return e.sync.apply(this,arguments)},get:function(t){return this.attributes[t]},escape:function(t){return n.escape(this.get(t))},has:function(t){return null!=this.get(t)},matches:function(t){return!!n.iteratee(t,this)(this.attributes)},set:function(t,e,i){if(null==t)return this;var o;if("object"==typeof t?(o=t,i=e):(o={})[t]=e,i||(i={}),!this._validate(o,i))return!1;var r=i.unset,s=i.silent,a=[],l=this._changing;this._changing=!0,l||(this._previousAttributes=n.clone(this.attributes),this.changed={});var c=this.attributes,u=this.changed,p=this._previousAttributes;this.idAttribute in o&&(this.id=o[this.idAttribute]);for(var h in o)e=o[h],n.isEqual(c[h],e)||a.push(h),n.isEqual(p[h],e)?delete u[h]:u[h]=e,r?delete c[h]:c[h]=e;if(!s){a.length&&(this._pending=i);for(var d=0;d<a.length;d++)this.trigger("change:"+a[d],this,c[a[d]],i)}if(l)return this;if(!s)for(;this._pending;)i=this._pending,this._pending=!1,this.trigger("change",this,i);return this._pending=!1,this._changing=!1,this},unset:function(t,e){return this.set(t,void 0,n.extend({},e,{unset:!0}))},clear:function(t){var e={};for(var i in this.attributes)e[i]=void 0;return this.set(e,n.extend({},t,{unset:!0}))},hasChanged:function(t){return null==t?!n.isEmpty(this.changed):n.has(this.changed,t)},changedAttributes:function(t){if(!t)return!!this.hasChanged()&&n.clone(this.changed);var e=this._changing?this._previousAttributes:this.attributes,i={};for(var o in t){var r=t[o];n.isEqual(e[o],r)||(i[o]=r)}return!!n.size(i)&&i},previous:function(t){return null!=t&&this._previousAttributes?this._previousAttributes[t]:null},previousAttributes:function(){return n.clone(this._previousAttributes)},fetch:function(t){t=n.extend({parse:!0},t);var e=this,i=t.success;return t.success=function(n){var o=t.parse?e.parse(n,t):n;return!!e.set(o,t)&&(i&&i.call(t.context,e,n,t),void e.trigger("sync",e,n,t))},B(this,t),this.sync("read",this,t)},save:function(t,e,i){var o;null==t||"object"==typeof t?(o=t,i=e):(o={})[t]=e,i=n.extend({validate:!0,parse:!0},i);var r=i.wait;if(o&&!r){if(!this.set(o,i))return!1}else if(!this._validate(o,i))return!1;var s=this,a=i.success,l=this.attributes;i.success=function(t){s.attributes=l;var e=i.parse?s.parse(t,i):t;return r&&(e=n.extend({},o,e)),!(e&&!s.set(e,i))&&(a&&a.call(i.context,s,t,i),void s.trigger("sync",s,t,i))},B(this,i),o&&r&&(this.attributes=n.extend({},l,o));var c=this.isNew()?"create":i.patch?"patch":"update";"patch"!==c||i.attrs||(i.attrs=o);var u=this.sync(c,this,i);return this.attributes=l,u},destroy:function(t){t=t?n.clone(t):{};var e=this,i=t.success,o=t.wait,r=function(){e.stopListening(),e.trigger("destroy",e,e.collection,t)};t.success=function(n){o&&r(),i&&i.call(t.context,e,n,t),e.isNew()||e.trigger("sync",e,n,t)};var s=!1;return this.isNew()?n.defer(t.success):(B(this,t),s=this.sync("delete",this,t)),o||r(),s},url:function(){var t=n.result(this,"urlRoot")||n.result(this.collection,"url")||F();if(this.isNew())return t;var e=this.get(this.idAttribute);return t.replace(/[^\/]$/,"$&/")+encodeURIComponent(e)},parse:function(t,e){return t},clone:function(){return new this.constructor(this.attributes)},isNew:function(){return!this.has(this.idAttribute)},isValid:function(t){return this._validate({},n.defaults({validate:!0},t))},_validate:function(t,e){if(!e.validate||!this.validate)return!0;t=n.extend({},this.attributes,t);var i=this.validationError=this.validate(t,e)||null;return!i||(this.trigger("invalid",this,i,n.extend(e,{validationError:i})),!1)}});var y={keys:1,values:1,pairs:1,invert:1,pick:0,omit:0,chain:1,isEmpty:1};a(v,y,"attributes");var _=e.Collection=function(t,e){e||(e={}),e.model&&(this.model=e.model),void 0!==e.comparator&&(this.comparator=e.comparator),this._reset(),this.initialize.apply(this,arguments),t&&this.reset(t,n.extend({silent:!0},e))},b={add:!0,remove:!0,merge:!0},w={add:!0,remove:!1};n.extend(_.prototype,l,{model:v,initialize:function(){},toJSON:function(t){return this.map(function(e){return e.toJSON(t)})},sync:function(){return e.sync.apply(this,arguments)},add:function(t,e){return this.set(t,n.extend({merge:!1},e,w))},remove:function(t,e){e=n.extend({},e);var i=!n.isArray(t);t=i?[t]:n.clone(t);var o=this._removeModels(t,e);return!e.silent&&o&&this.trigger("update",this,e),i?o[0]:o},set:function(t,e){e=n.defaults({},e,b),e.parse&&!this._isModel(t)&&(t=this.parse(t,e));var i=!n.isArray(t);t=i?t?[t]:[]:t.slice();var o,r,s,a,l,c=e.at;null!=c&&(c=+c),c<0&&(c+=this.length+1);for(var u=this.comparator&&null==c&&e.sort!==!1,p=n.isString(this.comparator)?this.comparator:null,h=[],d=[],f={},m=e.add,g=e.merge,v=e.remove,y=!(u||!m||!v)&&[],_=!1,w=0;w<t.length;w++){if(s=t[w],a=this.get(s))v&&(f[a.cid]=!0),g&&s!==a&&(s=this._isModel(s)?s.attributes:s,e.parse&&(s=a.parse(s,e)),a.set(s,e),u&&!l&&a.hasChanged(p)&&(l=!0)),t[w]=a;else if(m){if(r=t[w]=this._prepareModel(s,e),!r)continue;h.push(r),this._addReference(r,e)}r=a||r,r&&(o=this.modelId(r.attributes),!y||!r.isNew()&&f[o]||(y.push(r),_=_||!this.models[w]||r.cid!==this.models[w].cid),f[o]=!0)}if(v){for(var w=0;w<this.length;w++)f[(r=this.models[w]).cid]||d.push(r);d.length&&this._removeModels(d,e)}if(h.length||_)if(u&&(l=!0),this.length+=h.length,null!=c)for(var w=0;w<h.length;w++)this.models.splice(c+w,0,h[w]);else{y&&(this.models.length=0);for(var S=y||h,w=0;w<S.length;w++)this.models.push(S[w])}if(l&&this.sort({silent:!0}),!e.silent){for(var k=null!=c?n.clone(e):e,w=0;w<h.length;w++)null!=c&&(k.index=c+w),(r=h[w]).trigger("add",r,this,k);(l||_)&&this.trigger("sort",this,e),(h.length||d.length)&&this.trigger("update",this,e)}return i?t[0]:t},reset:function(t,e){e=e?n.clone(e):{};for(var i=0;i<this.models.length;i++)this._removeReference(this.models[i],e);return e.previousModels=this.models,this._reset(),t=this.add(t,n.extend({silent:!0},e)),e.silent||this.trigger("reset",this,e),t},push:function(t,e){return this.add(t,n.extend({at:this.length},e))},pop:function(t){var e=this.at(this.length-1);return this.remove(e,t)},unshift:function(t,e){return this.add(t,n.extend({at:0},e))},shift:function(t){var e=this.at(0);return this.remove(e,t)},slice:function(){return r.apply(this.models,arguments)},get:function(t){if(null!=t){var e=this.modelId(this._isModel(t)?t.attributes:t);return this._byId[t]||this._byId[e]||this._byId[t.cid]}},at:function(t){return t<0&&(t+=this.length),this.models[t]},where:function(t,e){var i=n.matches(t);return this[e?"find":"filter"](function(t){return i(t.attributes)})},findWhere:function(t){return this.where(t,!0)},sort:function(t){if(!this.comparator)throw new Error("Cannot sort a set without a comparator");return t||(t={}),n.isString(this.comparator)||1===this.comparator.length?this.models=this.sortBy(this.comparator,this):this.models.sort(n.bind(this.comparator,this)),t.silent||this.trigger("sort",this,t),this},pluck:function(t){return n.invoke(this.models,"get",t)},fetch:function(t){t=n.extend({parse:!0},t);var e=t.success,i=this;return t.success=function(n){var o=t.reset?"reset":"set";i[o](n,t),e&&e.call(t.context,i,n,t),i.trigger("sync",i,n,t)},B(this,t),this.sync("read",this,t)},create:function(t,e){e=e?n.clone(e):{};var i=e.wait;if(t=this._prepareModel(t,e),!t)return!1;i||this.add(t,e);var o=this,r=e.success;return e.success=function(t,e,n){i&&o.add(t,n),r&&r.call(n.context,t,e,n)},t.save(null,e),t},parse:function(t,e){return t},clone:function(){return new this.constructor(this.models,{model:this.model,comparator:this.comparator})},modelId:function(t){return t[this.model.prototype.idAttribute||"id"]},_reset:function(){this.length=0,this.models=[],this._byId={}},_prepareModel:function(t,e){if(this._isModel(t))return t.collection||(t.collection=this),t;e=e?n.clone(e):{},e.collection=this;var i=new this.model(t,e);return i.validationError?(this.trigger("invalid",this,i.validationError,e),!1):i},_removeModels:function(t,e){for(var n=[],i=0;i<t.length;i++){var o=this.get(t[i]);if(o){var r=this.indexOf(o);this.models.splice(r,1),this.length--,e.silent||(e.index=r,o.trigger("remove",o,this,e)),n.push(o),this._removeReference(o,e)}}return!!n.length&&n},_isModel:function(t){return t instanceof v},_addReference:function(t,e){this._byId[t.cid]=t;var n=this.modelId(t.attributes);null!=n&&(this._byId[n]=t),t.on("all",this._onModelEvent,this)},_removeReference:function(t,e){delete this._byId[t.cid];var n=this.modelId(t.attributes);null!=n&&delete this._byId[n],this===t.collection&&delete t.collection,t.off("all",this._onModelEvent,this)},_onModelEvent:function(t,e,n,i){if("add"!==t&&"remove"!==t||n===this){if("destroy"===t&&this.remove(e,i),"change"===t){var o=this.modelId(e.previousAttributes()),r=this.modelId(e.attributes);o!==r&&(null!=o&&delete this._byId[o],null!=r&&(this._byId[r]=e))}this.trigger.apply(this,arguments)}}});var S={forEach:3,each:3,map:3,collect:3,reduce:4,foldl:4,inject:4,reduceRight:4,foldr:4,find:3,detect:3,filter:3,select:3,reject:3,every:3,all:3,some:3,any:3,include:2,contains:2,invoke:0,max:3,min:3,toArray:1,size:1,first:3,head:3,take:3,initial:3,rest:3,tail:3,drop:3,last:3,without:0,difference:0,indexOf:3,shuffle:1,lastIndexOf:3,isEmpty:1,chain:1,sample:3,partition:3};a(_,S,"models");var k=["groupBy","countBy","sortBy","indexBy"];n.each(k,function(t){n[t]&&(_.prototype[t]=function(e,i){var o=n.isFunction(e)?e:function(t){return t.get(e)};return n[t](this.models,o,i)})});var x=e.View=function(t){this.cid=n.uniqueId("view"),n.extend(this,n.pick(t,T)),this._ensureElement(),this.initialize.apply(this,arguments)},E=/^(\S+)\s*(.*)$/,T=["model","collection","el","id","attributes","className","tagName","events"];n.extend(x.prototype,l,{tagName:"div",$:function(t){return this.$el.find(t)},initialize:function(){},render:function(){return this},remove:function(){return this._removeElement(),this.stopListening(),this},_removeElement:function(){this.$el.remove()},setElement:function(t){return this.undelegateEvents(),this._setElement(t),this.delegateEvents(),this},_setElement:function(t){this.$el=t instanceof e.$?t:e.$(t),this.el=this.$el[0]},delegateEvents:function(t){if(t||(t=n.result(this,"events")),!t)return this;this.undelegateEvents();for(var e in t){var i=t[e];if(n.isFunction(i)||(i=this[i]),i){var o=e.match(E);this.delegate(o[1],o[2],n.bind(i,this))}}return this},delegate:function(t,e,n){return this.$el.on(t+".delegateEvents"+this.cid,e,n),this},undelegateEvents:function(){return this.$el&&this.$el.off(".delegateEvents"+this.cid),this},undelegate:function(t,e,n){return this.$el.off(t+".delegateEvents"+this.cid,e,n),this},_createElement:function(t){return document.createElement(t)},_ensureElement:function(){if(this.el)this.setElement(n.result(this,"el"));else{var t=n.extend({},n.result(this,"attributes"));this.id&&(t.id=n.result(this,"id")),this.className&&(t["class"]=n.result(this,"className")),this.setElement(this._createElement(n.result(this,"tagName"))),this._setAttributes(t)}},_setAttributes:function(t){this.$el.attr(t)}}),e.sync=function(t,i,o){var r=C[t];n.defaults(o||(o={}),{emulateHTTP:e.emulateHTTP,emulateJSON:e.emulateJSON});var s={type:r,dataType:"json"};if(o.url||(s.url=n.result(i,"url")||F()),null!=o.data||!i||"create"!==t&&"update"!==t&&"patch"!==t||(s.contentType="application/json",s.data=JSON.stringify(o.attrs||i.toJSON(o))),o.emulateJSON&&(s.contentType="application/x-www-form-urlencoded",s.data=s.data?{model:s.data}:{}),o.emulateHTTP&&("PUT"===r||"DELETE"===r||"PATCH"===r)){s.type="POST",o.emulateJSON&&(s.data._method=r);var a=o.beforeSend;o.beforeSend=function(t){if(t.setRequestHeader("X-HTTP-Method-Override",r),a)return a.apply(this,arguments)}}"GET"===s.type||o.emulateJSON||(s.processData=!1);var l=o.error;o.error=function(t,e,n){o.textStatus=e,o.errorThrown=n,l&&l.call(o.context,t,e,n)};var c=o.xhr=e.ajax(n.extend(s,o));return i.trigger("request",i,c,o),c};var C={create:"POST",update:"PUT",patch:"PATCH","delete":"DELETE",read:"GET"};e.ajax=function(){return e.$.ajax.apply(e.$,arguments)};var A=e.Router=function(t){t||(t={}),t.routes&&(this.routes=t.routes),this._bindRoutes(),this.initialize.apply(this,arguments)},O=/\((.*?)\)/g,R=/(\(\?)?:\w+/g,N=/\*\w+/g,I=/[\-{}\[\]+?.,\\\^$|#\s]/g;n.extend(A.prototype,l,{initialize:function(){},route:function(t,i,o){n.isRegExp(t)||(t=this._routeToRegExp(t)),n.isFunction(i)&&(o=i,i=""),o||(o=this[i]);var r=this;return e.history.route(t,function(n){var s=r._extractParameters(t,n);r.execute(o,s,i)!==!1&&(r.trigger.apply(r,["route:"+i].concat(s)),r.trigger("route",i,s),e.history.trigger("route",r,i,s))}),this},execute:function(t,e,n){t&&t.apply(this,e)},navigate:function(t,n){return e.history.navigate(t,n),this},_bindRoutes:function(){if(this.routes){this.routes=n.result(this,"routes");for(var t,e=n.keys(this.routes);null!=(t=e.pop());)this.route(t,this.routes[t])}},_routeToRegExp:function(t){return t=t.replace(I,"\\$&").replace(O,"(?:$1)?").replace(R,function(t,e){return e?t:"([^/?]+)"}).replace(N,"([^?]*?)"),new RegExp("^"+t+"(?:\\?([\\s\\S]*))?$")},_extractParameters:function(t,e){var i=t.exec(e).slice(1);return n.map(i,function(t,e){return e===i.length-1?t||null:t?decodeURIComponent(t):null})}});var P=e.History=function(){this.handlers=[],n.bindAll(this,"checkUrl"),"undefined"!=typeof window&&(this.location=window.location,this.history=window.history)},L=/^[#\/]|\s+$/g,M=/^\/+|\/+$/g,D=/#.*$/;P.started=!1,n.extend(P.prototype,l,{interval:50,atRoot:function(){var t=this.location.pathname.replace(/[^\/]$/,"$&/");return t===this.root&&!this.getSearch()},matchRoot:function(){var t=this.decodeFragment(this.location.pathname),e=t.slice(0,this.root.length-1)+"/";return e===this.root},decodeFragment:function(t){return decodeURI(t.replace(/%25/g,"%2525"))},getSearch:function(){var t=this.location.href.replace(/#.*/,"").match(/\?.+/);return t?t[0]:""},getHash:function(t){var e=(t||this).location.href.match(/#(.*)$/);return e?e[1]:""},getPath:function(){var t=this.decodeFragment(this.location.pathname+this.getSearch()).slice(this.root.length-1);return"/"===t.charAt(0)?t.slice(1):t},getFragment:function(t){return null==t&&(t=this._usePushState||!this._wantsHashChange?this.getPath():this.getHash()),t.replace(L,"")},start:function(t){if(P.started)throw new Error("Backbone.history has already been started");if(P.started=!0,this.options=n.extend({root:"/"},this.options,t),this.root=this.options.root,this._wantsHashChange=this.options.hashChange!==!1,this._hasHashChange="onhashchange"in window,this._useHashChange=this._wantsHashChange&&this._hasHashChange,this._wantsPushState=!!this.options.pushState,this._hasPushState=!(!this.history||!this.history.pushState),this._usePushState=this._wantsPushState&&this._hasPushState,this.fragment=this.getFragment(),this.root=("/"+this.root+"/").replace(M,"/"),this._wantsHashChange&&this._wantsPushState){if(!this._hasPushState&&!this.atRoot()){var e=this.root.slice(0,-1)||"/";return this.location.replace(e+"#"+this.getPath()),!0}this._hasPushState&&this.atRoot()&&this.navigate(this.getHash(),{replace:!0})}if(!this._hasHashChange&&this._wantsHashChange&&!this._usePushState){this.iframe=document.createElement("iframe"),this.iframe.src="javascript:0",this.iframe.style.display="none",this.iframe.tabIndex=-1;var i=document.body,o=i.insertBefore(this.iframe,i.firstChild).contentWindow;o.document.open(),o.document.close(),o.location.hash="#"+this.fragment}var r=window.addEventListener||function(t,e){return attachEvent("on"+t,e)};if(this._usePushState?r("popstate",this.checkUrl,!1):this._useHashChange&&!this.iframe?r("hashchange",this.checkUrl,!1):this._wantsHashChange&&(this._checkUrlInterval=setInterval(this.checkUrl,this.interval)),!this.options.silent)return this.loadUrl()},stop:function(){var t=window.removeEventListener||function(t,e){return detachEvent("on"+t,e)};this._usePushState?t("popstate",this.checkUrl,!1):this._useHashChange&&!this.iframe&&t("hashchange",this.checkUrl,!1),this.iframe&&(document.body.removeChild(this.iframe),this.iframe=null),this._checkUrlInterval&&clearInterval(this._checkUrlInterval),P.started=!1},route:function(t,e){this.handlers.unshift({route:t,callback:e})},checkUrl:function(t){var e=this.getFragment();return e===this.fragment&&this.iframe&&(e=this.getHash(this.iframe.contentWindow)),e!==this.fragment&&(this.iframe&&this.navigate(e),void this.loadUrl())},loadUrl:function(t){return!!this.matchRoot()&&(t=this.fragment=this.getFragment(t),n.any(this.handlers,function(e){if(e.route.test(t))return e.callback(t),!0}))},navigate:function(t,e){if(!P.started)return!1;e&&e!==!0||(e={trigger:!!e}),t=this.getFragment(t||"");var n=this.root;""!==t&&"?"!==t.charAt(0)||(n=n.slice(0,-1)||"/");var i=n+t;if(t=this.decodeFragment(t.replace(D,"")),this.fragment!==t){if(this.fragment=t,this._usePushState)this.history[e.replace?"replaceState":"pushState"]({},document.title,i);else{if(!this._wantsHashChange)return this.location.assign(i);if(this._updateHash(this.location,t,e.replace),this.iframe&&t!==this.getHash(this.iframe.contentWindow)){var o=this.iframe.contentWindow;e.replace||(o.document.open(),o.document.close()),this._updateHash(o.location,t,e.replace)}}return e.trigger?this.loadUrl(t):void 0}},_updateHash:function(t,e,n){if(n){var i=t.href.replace(/(javascript:|#).*$/,"");t.replace(i+"#"+e)}else t.hash="#"+e}}),e.history=new P;var U=function(t,e){var i,o=this;i=t&&n.has(t,"constructor")?t.constructor:function(){return o.apply(this,arguments)},n.extend(i,o,e);var r=function(){this.constructor=i};return r.prototype=o.prototype,i.prototype=new r,t&&n.extend(i.prototype,t),i.__super__=o.prototype,i};v.extend=_.extend=A.extend=x.extend=P.extend=U;var F=function(){throw new Error('A "url" property or function must be specified')},B=function(t,e){var n=e.error;e.error=function(i){n&&n.call(e.context,t,i,e),t.trigger("error",t,i,e)}};return e})}).call(e,function(){return this}())},function(t,e,n){var i,o;i=[n(2),n(39)],o=function(t,e){var n=function(e){var n=t.omit(e.local,t.keys(e._builtInLocalProps));return t.size(e.props)+t.size(n)>0},i=e.extend({flat:!1,constructor:function(){e.apply(this,arguments),this.on("sync",this._setSynced)},allows:function(){return!n(this)||e.prototype.allows.apply(this,arguments)},set:function(n,i){var o;return"object"==typeof n?o=n:(o={})[n]=i,t(o).each(function(e,n){e&&t.isArray(e.__attributes)&&this.on("change:"+e.__attributes.join(" change:"),function(){var t=this.get(n);t!==this.__schema__.computedProperties[n]&&(this.__schema__.computedProperties[n]=t,this.trigger("change:"+n,t))},this)},this),e.prototype.set.apply(this,arguments)},get:function(){var n=e.prototype.get.apply(this,arguments);return t.isFunction(n)?n.apply(this,t.map(n.__attributes||[],this.get,this)):n},toJSON:function(n){n||(n={});var i=e.prototype.toJSON.apply(this,arguments);return t(i).each(function(t,e){"function"==typeof t&&(n.verbose?i[e]=this.get(e):delete i[e])},this),n.verbose||t(i).each(function(t,e){/^__\w+__$/.test(e)&&delete i[e]}),i},sanitizeAttributes:function(e){var n={};return t.each(e,function(e,i){t.isFunction(e)||(n[i]=e)}),n},reset:function(t){this.clear(t),this.set(this.sanitizeAttributes(this.defaults),t)},clear:function(e){var n={};return t.each(this.sanitizeAttributes(this.attributes),function(t,e){n[e]=void 0}),this.set(n,t.extend({},e,{unset:!0}))},_setSynced:function(e){this._syncedData=e&&t.isFunction(e.toJSON)?e.toJSON():{}},_getSynced:function(){return this._syncedData},isSynced:function(){return t.isEqual(this._getSynced(),this.toJSON())}},{ComputedProperty:function(){var e=t.toArray(arguments),n=e.pop();return n.__attributes=e.pop(),n}});return i}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(2),n(44)],o=function(t,e){return e.extend({secureJSON:!1,constructor:function(){t.result(this,"secureJSON")&&(this.sync=t.wrap(this.sync,function(e,n,i,o){return e.call(this,n,i,t.extend({dataType:"secureJSON"},o))})),e.apply(this,arguments)}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o,r;!function(s,a){o=[n(2),n(41)],i=a,r="function"==typeof i?i.apply(e,o):i,!(void 0!==r&&(t.exports=r))}(this,function(t,e){function n(t,e){try{var n=r(e.getResponseHeader("link"));t[s].set(u,!0),t.setPagination(n.next.href)}catch(i){t[s].get(u)&&t.setPagination(null)}}function i(t){for(var e={},n=t&&t.split("?")[1],i=n&&decodeURIComponent(n.split("#")[0]).replace(/\+/g," "),o=i?i.split("&"):[],r=0;r<o.length;r++){var s=o[r].split("=");e[s.shift()]=s.join("=")}return e}function o(t){return'"'==t.charAt(0)&&'"'==t.charAt(t.length-1)?t.substring(1,t.length-1):t}function r(t){for(var e=/<[^>]*>\s*(\s*;\s*[^\(\)<>@,;:"\/\[\]\?={} \t]+=(([^\(\)<>@,;:"\/\[\]\?={} \t]+)|("[^"]*")))*(,|$)/g,n=/[^\(\)<>@,;:"\/\[\]\?={} \t]+=(([^\(\)<>@,;:"\/\[\]\?={} \t]+)|("[^"]*"))/g,i=t.match(e),r={},s=0;s<i.length;s++){var a=i[s].split(">"),l=a[0].substring(1),c={};c.href=l;for(var u=a[1].match(n),p=0;p<u.length;p++){var h=u[p].split("="),d=h[0];c[d]=o(h[1])}void 0!==c.rel&&(r[c.rel]=c)}return r}var s="__STATE__",a="FETCH_DATA",l="PAGINATION_DATA",c="DEFAULT_PARAMS",u="LINK_BY_HEADER",p="XHR";return e.Collection.extend({params:{},constructor:function(n,i){var o=this[s]=new e.Model;o.set(c,t.defaults(i&&i.params||{},this.params||{})),e.Collection.apply(this,arguments)},sync:function(t,i,o){var r=this,s=o.success;return o.success=function(t,e,i){n(r,i),s.apply(null,arguments)},e.Collection.prototype.sync.call(this,t,i,o)},fetch:function(n){n||(n={});var i=this[s],o=i.get(p);return n.data=t.extend({},i.get(c),n.data||{}),n.fromFetch=!0,i.set(a,n.data),o&&o.abort&&n.abort!==!1&&o.abort(),o=e.Collection.prototype.fetch.call(this,n),i.set(p,o),o},setPagination:function(e,n){t.isString(e)&&e&&(e=i(e)),t.isObject(e)&&!t.isArray(e)&&t.size(e)?n&&n.fromFetch&&(e=t.extend({},this.getFetchData(),e)):e=null,this[s].set(l,e)},getFetchData:function(){return this[s].get(a)||{}},getPaginationData:function(){return this[s].get(l)||{}},hasMore:function(){return t.size(this.getPaginationData())>0},fetchMore:function(){if(!this.hasMore())throw new Error("Invalid Request");return this.fetch({data:this.getPaginationData(),add:!0,remove:!1,update:!0})},reset:function(t,n){return n||(n={}),n.fromFetch||this.setPagination(null),e.Collection.prototype.reset.apply(this,arguments)},where:function(e,n){return t.isEmpty(e)?n?void 0:[]:this[n?"find":"filter"](function(t){for(var n in e)if(e[n]!==t.get(n))return!1;return!0})},create:function(n,i){return i||(i={}),t.result(n,"urlRoot")||(i.url=t.result(this,"url")),e.Collection.prototype.create.call(this,n,i)}})})},function(t,e,n){var i,o;i=[n(2),n(41),n(46),n(47)],o=function(t,e,n,i){var o=t.clone(e.Events),r={constructor:function(){i.apply(this,arguments),this.module&&this.$el.attr("data-view",this.module.id)},empty:function(){return this.removeChildren()},compileTemplate:n.tpl,broadcast:function(){return o.trigger.apply(o,arguments),this},listen:function(t,e){return this.listenTo(o,t,e),this},notify:function(e,n,i){return this.broadcast("notification",t.defaults({message:n,level:e},i)),this},confirm:function(e,n,i,o){var r;return r="object"==typeof e?e:2==arguments.length&&t.isFunction(n)?{title:"Okta",subtitle:e,ok:n}:{title:e,subtitle:n,ok:i,cancelFn:o},t.isFunction(r.ok)&&(r.ok=t.bind(r.ok,this)),t.isFunction(r.cancelFn)&&(r.cancelFn=t.bind(r.cancelFn,this)),this.broadcast("confirmation",r),this},alert:function(e){return t.isString(e)&&(e={subtitle:e}),this.confirm(t.extend({},e,{noCancelButton:!0})),this}};return i.extend(r,{decorate:function(e){var n=e.extend({});return t.defaults(n.prototype,r),n}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(2),n(4)],o=function(t,e){return{tpl:t.memoize(function(t){return e.compile(t)})}}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o,r;!function(s,a){o=[n(2),n(41)],i=a,r="function"==typeof i?i.apply(e,o):i,!(void 0!==r&&(t.exports=r))}(this,function(t,e){function n(t,e){for(var n=0;n<t[s].length;n++)if(e.cid===t[s][n].cid)return n}function i(){}function o(t){t[a]=!0;var e=t.renderTemplate(t.template);e?t.$el.html(e):t.length&&t.$el.empty(),t.each(function(t){t[u]()})}function r(e){var n=/^(?!(?:delegate|undelegate|_))([a-zA-Z0-9]+)(?:Events)$/;t.each(t.allKeys(e),function(i){var o=i.match(n);if(o){var r=t.result(e,i),s=e.options[o[1]]||e[o[1]];s&&t.isObject(r)&&t.isFunction(s.trigger)&&t.each(r,function(n,i){var o=t.isFunction(n)?[n]:t.reduce(n.split(/\s+/),function(n,i){return t.isFunction(e[i])&&n.push(e[i]),n},[]);t.each(o,function(t){e.listenTo(s,i,t)})})}})}var s="__children__",a="__rendered__",l="__parent__",c="__children_definitions__",u="__add_to_container__",p=e.View.extend({constructor:function(n){this.options=n||{},t.extend(this,t.pick(this.options,"state","settings")),this[s]=[],this[a]=!1,this[l]=null,this[c]=this.children;var o=this.initialize;if(this.initialize=i,e.View.apply(this,arguments),t.each(t.result(this,c),function(e){this.add.apply(this,t.isArray(e)?e:[e])},this),delete this[c],this.autoRender&&this.model){var u=t.isArray(this.autoRender)?t.map(this.autoRender,function(t){return"change:"+t}).join(" "):"change";this.listenTo(this.model,u,function(){this.render()})}this.initialize=o,this.initialize.apply(this,arguments),r(this)},unregister:function(e){this.stopListening(e);var i=n(this,e);t.isNumber(i)&&this[s].splice(i,1)},autoRender:!1,template:null,children:[],add:function(i,o,r,a,c){var h={},d=t.toArray(arguments);if(t.isObject(o)?(h=o,o=h.selector,r=h.bubble,a=h.prepend,c=h.options):t.isObject(r)&&(h=r,r=h.bubble,a=h.prepend,c=h.options),t.isString(i)&&(i=function(t){return p.extend({constructor:function(){try{var n=e.$(t);if(1!=n.length)throw"invalid Element";this.template=n.html(),this.el=n.empty()[0]}catch(i){this.template=t}p.apply(this,arguments)}})}(i)),i.prototype&&i.prototype instanceof p){var f=t.omit(t.extend({},this.options,c),"el");return d[0]=new i(f),this.add.apply(this,d)}if(t.isNumber(n(this,i)))throw new Error("Duplicate child");return i[l]=this,i[u]=function(t){return function(){if(t&&1!=i[l].$(t).length)throw new Error("Invalid selector: "+t);var e=t?this[l].$(t):this[l].$el;this.render(),this.delegateEvents(),a?e.prepend(this.el):e.append(this.el)}}.call(i,o),r&&this.listenTo(i,"all",function(){this.trigger.apply(this,arguments)}),this.rendered()&&i[u](),this[s].push(i),this},removeChildren:function(){return this.each(function(t){t.remove()}),this},remove:function(){return this.removeChildren(),this[l]&&this[l].unregister(this),e.View.prototype.remove.apply(this,arguments)},compileTemplate:function(e){return t.template(e)},renderTemplate:function(e){if(t.isString(e)&&(e=this.compileTemplate(e)),t.isFunction(e))return e(this.getTemplateData())},getTemplateData:function(){var e=this.model&&this.model.toJSON({verbose:!0})||{},n=t.omit(this.options,["state","settings","model","collection"]);return t.defaults({},e,n)},render:function(){return this.preRender(),o(this),this.postRender(),this},preRender:i,postRender:i,rendered:function(){return this[a]},getChildren:function(){return this.toArray()},at:function(t){return this.getChildren()[t]},invoke:function(e){var n=t.toArray(arguments);return this.each(function(i){i.size()&&i.invoke.apply(i,n),t.isFunction(i[e])&&i[e].apply(i,n.slice(1))}),this}}),h=["each","map","reduce","reduceRight","find","filter","reject","every","some","contains","toArray","size","first","initial","rest","last","without","indexOf","shuffle","lastIndexOf","isEmpty","chain","where","findWhere"];return t.each(h,function(e){p.prototype[e]=function(){var n=t.toArray(arguments);return n.unshift(t.toArray(this[s])),t[e].apply(t,n)}},this),p})},function(t,e,n){var i,o;i=[n(45),n(49)],o=function(t,e){return t.decorate(e)}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o,r;!function(s,a){o=[n(2),n(47)],i=a,r="function"==typeof i?i.apply(e,o):i,!(void 0!==r&&(t.exports=r))}(this,function(t,e){return e.extend({constructor:function(){if(e.apply(this,arguments),!this.collection)throw new Error("Missing collection");this.listenTo(this.collection,"reset sort",this.reset),
this.listenTo(this.collection,"add",this.addItem),this.collection.each(this.addItem,this)},item:null,itemSelector:null,reset:function(){return this.removeChildren(),this.collection.each(this.addItem,this),this},addItem:function(t){var e=this.add(this.item,this.itemSelector,{options:{model:t}}).last();return e.listenTo(t,"destroy remove",e.remove),this}})})},function(t,e,n){var i,o;i=[n(6),n(2),n(41),n(51),n(52),n(15)],o=function(t,e,n,i,o,r){return n.Router.extend({listen:o.prototype.listen,constructor:function(t){t||(t={}),this.el=t.el,this.settings=new i(e.omit(t,"el")),n.Router.apply(this,arguments),this.listen("notification",this._notify),this.listen("confirmation",this._confirm)},_confirm:function(t){t||(t={});var n=r.extend(e.pick(t,"title","subtitle","save","ok","cancel","cancelFn","noCancelButton","content")),i=new n({model:this.settings});return i.render(),i},_notify:function(e){var n=new o(e);return t("#content").prepend(n.render().el),n},render:function(t,n){this.controller&&(this.stopListening(this.controller),this.stopListening(this.controller.state),this.controller.remove()),n=e.extend(e.pick(this,"settings","el"),n||{}),this.controller=new t(n),this.controller.render()},start:function(){var e=arguments;t(function(){n.history.start.apply(n.history,e)})}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(2),n(39)],o=function(t,e){return e.extend({local:function(){var t=window.okta&&window.okta.settings||{};return{orgId:["string",!1,t.orgId],orgName:["string",!1,t.orgName],isPreview:["boolean",!1,t.isPreview],serverStatus:["string",!1,t.serverStatus],permissions:["array",!0,t.permissions||[]]}},extraProperties:!0,constructor:function(){this.features=window._features||[],e.apply(this,arguments)},hasFeature:function(e){return t.contains(this.features,e)},hasPermission:function(e){return t.contains(this.get("permissions"),e)}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(6),n(2),n(45)],o=function(t,e,n){var i={level:"success",message:"Great Success!",hide:!0,fade:400,delay:3e3,width:0,dismissable:!1};return n.extend({className:"infobox infobox-confirm infobox-confirm-fixed",events:{"click .infobox-dismiss-link":"fadeOut"},template:'\t      {{#if dismissable}}\t      <a class="infobox-dismiss-link" title="Dismiss" href="#">\t        <span class="dismiss-icon"></span>\t      </a>\t      {{/if}}\t      <span class="icon {{level}}-16"></span>\t      {{#if title}}<h3>{{title}}</h3>{{/if}}\t      <p>{{message}}</p>\t    ',initialize:function(){this.options=e.defaults({},this.options,i),this.$el.addClass("infobox-"+this.options.level),this.options.width&&this.$el.width(this.options.width).css({"margin-left":"0px",left:Math.round((t(window).width()-this.options.width)/2)})},getTemplateData:function(){return e.extend(e.pick(this.options,"level","message","title"),{dismissable:this.options.hide===!1||this.options.dismissable===!0})},postRender:function(){this.options.hide&&e.delay(e.bind(this.fadeOut,this),this.options.delay)},fadeOut:function(){this.$el.fadeOut(this.options.fade,e.bind(this.remove,this))}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(6),n(2),n(45),n(54),n(51),n(50)],o=function(t,e,n,i,o,r){function s(t){var n={};return e.each(t,function(t,i){e.isNull(t)||(n[i]=t)}),n}return n.extend({constructor:function(t){t||(t={});var a=e.defaults(s(t.state),this.state||{});this.state=new i(a),delete t.state,t.settings?this.settings=t.settings:(this.settings=new o(e.omit(t||{},"el")),this.listen("notification",r.prototype._notify),this.listen("confirmation",r.prototype._confirm)),n.call(this,t),this.listenTo(this.state,"__invoke__",function(){var t=e.toArray(arguments),n=t.shift();e.isFunction(this[n])&&this[n].apply(this,t)}),this.View&&this.add(new this.View(this.toJSON()))},state:{},View:null,render:function(){var e=arguments,i=this;return t(function(){n.prototype.render.apply(i,e)}),this},toJSON:function(t){return e.extend(e.pick(this,"state","settings","collection","model"),t||{})},remove:function(){return this.removeChildren(),this.stopListening(),this.$el.empty(),this}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(2),n(39)],o=function(t,e){return e.extend({extraProperties:!0,invoke:function(){var e=t.toArray(arguments);e.unshift("__invoke__"),this.trigger.apply(this,e)}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(2),n(6),n(46),n(7),n(45),n(57),n(83),n(56),n(85),n(88),n(89),n(86),n(90),n(91)],o=function(t,e,n,i,o,r,s,a,l,c,u,p,h,d){function f(t){if(!g&&this.$el.hasClass("o-form-saving")){var n=e(t.currentTarget);n.css("display","none");var i=document.elementFromPoint(t.clientX,t.clientY);return n.css("display","block"),t.target=i,e(i).trigger(t),!1}}var m='\t    {{#if hasReadMode}}\t      <h2 class="o-form-title-bar" data-se="o-form-title-bar">\t        {{title}}\t      </h2>\t    {{/if}}\t    <div data-se="o-form-content" class="o-form-content {{layout}} clearfix">\t      {{#unless hasReadMode}}\t        {{#if title}}\t          <h2 data-se="o-form-head" class="okta-form-title o-form-head">{{title}}</h2>\t        {{/if}}\t      {{/unless}}\t      {{#if subtitle}}\t        <p class="okta-form-subtitle o-form-explain" data-se="o-form-explain">{{subtitle}}</p>\t      {{/if}}\t      <div class="o-form-error-container" data-se="o-form-error-container"></div>\t      <div class="o-form-fieldset-container" data-se="o-form-fieldset-container"></div>\t    </div>\t  ',g="auto"===e("<div>").css({"pointer-events":"auto"})[0].style.pointerEvents,v={submit:function(t){t.preventDefault(),this.__save()}};t.each(["click","dblclick","mousedown","mouseup"],function(t){v[t+" .o-form-input"]=f});var y=function(e){e||(e={});var n=e&&e.collection||{};return{method:"POST",action:t.result(e,"urlRoot")||t.result(n,"url")||window.location.pathname,"data-se":"o-form"}},_=function(e,n){e||(e="");var i=[];return t.isString(e)&&(i=e.split(" ")),i=t.union(i,n),i.join(" ")};return o.extend({constructor:function(e){e||(e={}),this.options=e,this.id=t.uniqueId("form"),this.tagName="form",t.defaults(this.events,v),t.defaults(this.attributes,y(e.model)),this.__buttons=[],this.__errorFields={},this.__saveModelState(e.model),this.step&&(this.save||(this.save=this.totalSteps&&this.step!==this.totalSteps?"Next":"Finish"),this.className+=" wizard"),this.className+=" o-form",this.__toolbar=this.__createToolbar(e),o.call(this,e),t.each(t.result(this,"inputs")||[],function(t){this.__addLayoutItem(t)},this),this.add(this.__toolbar,""),this.listenTo(this.model,"change:__edit__",this.__applyMode),this.listenTo(this.model,"invalid error",t.throttle(this.__showErrors,100,{trailing:!1})),this.listenTo(this.model,"form:resize",function(){this.trigger("resize")}),this.listenTo(this.model,"form:cancel",t.throttle(this.__cancel,100,{trailing:!1})),this.listenTo(this.model,"form:previous",t.throttle(this.__previous,100,{trailing:!1})),this.__save=t.throttle(this.__save,200,{trailing:!1}),this.listenTo(this.model,"form:save",function(){this.$el.submit().trigger("submit")}),this.listenTo(this.model,"sync",function(){this.model.get("__edit__")&&this.model.set("__edit__",!1,{silent:!0}),this.__saveModelState(this.model),this.render()});var n=this.getAttribute("hasSavingState");if(this.getAttribute("autoSave")&&(this.listenTo(this,"save",function(e){var n=e.save();n&&n.done&&n.done(t.bind(function(){this.trigger("saved",e)},this))}),t.isUndefined(n)&&(n=!0)),n){var i=this.getAttribute("customSavingState",{});this.listenTo(this.model,_(i.start||"",["request"]),this.__setSavingState),this.listenTo(this.model,_(i.stop||"",["error","sync"]),this.__clearSavingState)}},__createToolbar:function(e){var n=this.getAttribute("danger"),o=n===!0?"button-error":"button-primary",r=new d(t.extend({save:this.save||i.localize("oform.save"),saveClassName:o,cancel:this.cancel||i.localize("oform.cancel"),noCancelButton:this.noCancelButton||!1,hasPrevStep:this.step&&this.step>1},e||this.options));return t.each(this.__buttons,function(t){r.addButton.apply(r,t)}),r},className:"",attributes:{},events:{},inputs:[],template:null,read:!1,readOnly:!1,noButtonBar:!1,noCancelButton:!1,save:null,cancel:null,danger:!1,layout:"",step:void 0,totalSteps:void 0,title:null,subtitle:null,autoSave:!1,scrollOnError:!0,showErrors:!0,resizeSelector:".o-form-content",getAttribute:function(e,n){var i=t.resultCtx(this.options,e,this);return t.isUndefined(i)&&(i=t.result(this,e)),t.isUndefined(i)?n:i},hasReadMode:function(){return!!this.getAttribute("read")},isReadOnly:function(){return!!this.getAttribute("readOnly")},hasButtonBar:function(){return!(this.getAttribute("noButtonBar")||this.isReadOnly())},render:function(){this.__readModeBar&&this.__readModeBar.remove(),this.hasReadMode()&&!this.isReadOnly()&&(this.__readModeBar=this.add(h,".o-form-title-bar").last());var t=n.tpl(m)({layout:this.getAttribute("layout",""),title:this.getAttribute("title","",!0),subtitle:this.getAttribute("subtitle","",!0),hasReadMode:this.hasReadMode()});return this.$el.html(t),delete this.template,o.prototype.render.apply(this,arguments),this.__applyMode(),this},__setSavingState:function(){this.model.trigger("form:set-saving-state"),this.$el.addClass("o-form-saving")},__clearSavingState:function(){this.model.trigger("form:clear-saving-state"),this.$el.removeClass("o-form-saving")},__toggleToolbar:function(){this.__toolbar&&this.__toolbar.remove(),this.hasButtonBar()&&this._editMode()&&(this.__toolbar=this.__createToolbar(),this.add(this.__toolbar,"")),this.trigger("resize")},__cancel:function(){var e=this.model.get("__edit__");this.model.clear({silent:!0});var n;n=this.model.sanitizeAttributes?this.model.sanitizeAttributes(this.__originalModel):t.clone(this.__originalModel),this.model.set(n,{silent:!0}),this.trigger("cancel",this.model),this.model.trigger("cache:clear"),e&&(this.model.set("__edit__",!1,{silent:!0}),this.model.trigger("change:__edit__",this.model,!1)),this.clearErrors()},__save:function(){this.clearErrors(),this.model.isValid()&&this.trigger("save",this.model)},__previous:function(){this.trigger("previous",this.model)},__applyMode:function(){this.clearErrors(),this.__toggleToolbar(),this._editMode()?(this.$el.addClass("o-form-edit-mode"),this.$el.removeClass("o-form-read-mode"),this.$(".o-form-content").removeClass("rounded-btm-4"),this.focus()):(this.$el.removeClass("o-form-edit-mode"),this.$el.addClass("o-form-read-mode"),this.$(".o-form-content").addClass("rounded-btm-4"))},_editMode:function(){return this.model.get("__edit__")||!this.hasReadMode()},parseErrorMessage:t.identity,__showErrors", "base64"));
  res.write(new Buffer(":function(n,o){if(this.getAttribute("showErrors")){var r,s=u.parseFieldErrors(o);if(t.size(s))t.each(s,function(e,n){this.model.trigger("form:field-error",this.__errorFields[n]||n,t.map(e,function(t){return/^model\.validation/.test(t)?i.localize(t):t}))},this);else{var a=u.getResponseJSON(o);a=this.parseErrorMessage(a),r=a&&a.errorSummary}if(this.$(".o-form-error-container").addClass("o-form-has-errors"),this.add(c,".o-form-error-container",{options:{errorSummary:r}}),this.getAttribute("scrollOnError")){var l=e("#"+this.id+" .o-form-error-container");l.length&&e("html, body").animate({scrollTop:l.offset().top},400)}this.model.trigger("form:resize")}},clearErrors:function(){this.$(".o-form-error-container").removeClass("o-form-has-errors"),this.model.trigger("form:clear-errors"),this.model.trigger("form:resize")},toggle:function(){return this.model.set("__edit__",!this.hasReadMode()||!this.model.get("__edit__")),this},__addLayoutItem:function(t){r.supports(t)?this.addInput(t):this.__addNonInputLayoutItem(t)},__addNonInputLayoutItem:function(e){var n=t.omit(e,"type");switch(e.type){case"sectionTitle":this.addSectionTitle(e.title,t.omit(n,"title"));break;case"divider":this.addDivider(n);break;default:throw new Error("unknown input: "+e.type)}},addButton:function(t,e){this.__toolbar&&this.__toolbar.addButton(t,e),this.__buttons.push([t,e])},addDivider:function(t){return this.add('<div class="okta-form-divider form-divider"></div>'),p.applyShowWhen(this.last(),t&&t.showWhen),this},addSectionTitle:function(t,e){return this.add(n.tpl('<h2 class="o-form-head">{{title}}</h2>')({title:t})),p.applyShowWhen(this.last(),e&&e.showWhen),this},addInput:function(e){e=t.clone(e),p.validateInput(e,this.model);var n=p.generateInputOptions(e,this,this.__createInput).reverse(),i=t.map(n,this.__createInput,this);t.each(n,function(t){t.errorField&&(this.__errorFields[t.errorField]=t.name)},this);var o={inputId:t.last(i).options.inputId,input:i,multi:n.length>1?n.length:void 0};t.extend(o,t.omit(this.options,"input"),t.omit(e,"input"));var r=this.__createWrapper(o);o.label!==!1&&r.add(this.__createLabel(o)),r.add(this._createContainer(o)),r.type=o.type||o.input.type||"custom";var s=[r].concat(t.drop(arguments,1));return this.add.apply(this,s)},__createInput:function(e){return e=t.pick(e,p.INPUT_OPTIONS),r.create(e)},__createWrapper:function(e){return e=t.pick(e,p.WRAPPER_OPTIONS),new l(e)},__createLabel:function(e){return e=t.pick(e,p.LABEL_OPTIONS),new s(e)},_createContainer:function(e){return e=t.pick(e,p.CONTAINER_OPTIONS),new a(e)},__saveModelState:function(t){this.__originalModel=t.clone().attributes},add:function(){var e=t.toArray(arguments);return"undefined"==typeof e[1]&&(e[1]="> div.o-form-content > .o-form-fieldset-container"),o.prototype.add.apply(this,e)},focus:function(){var t=this.getInputs().first();return t&&t.focus&&t.focus(),this},disable:function(){return this.invoke("disable"),this},enable:function(){this.invoke("enable")},contentHeight:function(e){var n=this.$(".o-form-content");return t.isNumber(e)?void n.css("max-height",e):n.height()},getInputs:function(){return t(this.filter(function(t){return t instanceof l}))}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(2),n(46),n(45)],o=function(t,e,n){return n.extend({attributes:function(){return{"data-se":"o-form-input-container"}},className:function(){var e="o-form-input";if(this.options.wide&&(e+=" o-form-wide"),t.contains([1,2,3,4],this.options.multi)&&(e+=" o-form-multi-input-"+this.options.multi,t.isArray(this.options.input))){var n=t.find(this.options.input,function(e){return t.contains(["text+select","select+text"],e.options.type)});n&&(e+=" o-form-multi-input-group-"+this.options.multi)}return e},_getNames:function(){var e=t.isArray(this.options.name)?this.options.name:[this.options.name];return"group"==this.options.type?e.push.apply(e,t.pluck(this.options.input[0].options.params.inputs,"name")):t.isArray(this.options.name)?this.options.input&&this.options.input.options&&this.options.input.options.name&&e.push(this.options.input.options.name):this.options.input&&(t.isArray(this.options.input)?t.each(this.options.input,function(t){e.push(t.options.name)}):e.push(this.options.input.options.name)),t.uniq(t.compact(e))},constructor:function(){n.apply(this,arguments),this.options.input&&(t.isArray(this.options.input)?t.each(this.options.input,function(t){this.add(t,{prepend:!0})},this):this.add(this.options.input,{prepend:!0}));var e=t.resultCtx(this.options,"explain",this);e&&(e instanceof n?this.add(e):this.template='<p class="o-form-explain">{{explain}}</p>'),this.options.customExplain&&this.add(this.options.customExplain);var i=this._getNames();this.listenTo(this.model,"form:field-error",function(e,n){t.contains(i,e)&&this.__setError(n)}),this.listenTo(this.model,"form:clear-errors change:"+i.join(" change:"),this.__clearError),t.resultCtx(this.options,"autoRender",this)&&this.listenTo(this.model,"change:"+this.options.name,this.render),this.__errorState=!1},__setError:function(t){this.__errorState=!0,this.$el.addClass("o-form-has-errors");var n=['<p class="okta-form-input-error o-form-input-error o-form-explain">','<span class="icon icon-16 error-16-small"></span>',"{{text}}","</p>"].join(""),i=e.tpl(n)({text:t.join(", ")}),o=this.$(".o-form-explain").not(".o-form-input-error");o.length?o.before(i):this.$el.append(i)},__clearError:function(){this.__errorState&&(this.$(".o-form-input-error").remove(),this.$el.removeClass("o-form-has-errors"),this.__errorState=!1,t.defer(t.bind(function(){this.model.trigger("form:resize")},this)))},focus:function(){return this.each(function(t){if(t.focus)return t.focus()}),this}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(2),n(60),n(59),n(63),n(64),n(66),n(68),n(69),n(70),n(71),n(58),n(72),n(73),n(74),n(75),n(76),n(77),n(78),n(79),n(82)],o=function(t,e,n,i,o,r,s,a,l,c,u,p,h,d,f,m,g,v,y,_){function b(n,i){return n.prototype instanceof e?new n(t.omit(i,"input")):n}function w(e){if(e=t.clone(e),e.input)return b(e.input,e);var n;if(!k[e.type])throw new Error("unknown input: "+e.type);return n=k[e.type],b(n,e)}function S(t){return!!(t.input||t.type in k)}var k={select:o,textarea:i,radio:r,checkbox:s,text:n,password:n,number:u,textselect:a,"text+select":l,"select+text":l,date:c,grouppicker:p,userpicker:h,apppicker:d,appinstancepicker:f,"su-orgspicker":m,zonepicker:g,list:v,group:y,checkboxset:_};return{create:w,supports:S}}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e){},function(t,e,n){var i,o;i=[n(46),n(60),n(61),n(62)],o=function(t,e,n){var i="okta-form-input-field input-fix";return e.extend({template:t.tpl('<input type="{{type}}" placeholder="{{placeholder}}"\t      name="{{name}}" id="{{inputId}}" value="{{value}}"/>'),events:{"input input":"update","change input":"update","keydown input":"update","keyup input":function(t){n.isEnter(t)?this.model.trigger("form:save"):n.isEsc(t)&&this.model.trigger("form:cancel")}},constructor:function(){e.apply(this,arguments),this.$el.addClass("o-form-control")},editMode:function(){this.$el.addClass(i),e.prototype.editMode.apply(this,arguments),this.$("input").placeholder()},readMode:function(){e.prototype.readMode.apply(this,arguments),"password"==this.options.type&&this.$el.text("********"),this.$el.removeClass(i)},val:function(){return this.$('input[type="'+this.options.type+'"]').val()},focus:function(){return this.$("input").focus()}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(2),n(45)],o=function(t,e){return e.extend({tagName:"span",attributes:function(){return{"data-se":"o-form-input-"+this.getNameString()}},defaultPlaceholder:"",constructor:function(n){n=t.defaults(n||{},{inputId:n.id||t.uniqueId("input"),placeholder:this.defaultPlaceholder}),delete n.id;var i=this;t.each({enable:"removeClass",disable:"addClass"},function(e,n){i[n]=t.wrap(i[n],function(t){t.apply(i,arguments),i.$el[e]("o-form-disabled")})}),e.call(this,n),t.result(n,"readOnly")!==!0&&t.result(n,"read")===!0&&this.listenTo(this.model,"change:__edit__",this.render),t.isFunction(this.focus)&&(this.focus=t.debounce(t.bind(this.focus,this),50)),this.addModelListeners(),this.$el.addClass("o-form-input-name-"+this.getNameString())},toModelValue:function(){var e=this.val();return t.isFunction(this.to)&&(e=this.to.call(this,e)),t.isFunction(this.options.to)&&(e=this.options.to.call(this,e)),e},update:function(){this.model.set(this.options.name,this.toModelValue())},isEditMode:function(){var e=!t.result(this.options,"readOnly")&&(t.result(this.options,"read")!==!0||this.model.get("__edit__")===!0);return e},render:function(){this.preRender();var e=this.options.params;return this.options.params=t.resultCtx(this.options,"params",this),this.isEditMode()?(this.editMode(),t.resultCtx(this.options,"disabled",this)&&this.disable()):this.readMode(),this.options.params=e,this.postRender(),this},addModelListeners:function(){this.listenTo(this.model,"form:field-error",function(t){this.options.name===t&&this.__markError()}),this.listenTo(this.model,"form:clear-errors change:"+this.options.name,this.__clearError)},val:function(){throw new Error("val() is an abstract method")},focus:function(){throw new Error("focus() is an abstract method")},defaultValue:function(){return""},editMode:function(){var e=t.extend({},this.options,{value:this.getModelValue()});return this.$el.html(this.template(e)),this.options.multi&&this.$el.removeClass("margin-r"),this},readMode:function(){return this.$el.text(this.getReadModeString()),this.$el.removeClass("error-field"),this.options.multi&&this.$el.addClass("margin-r"),this},getReadModeString:function(){var e=t.resultCtx(this.options,"readModeString",this);return e?e:this.toStringValue()},getModelValue:function(){var e=this.model.get(this.options.name);return t.isFunction(this.from)&&(e=this.from.call(this,e)),t.isFunction(this.options.from)&&(e=this.options.from.call(this,e)),e},toStringValue:function(){var t=this.getModelValue();return this.options.options&&(t=this.options.options[t]),t||this.defaultValue()},disable:function(){this.$(":input").prop("disabled",!0)},enable:function(){this.$(":input").prop("disabled",!1)},changeType:function(t){this.$(":input").prop("type",t),this.options.type=t},getNameString:function(){return t.isArray(this.options.name)?this.options.name.join("-"):this.options.name},__markError:function(){this.$el.addClass("o-form-has-errors")},__clearError:function(){this.$el.removeClass("o-form-has-errors")}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){!(t.exports={UP:38,DOWN:40,DEL:46,TAB:9,RETURN:13,ENTER:13,ESC:27,COMMA:188,PAGEUP:33,PAGEDOWN:34,SPACE:32,BACKSPACE:8,__isKey:function(t,e){return(t.which||t.keyCode)==this[e]},isEnter:function(t){return this.__isKey(t,"ENTER")},isEsc:function(t){return this.__isKey(t,"ESC")},isSpaceBar:function(t){return this.__isKey(t,"SPACE")}})},function(t,e,n){(function(){var t=n(6);!function(t,e,n){function i(t){var e={},i=/^jQuery\d+$/;return n.each(t.attributes,function(t,n){n.specified&&!i.test(n.name)&&(e[n.name]=n.value)}),e}function o(t,e){var i=this,o=n(i);if(i.value==o.attr("placeholder")&&o.hasClass("placeholder"))if(o.data("placeholder-password")){if(o=o.hide().next().show().attr("id",o.removeAttr("id").data("placeholder-id")),t===!0)return o[0].value=e;o.focus()}else i.value="",o.removeClass("placeholder"),i==s()&&i.select()}function r(){var t,e=this,r=n(e),s=this.id;if(""==e.value){if("password"==e.type){if(!r.data("placeholder-textinput")){try{t=r.clone().attr({type:"text"})}catch(a){t=n("<input>").attr(n.extend(i(this),{type:"text"}))}t.removeAttr("name").data({"placeholder-password":r,"placeholder-id":s}).bind("focus.placeholder",o),r.data({"placeholder-textinput":t,"placeholder-id":s}).before(t)}r=r.removeAttr("id").hide().prev().attr("id",s).show()}r.addClass("placeholder"),r[0].value=r.attr("placeholder")}else r.removeClass("placeholder")}function s(){try{return e.activeElement}catch(t){}}var a,l,c="placeholder"in e.createElement("input"),u="placeholder"in e.createElement("textarea"),p=n.fn,h=n.valHooks,d=n.propHooks;c&&u?(l=p.placeholder=function(){return this},l.input=l.textarea=!0):(l=p.placeholder=function(){var t=this;return t.filter((c?"textarea":":input")+"[placeholder]").not(".placeholder").bind({"focus.placeholder":o,"blur.placeholder":r}).data("placeholder-enabled",!0).trigger("blur.placeholder"),t},l.input=c,l.textarea=u,a={get:function(t){var e=n(t),i=e.data("placeholder-password");return i?i[0].value:e.data("placeholder-enabled")&&e.hasClass("placeholder")?"":t.value},set:function(t,e){var i=n(t),a=i.data("placeholder-password");return a?a[0].value=e:i.data("placeholder-enabled")?(""==e?(t.value=e,t!=s()&&r.call(t)):i.hasClass("placeholder")?o.call(t,!0,e)||(t.value=e):t.value=e,i):t.value=e}},c||(h.input=a,d.value=a),u||(h.textarea=a,d.value=a),n(function(){n(e).delegate("form","submit.placeholder",function(){var t=n(".placeholder",this).each(o);setTimeout(function(){t.each(r)},10)})}),n(t).bind("beforeunload.placeholder",function(){n(".placeholder").each(function(){this.value=""})}))}(this,document,t)}).call(window)},function(t,e){},function(t,e,n){var i,o;i=[n(6),n(2),n(61),n(46),n(60),n(65)],o=function(t,e,n,i,o){function r(t){return this.params.autoWidth?t.call(this):e.defer(e.bind(t,this))}function s(e){e.$select.hide();var n=t(e.$select[0]).hide();t("body").append(n);var i=e.params.width=1.2*n.width()+"px";return e.$el.append(n.show()),i}function a(e,n,i){var o=i.offset();e.css({left:o.left,top:o.top});var r=t(window),s=n.outerHeight(),a=s+n.offset().top-r.scrollTop(),l=r.height()-p,c=Math.min(s+l-a,h);n.css("max-height",c)}function l(n){var i=n.next(".chzn-container"),o=i.clone(),r=i.find(".chzn-results");o.css("visibility","hidden"),o.removeAttr("id"),o.find("li").removeAttr("id");var s={left:i.css("left"),top:i.css("top"),position:i.css("position"),"float":i.css("float"),"z-index":i.css("z-index")};r.hide();var l=e.debounce(function(){a(i,r,o)},10);n.on("liszt:showing_dropdown",function(){i.width(i.width()),n.after(o),i.css({position:"absolute","float":"none","z-index":d}),t("body").append(i),r.show(),a(i,r,o),n.parents().scroll(l),t(window).on("resize scroll",l)}),n.on("liszt:hiding_dropdown remove",function(){n.parents().off("scroll",l),t(window).off("resize scroll",l),i.css(s),r.hide(),r.css("max-height",h),o.remove(),n.after(i)})}var c=i.tpl('<select id="{{inputId}}" name="{{name}}"></select>'),u=i.tpl('<option value="{{key}}">{{value}}</option>'),p=20,h=240,d=5e4;return o.extend({className:"o-form-select",events:{"change select":"update","keyup .chzn-search > :text":function(t){n.isEsc(t)&&(this.$(".chzn-search > :text").val(""),t.stopPropagation())}},constructor:function(){o.apply(this,arguments),this.params=this.options.params||{}},editMode:function(){this.$el.html(c(this.options)),this.$select=this.$("select");var t=this.getOptions();e.each(t,function(t,e){this.$select.append(u({key:e,value:t}))},this);var n=this.getModelValue();return n?this.$select.val(n):this.$("option:first-child").prop("selected",!0),this.$el.addClass("o-form-control"),this.params.chosen!==!1&&this.__applyChosen(),this},__applyChosen:function(){var t=this.options.wide?"100%":this.params.width||"62%";this.params.autoWidth&&(t=s(this)),r.call(this,function(){var n;n=this.params&&this.params.searchThreshold?e.result(this.params,"searchThreshold"):10,e.result(this.options,"autoRender")||this.update(),this.$select.chosen({width:t,disable_search_threshold:n,placeholder_text:this.options.placeholder}),l(this.$select),this.params.autoWidth&&this.$el.width(0),this.model.trigger("form:resize")})},val:function(){return this.$select&&this.$select.val()},focus:function(){if(this.$select)return this.$select.focus()},toStringValue:function(){var t=this.getModelValue(),n=t,i=this.getOptions();return e.isEmpty(i)||(n=i[t]),e.isUndefined(n)&&(n=this.defaultValue()),n||""},getOptions:function(){var t=this.options.options;return e.isFunction(t)&&(t=t.call(this)),e.isObject(t)?t:{}},remove:function(){return this.$select&&this.$select.trigger("remove"),o.prototype.remove.apply(this,arguments)}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(6)],o=function(t){(function(){var t;t=function(){function t(){this.options_index=0,this.parsed=[]}return t.prototype.add_node=function(t){return"OPTGROUP"===t.nodeName.toUpperCase()?this.add_group(t):this.add_option(t)},t.prototype.add_group=function(t){var e,n,i,o,r,s;for(e=this.parsed.length,this.parsed.push({array_index:e,group:!0,label:t.label,children:0,disabled:t.disabled}),r=t.childNodes,s=[],i=0,o=r.length;i<o;i++)n=r[i],s.push(this.add_option(n,e,t.disabled));return s},t.prototype.add_option=function(t,e,n){if("OPTION"===t.nodeName.toUpperCase())return""!==t.text?(null!=e&&(this.parsed[e].children+=1),this.parsed.push({array_index:this.parsed.length,options_index:this.options_index,value:t.value,text:t.text,html:t.innerHTML,selected:t.selected,disabled:n===!0?n:t.disabled,group_array_index:e,classes:t.className,style:t.style.cssText})):this.parsed.push({array_index:this.parsed.length,options_index:this.options_index,empty:!0}),this.options_index+=1},t}(),t.select_to_array=function(e){var n,i,o,r,s;for(i=new t,s=e.childNodes,o=0,r=s.length;o<r;o++)n=s[o],i.add_node(n);return i.parsed},this.SelectParser=t}).call(this),function(){var t,e;e=this,t=function(){function t(e,n){this.form_field=e,this.options=null!=n?n:{},t.browser_is_supported()&&(this.is_multiple=this.form_field.multiple,this.set_default_text(),this.set_default_values(),this.setup(),this.set_up_html(),this.register_observers(),this.finish_setup())}return t.prototype.set_default_values=function(){var t=this;return this.click_test_action=function(e){return t.test_active_click(e)},this.activate_action=function(e){return t.activate_field(e)},this.active_field=!1,this.mouse_on_container=!1,this.results_showing=!1,this.result_highlighted=null,this.result_single_selected=null,this.allow_single_deselect=null!=this.options.allow_single_deselect&&null!=this.form_field.options[0]&&""===this.form_field.options[0].text&&this.options.allow_single_deselect,this.disable_search_threshold=this.options.disable_search_threshold||0,this.disable_search=this.options.disable_search||!1,this.enable_split_word_search=null==this.options.enable_split_word_search||this.options.enable_split_word_search,this.search_contains=this.options.search_contains||!1,this.single_backstroke_delete=this.options.single_backstroke_delete||!1,this.max_selected_options=this.options.max_selected_options||1/0,this.inherit_select_classes=this.options.inherit_select_classes||!1},t.prototype.set_default_text=function(){return this.form_field.getAttribute("data-placeholder")?this.default_text=this.form_field.getAttribute("data-placeholder"):this.is_multiple?this.default_text=this.options.placeholder_text_multiple||this.options.placeholder_text||t.default_multiple_text:this.default_text=this.options.placeholder_text_single||this.options.placeholder_text||t.default_single_text,this.results_none_found=this.form_field.getAttribute("data-no_results_text")||this.options.no_results_text||t.default_no_result_text},t.prototype.mouse_enter=function(){return this.mouse_on_container=!0},t.prototype.mouse_leave=function(){return this.mouse_on_container=!1},t.prototype.input_focus=function(t){var e=this;if(this.is_multiple){if(!this.active_field)return setTimeout(function(){return e.container_mousedown()},50)}else if(!this.active_field)return this.activate_field()},t.prototype.input_blur=function(t){var e=this;if(!this.mouse_on_container)return this.active_field=!1,setTimeout(function(){return e.blur_test()},100)},t.prototype.result_add_option=function(t){var e,n;return t.dom_id=this.container_id+"_o_"+t.array_index,e=[],t.disabled||t.selected&&this.is_multiple||e.push("active-result"),!t.disabled||t.selected&&this.is_multiple||e.push("disabled-result"),t.selected&&e.push("result-selected"),null!=t.group_array_index&&e.push("group-option"),""!==t.classes&&e.push(t.classes),n=""!==t.style.cssText?' style="'+t.style+'"':"",'<li id="'+t.dom_id+'" class="'+e.join(" ")+'"'+n+">"+t.html+"</li>"},t.prototype.results_update_field=function(){return this.set_default_text(),this.is_multiple||this.results_reset_cleanup(),this.result_clear_highlight(),this.result_single_selected=null,this.results_build()},t.prototype.results_toggle=function(){return this.results_showing?this.results_hide():this.results_show()},t.prototype.results_search=function(t){return this.results_showing?this.winnow_results():this.results_show()},t.prototype.choices_count=function(){var t,e,n,i;if(null!=this.selected_option_count)return this.selected_option_count;for(this.selected_option_count=0,i=this.form_field.options,e=0,n=i.length;e<n;e++)t=i[e],t.selected&&(this.selected_option_count+=1);return this.selected_option_count},t.prototype.choices_click=function(t){if(t.preventDefault(),!this.results_showing&&!this.is_disabled)return this.results_show()},t.prototype.keyup_checker=function(t){var e,n;switch(e=null!=(n=t.which)?n:t.keyCode,this.search_field_scale(),e){case 8:if(this.is_multiple&&this.backstroke_length<1&&this.choices_count()>0)return this.keydown_backstroke();if(!this.pending_backstroke)return this.result_clear_highlight(),this.results_search();break;case 13:if(t.preventDefault(),
this.results_showing)return this.result_select(t);break;case 27:return this.results_showing&&this.results_hide(),!0;case 9:case 38:case 40:case 16:case 91:case 17:break;default:return this.results_search()}},t.prototype.generate_field_id=function(){var t;return t=this.generate_random_id(),this.form_field.id=t,t},t.prototype.generate_random_char=function(){var t,e,n;return t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",n=Math.floor(Math.random()*t.length),e=t.substring(n,n+1)},t.prototype.container_width=function(){return null!=this.options.width?this.options.width:""+this.form_field.offsetWidth+"px"},t.browser_is_supported=function(){var t;return"Microsoft Internet Explorer"!==window.navigator.appName||null!==(t=document.documentMode)&&t>=8},t.default_multiple_text="Select Some Options",t.default_single_text="Select an Option",t.default_no_result_text="No results match",t}(),e.AbstractChosen=t}.call(this),function(){var e,n,i,o,r={}.hasOwnProperty,s=function(t,e){function n(){this.constructor=t}for(var i in e)r.call(e,i)&&(t[i]=e[i]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t};i=this;var a=i.AbstractChosen;e=t,e.fn.extend({chosen:function(t){return a.browser_is_supported()?this.each(function(i){var o;if(o=e(this),!o.hasClass("chzn-done"))return o.data("chosen",new n(this,t))}):this}}),n=function(t){function n(){return o=n.__super__.constructor.apply(this,arguments)}return s(n,t),n.prototype.setup=function(){return this.form_field_jq=e(this.form_field),this.current_selectedIndex=this.form_field.selectedIndex,this.is_rtl=this.form_field_jq.hasClass("chzn-rtl")},n.prototype.finish_setup=function(){return this.form_field_jq.addClass("chzn-done")},n.prototype.set_up_html=function(){var t,n;return this.container_id=this.form_field.id.length?this.form_field.id.replace(/[^\w]/g,"_"):this.generate_field_id(),this.container_id+="_chzn",t=["chzn-container"],t.push("chzn-container-"+(this.is_multiple?"multi":"single")),this.inherit_select_classes&&this.form_field.className&&t.push(this.form_field.className),this.is_rtl&&t.push("chzn-rtl"),n={id:this.container_id,"class":t.join(" "),style:"width: "+this.container_width()+";",title:this.form_field.title},this.container=e("<div />",n),this.is_multiple?this.container.html('<ul class="chzn-choices"><li class="search-field"><input type="text" value="'+this.default_text+'" class="default" autocomplete="off" style="width:25px;" /></li></ul><div class="chzn-drop"><ul class="chzn-results"></ul></div>'):this.container.html('<a href="javascript:void(0)" class="chzn-single chzn-default" tabindex="-1"><span>'+this.default_text+'</span><div><b></b></div></a><div class="chzn-drop"><div class="chzn-search"><input type="text" autocomplete="off" /></div><ul class="chzn-results"></ul></div>'),this.form_field_jq.hide().after(this.container),this.dropdown=this.container.find("div.chzn-drop").first(),this.search_field=this.container.find("input").first(),this.search_results=this.container.find("ul.chzn-results").first(),this.search_field_scale(),this.search_no_results=this.container.find("li.no-results").first(),this.is_multiple?(this.search_choices=this.container.find("ul.chzn-choices").first(),this.search_container=this.container.find("li.search-field").first()):(this.search_container=this.container.find("div.chzn-search").first(),this.selected_item=this.container.find(".chzn-single").first()),this.results_build(),this.set_tab_index(),this.set_label_behavior(),this.form_field_jq.trigger("liszt:ready",{chosen:this})},n.prototype.register_observers=function(){var t=this;return this.container.mousedown(function(e){t.container_mousedown(e)}),this.container.mouseup(function(e){t.container_mouseup(e)}),this.container.mouseenter(function(e){t.mouse_enter(e)}),this.container.mouseleave(function(e){t.mouse_leave(e)}),this.search_results.mouseup(function(e){t.search_results_mouseup(e)}),this.search_results.mouseover(function(e){t.search_results_mouseover(e)}),this.search_results.mouseout(function(e){t.search_results_mouseout(e)}),this.search_results.bind("mousewheel DOMMouseScroll",function(e){t.search_results_mousewheel(e)}),this.form_field_jq.bind("liszt:updated",function(e){t.results_update_field(e)}),this.form_field_jq.bind("liszt:activate",function(e){t.activate_field(e)}),this.form_field_jq.bind("liszt:open",function(e){t.container_mousedown(e)}),this.search_field.blur(function(e){t.input_blur(e)}),this.search_field.keyup(function(e){t.keyup_checker(e)}),this.search_field.keydown(function(e){t.keydown_checker(e)}),this.search_field.focus(function(e){t.input_focus(e)}),this.is_multiple?this.search_choices.click(function(e){t.choices_click(e)}):this.container.click(function(t){t.preventDefault()})},n.prototype.search_field_disabled=function(){return this.is_disabled=this.form_field_jq[0].disabled,this.is_disabled?(this.container.addClass("chzn-disabled"),this.search_field[0].disabled=!0,this.is_multiple||this.selected_item.unbind("focus",this.activate_action),this.close_field()):(this.container.removeClass("chzn-disabled"),this.search_field[0].disabled=!1,this.is_multiple?void 0:this.selected_item.bind("focus",this.activate_action))},n.prototype.container_mousedown=function(t){if(!this.is_disabled&&(t&&"mousedown"===t.type&&!this.results_showing&&t.preventDefault(),null==t||!e(t.target).hasClass("search-choice-close")))return this.active_field?this.is_multiple||!t||e(t.target)[0]!==this.selected_item[0]&&!e(t.target).parents("a.chzn-single").length||(t.preventDefault(),this.results_toggle()):(this.is_multiple&&this.search_field.val(""),e(document).click(this.click_test_action),this.results_show()),this.activate_field()},n.prototype.container_mouseup=function(t){if("ABBR"===t.target.nodeName&&!this.is_disabled)return this.results_reset(t)},n.prototype.search_results_mousewheel=function(t){var e,n,i;if(e=-(null!=(n=t.originalEvent)?n.wheelDelta:void 0)||(null!=(i=t.originialEvent)?i.detail:void 0),null!=e)return t.preventDefault(),"DOMMouseScroll"===t.type&&(e=40*e),this.search_results.scrollTop(e+this.search_results.scrollTop())},n.prototype.blur_test=function(t){if(!this.active_field&&this.container.hasClass("chzn-container-active"))return this.close_field()},n.prototype.close_field=function(){return e(document).unbind("click",this.click_test_action),this.active_field=!1,this.results_hide(),this.container.removeClass("chzn-container-active"),this.clear_backstroke(),this.show_search_field_default(),this.search_field_scale()},n.prototype.activate_field=function(){return this.container.addClass("chzn-container-active"),this.active_field=!0,this.search_field.val(this.search_field.val()),this.search_field.focus()},n.prototype.test_active_click=function(t){return e(t.target).parents("#"+this.container_id).length?this.active_field=!0:this.close_field()},n.prototype.results_build=function(){var t,e,n,o,r;for(this.parsing=!0,this.selected_option_count=null,this.results_data=i.SelectParser.select_to_array(this.form_field),this.is_multiple?this.search_choices.find("li.search-choice").remove():this.is_multiple||(this.selected_item.addClass("chzn-default").find("span").text(this.default_text),this.disable_search||this.form_field.options.length<=this.disable_search_threshold?(this.search_field[0].readOnly=!0,this.container.addClass("chzn-container-single-nosearch")):(this.search_field[0].readOnly=!1,this.container.removeClass("chzn-container-single-nosearch"))),t="",r=this.results_data,n=0,o=r.length;n<o;n++)e=r[n],e.group?t+=this.result_add_group(e):e.empty||(t+=this.result_add_option(e),e.selected&&this.is_multiple?this.choice_build(e):e.selected&&!this.is_multiple&&(this.selected_item.removeClass("chzn-default").find("span").text(e.text),this.allow_single_deselect&&this.single_deselect_control_build()));return this.search_field_disabled(),this.show_search_field_default(),this.search_field_scale(),this.search_results.html(t),this.parsing=!1},n.prototype.result_add_group=function(t){return t.dom_id=this.container_id+"_g_"+t.array_index,'<li id="'+t.dom_id+'" class="group-result">'+e("<div />").text(t.label).html()+"</li>"},n.prototype.result_do_highlight=function(t){var e,n,i,o,r;if(t.length){if(this.result_clear_highlight(),this.result_highlight=t,this.result_highlight.addClass("highlighted"),i=parseInt(this.search_results.css("maxHeight"),10),r=this.search_results.scrollTop(),o=i+r,n=this.result_highlight.position().top+this.search_results.scrollTop(),e=n+this.result_highlight.outerHeight(),e>=o)return this.search_results.scrollTop(e-i>0?e-i:0);if(n<r)return this.search_results.scrollTop(n)}},n.prototype.result_clear_highlight=function(){return this.result_highlight&&this.result_highlight.removeClass("highlighted"),this.result_highlight=null},n.prototype.results_show=function(){return this.is_multiple&&this.max_selected_options<=this.choices_count()?(this.form_field_jq.trigger("liszt:maxselected",{chosen:this}),!1):(this.container.addClass("chzn-with-drop"),this.form_field_jq.trigger("liszt:showing_dropdown",{chosen:this}),this.results_showing=!0,this.search_field.focus(),this.search_field.val(this.search_field.val()),this.winnow_results())},n.prototype.results_hide=function(){return this.results_showing&&(this.result_clear_highlight(),this.container.removeClass("chzn-with-drop"),this.form_field_jq.trigger("liszt:hiding_dropdown",{chosen:this})),this.results_showing=!1},n.prototype.set_tab_index=function(t){var e;if(this.form_field_jq.attr("tabindex"))return e=this.form_field_jq.attr("tabindex"),this.form_field_jq.attr("tabindex",-1),this.search_field.attr("tabindex",e)},n.prototype.set_label_behavior=function(){var t=this;if(this.form_field_label=this.form_field_jq.parents("label"),!this.form_field_label.length&&this.form_field.id.length&&(this.form_field_label=e("label[for='"+this.form_field.id+"']")),this.form_field_label.length>0)return this.form_field_label.click(function(e){return t.is_multiple?t.container_mousedown(e):t.activate_field()})},n.prototype.show_search_field_default=function(){return this.is_multiple&&this.choices_count()<1&&!this.active_field?(this.search_field.val(this.default_text),this.search_field.addClass("default")):(this.search_field.val(""),this.search_field.removeClass("default"))},n.prototype.search_results_mouseup=function(t){var n;if(n=e(t.target).hasClass("active-result")?e(t.target):e(t.target).parents(".active-result").first(),n.length)return this.result_highlight=n,this.result_select(t),this.search_field.focus()},n.prototype.search_results_mouseover=function(t){var n;if(n=e(t.target).hasClass("active-result")?e(t.target):e(t.target).parents(".active-result").first())return this.result_do_highlight(n)},n.prototype.search_results_mouseout=function(t){if(e(t.target).hasClass("active-result"))return this.result_clear_highlight()},n.prototype.choice_build=function(t){var n,i,o=this;return n=e("<li />",{"class":"search-choice"}).html("<span>"+t.html+"</span>"),t.disabled?n.addClass("search-choice-disabled"):(i=e("<a />",{href:"#","class":"search-choice-close",rel:t.array_index}),i.click(function(t){return o.choice_destroy_link_click(t)}),n.append(i)),this.search_container.before(n)},n.prototype.choice_destroy_link_click=function(t){if(t.preventDefault(),t.stopPropagation(),!this.is_disabled)return this.choice_destroy(e(t.target))},n.prototype.choice_destroy=function(t){if(this.result_deselect(t.attr("rel")))return this.show_search_field_default(),this.is_multiple&&this.choices_count()>0&&this.search_field.val().length<1&&this.results_hide(),t.parents("li").first().remove(),this.search_field_scale()},n.prototype.results_reset=function(){if(this.form_field.options[0].selected=!0,this.selected_option_count=null,this.selected_item.find("span").text(this.default_text),this.is_multiple||this.selected_item.addClass("chzn-default"),this.show_search_field_default(),this.results_reset_cleanup(),this.form_field_jq.trigger("change"),this.active_field)return this.results_hide()},n.prototype.results_reset_cleanup=function(){return this.current_selectedIndex=this.form_field.selectedIndex,this.selected_item.find("abbr").remove()},n.prototype.result_select=function(t){var e,n,i,o;if(this.result_highlight)return e=this.result_highlight,n=e.attr("id"),this.result_clear_highlight(),this.is_multiple&&this.max_selected_options<=this.choices_count()?(this.form_field_jq.trigger("liszt:maxselected",{chosen:this}),!1):(this.is_multiple?e.removeClass("active-result"):(this.search_results.find(".result-selected").removeClass("result-selected"),this.result_single_selected=e,this.selected_item.removeClass("chzn-default")),e.addClass("result-selected"),o=n.substr(n.lastIndexOf("_")+1),i=this.results_data[o],i.selected=!0,this.form_field.options[i.options_index].selected=!0,this.selected_option_count=null,this.is_multiple?this.choice_build(i):(this.selected_item.find("span").first().text(i.text),this.allow_single_deselect&&this.single_deselect_control_build()),(t.metaKey||t.ctrlKey)&&this.is_multiple||this.results_hide(),this.search_field.val(""),(this.is_multiple||this.form_field.selectedIndex!==this.current_selectedIndex)&&this.form_field_jq.trigger("change",{selected:this.form_field.options[i.options_index].value}),this.current_selectedIndex=this.form_field.selectedIndex,this.search_field_scale())},n.prototype.result_activate=function(t,e){return e.disabled?t.addClass("disabled-result"):this.is_multiple&&e.selected?t.addClass("result-selected"):t.addClass("active-result")},n.prototype.result_deactivate=function(t){return t.removeClass("active-result result-selected disabled-result")},n.prototype.result_deselect=function(t){var n,i;return i=this.results_data[t],!this.form_field.options[i.options_index].disabled&&(i.selected=!1,this.form_field.options[i.options_index].selected=!1,this.selected_option_count=null,n=e("#"+this.container_id+"_o_"+t),n.removeClass("result-selected").addClass("active-result").show(),this.result_clear_highlight(),this.winnow_results(),this.form_field_jq.trigger("change",{deselected:this.form_field.options[i.options_index].value}),this.search_field_scale(),!0)},n.prototype.single_deselect_control_build=function(){if(this.allow_single_deselect)return this.selected_item.find("abbr").length||this.selected_item.find("span").first().after('<abbr class="search-choice-close"></abbr>'),this.selected_item.addClass("chzn-single-with-deselect")},n.prototype.winnow_results=function(){var t,n,i,o,r,s,a,l,c,u,p,h,d,f,m,g,v,y;for(this.no_results_clear(),c=0,u=this.search_field.val()===this.default_text?"":e("<div/>").text(e.trim(this.search_field.val())).html(),s=this.search_contains?"":"^",r=new RegExp(s+u.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&"),"i"),d=new RegExp(u.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&"),"i"),y=this.results_data,f=0,g=y.length;f<g;f++)if(n=y[f],!n.empty)if(n.group)e("#"+n.dom_id).css("display","none");else{if(t=!1,l=n.dom_id,a=e("#"+l),r.test(n.html))t=!0,c+=1;else if(this.enable_split_word_search&&(n.html.indexOf(" ")>=0||0===n.html.indexOf("["))&&(o=n.html.replace(/\[|\]/g,"").split(" "),o.length))for(m=0,v=o.length;m<v;m++)i=o[m],r.test(i)&&(t=!0,c+=1);t?(u.length?(p=n.html.search(d),h=n.html.substr(0,p+u.length)+"</em>"+n.html.substr(p+u.length),h=h.substr(0,p)+"<em>"+h.substr(p)):h=n.html,a.html(h),this.result_activate(a,n),null!=n.group_array_index&&e("#"+this.results_data[n.group_array_index].dom_id).css("display","list-item")):(this.result_highlight&&l===this.result_highlight.attr("id")&&this.result_clear_highlight(),this.result_deactivate(a))}return c<1&&u.length?this.no_results(u):this.winnow_results_set_highlight()},n.prototype.winnow_results_set_highlight=function(){var t,e;if(!this.result_highlight&&(e=this.is_multiple?[]:this.search_results.find(".result-selected.active-result"),t=e.length?e.first():this.search_results.find(".active-result").first(),null!=t))return this.result_do_highlight(t)},n.prototype.no_results=function(t){var n;return n=e('<li class="no-results">'+this.results_none_found+' "<span></span>"</li>'),n.find("span").first().html(t),this.search_results.append(n)},n.prototype.no_results_clear=function(){return this.search_results.find(".no-results").remove()},n.prototype.keydown_arrow=function(){var t;return this.results_showing&&this.result_highlight?(t=this.result_highlight.nextAll("li.active-result").first())?this.result_do_highlight(t):void 0:this.results_show()},n.prototype.keyup_arrow=function(){var t;return this.results_showing||this.is_multiple?this.result_highlight?(t=this.result_highlight.prevAll("li.active-result"),t.length?this.result_do_highlight(t.first()):(this.choices_count()>0&&this.results_hide(),this.result_clear_highlight())):void 0:this.results_show()},n.prototype.keydown_backstroke=function(){var t;return this.pending_backstroke?(this.choice_destroy(this.pending_backstroke.find("a").first()),this.clear_backstroke()):(t=this.search_container.siblings("li.search-choice").last(),t.length&&!t.hasClass("search-choice-disabled")?(this.pending_backstroke=t,this.single_backstroke_delete?this.keydown_backstroke():this.pending_backstroke.addClass("search-choice-focus")):void 0)},n.prototype.clear_backstroke=function(){return this.pending_backstroke&&this.pending_backstroke.removeClass("search-choice-focus"),this.pending_backstroke=null},n.prototype.keydown_checker=function(t){var e,n;switch(e=null!=(n=t.which)?n:t.keyCode,this.search_field_scale(),8!==e&&this.pending_backstroke&&this.clear_backstroke(),e){case 8:this.backstroke_length=this.search_field.val().length;break;case 9:this.results_showing&&!this.is_multiple&&this.result_select(t),this.mouse_on_container=!1;break;case 13:t.preventDefault();break;case 38:t.preventDefault(),this.keyup_arrow();break;case 40:t.preventDefault(),this.keydown_arrow()}},n.prototype.search_field_scale=function(){var t,n,i,o,r,s,a,l;if(this.is_multiple){for(n=0,s=0,o="position:absolute; left: -1000px; top: -1000px; display:none;",r=["font-size","font-style","font-weight","font-family","line-height","text-transform","letter-spacing"],a=0,l=r.length;a<l;a++)i=r[a],o+=i+":"+this.search_field.css(i)+";";return t=e("<div />",{style:o}),t.text(this.search_field.val()),e("body").append(t),s=t.width()+25,t.remove(),this.f_width||(this.f_width=this.container.outerWidth()),s>this.f_width-10&&(s=this.f_width-10),this.search_field.css({width:s+"px"})}},n.prototype.generate_random_id=function(){var t;for(t="sel"+this.generate_random_char()+this.generate_random_char()+this.generate_random_char();e("#"+t).length>0;)t+=this.generate_random_char();return t},n}(a),i.Chosen=n}.call(this)}.apply(e,i),// Chosen, a Select Box Enhancer for jQuery and Prototype
// by Patrick Filler for Harvest, http://getharvest.com
// Version 0.11.1
// Full source at https://github.com/harvesthq/chosen
// Copyright (c) 2011 Harvest http://getharvest.com
// MIT License, https://github.com/harvesthq/chosen/blob/master/LICENSE.md
!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(2),n(6),n(61),n(46),n(60),n(67)],o=function(t,e,n,i,o){var r=i.tpl('\t      <input type="radio" name="{{name}}" data-se-name="{{realName}}" value="{{value}}" id="{{id}}">\t      <label for="{{id}}" data-se-for-name="{{realName}}">\t        {{label}}\t        {{#if explain}}\t        <p class="o-form-explain">{{explain}}</p>\t        {{/if}}\t      </label>\t  ');return o.extend({events:{"change :radio":"update",keyup:function(t){n.isSpaceBar(t)?e(t.target).click():n.isEnter(t)&&this.model.trigger("form:save")}},editMode:function(){this.$el.empty(),t.each(this.options.options,function(e,n){var i={id:t.uniqueId("option"),name:this.options.inputId,realName:this.options.name,value:n};t.isObject(e)||(e={label:e}),t.extend(i,e),this.$el.append(r(i))},this);var e=this.getModelValue();return e&&this.$(":radio[value="+e+"]").prop("checked",!0),this.$("input").customInput(),this.model.trigger("form:resize"),this},readMode:function(){return this.editMode(),this.$(":radio").prop("disabled",!0),this},val:function(){return this.$(":radio:checked").val()},focus:function(){return this.$("label:eq(0)").focus()}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(6)],o=function(t){var e=t;t.fn.customInput=function(){return e(this).each(function(){if(e(this).is("[type=checkbox],[type=radio]")){var t=e(this),n=t.siblings('label[for="'+t.attr("id")+'"]:first');n.length||(n=t.closest('label[for="'+t.attr("id")+'"]:first')),t.add(n).wrapAll('<div class="custom-'+t.attr("type")+'"></div>'),n.hover(function(){e(this).addClass("hover")},function(){e(this).removeClass("hover")}),t.bind("updateState",function(){t.is(":checked")?n.addClass("checked"):n.removeClass("checked checkedHover checkedFocus")}).trigger("updateState").click(function(){e('input[name="'+e(this).attr("name")+'"]').trigger("updateState")}).focus(function(){n.addClass("focus"),t.is(":checked")&&e(this).addClass("checkedFocus")}).blur(function(){n.removeClass("focus checkedFocus")})}})}}.apply(e,i),/**
	 * --------------------------------------------------------------------
	 * jQuery customInput plugin
	 * Author: Maggie Costello Wachs maggie@filamentgroup.com, Scott Jehl, scott@filamentgroup.com
	 * Copyright (c) 2009 Filament Group
	 * licensed under MIT (filamentgroup.com/examples/mit-license.txt)
	 * --------------------------------------------------------------------
	*/
!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(2),n(61),n(46),n(60),n(67)],o=function(t,e,n,i){var o=n.tpl('\t    <input type="checkbox" name="{{name}}" id="{{inputId}}"/>\t    <label for="{{inputId}}" data-se-for-name="{{name}}">{{placeholder}}</label>\t  ');return i.extend({template:o,events:{"change :checkbox":"update",keyup:function(t){e.isSpaceBar(t)?this.$(":checkbox").click():e.isEnter(t)&&this.model.trigger("form:save")}},editMode:function(){var e=t.resultCtx(this.options,"placeholder",this);""===e?e=t.resultCtx(this.options,"label",this):e===!1&&(e=""),this.$el.html(this.template(t.extend(t.omit(this.options,"placeholder"),{placeholder:e})));var n=this.$(":checkbox");return n.prop("checked",this.getModelValue()||!1),this.$("input").customInput(),this.model.trigger("form:resize"),this},readMode:function(){return this.editMode(),this.$(":checkbox").prop("disabled",!0),this},val:function(){return this.$(":checkbox").prop("checked")},focus:function(){return this.$(":checkbox").focus()}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e){},function(t,e){},function(t,e){},function(t,e){},function(t,e){},function(t,e){},function(t,e){},function(t,e){},function(t,e){},function(t,e){},function(t,e,n){var i,o;i=[n(2),n(60),n(45),n(80)],o=function(t,e,n,i){function o(e){return t.filter(e||[],function(e){return!t.contains(["label","button","select"],e.type)}).length}function r(e){return i.create(t.defaults({getReadModeString:t.constant(" "),focus:t.noop},t.pick(e,"click","title","href")))}var s=e.extend({tagName:"span",initialize:function(){this.$el.text(this.getModelValue()),"text"!==this.options.display?this.$el.addClass("input-group"):this.$el.addClass("input-group-text")},editMode:function(){this.toggle(!0)},readMode:function(){this.toggle(!1)},getModelValue:function(){return this.options.label},toggle:function(t){this.$el.toggleClass("o-form-label-inline",t),this.$el.toggleClass("o-form-control",!t)},focus:t.noop}),a=n.extend({className:function(){var t="o-form-input-group";return o(this.options.params&&this.options.params.inputs)>1&&(t+=" o-form-input-group-2"),t},initialize:function(){var e=t.isUndefined(this.options.params)?"group":this.options.params.display;t.each(this.options.params&&this.options.params.inputs,function(n){switch(n.type){case"label":n.display=e,this.add(s,{options:n});break;case"button":this.add(r(n));break;default:n=t.defaults({model:this.model,params:t.defaults({autoWidth:!0},n.params||{})},n),this.add(this.options.params.create(n))}},this)},focus:function(){this.first().focus()}});return e.extend({constructor:function(t){this.inputGroupView=new a(t),e.apply(this,arguments)},editMode:function(){this.inputGroupView.remove(),this.inputGroupView=new a(this.options),this.$el.html(this.inputGroupView.render().el)},toStringValue:function(){var e=this.inputGroupView.map(function(t){return t.getReadModeString()});return e.length&&t.every(e)?e.join(" "):" "},focus:function(){this.inputGroupView.focus()}},{LabelInput:s,InputGroupView:a})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(2),n(81)],o=function(t,e){function n(e){var n=t.extend(e.click?{click:e.click}:{},e.events||{}),i={};return t.each(n,function(t,n){i[n]=function(n){e.href||(n.preventDefault(),n.stopPropagation()),t.apply(this,arguments)}}),i}return{create:function(i){return i=t.clone(i),e.extend(t.extend(i,{events:n(i)}))}}}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(2),n(45)],o=function(t,e){var n={click:function(t){t.preventDefault(),t.stopPropagation()}};return e.extend({tagName:"a",template:'{{#if icon}}<span class="icon {{icon}}"></span>{{/if}}{{#if title}}{{title}}{{/if}}',constructor:function(t){this.options=t||{};var n=this.getTemplateData();this.disabled=!1,e.apply(this,arguments),this.$el.addClass("link-button"),n.icon&&(this.$el.addClass("link-button-icon"),n.title||this.$el.addClass("icon-only"))},getTemplateData:function(){return{href:this.__getAttribute("href"),title:this.__getAttribute("title"),icon:this.__getAttribute("icon")}},render:function(){e.prototype.render.apply(this,arguments);var t=this.getTemplateData();return this.$el.attr("href",t.href||"#"),this},__getAttribute:function(e,n){var i=t.resultCtx(this.options,e,this);return t.isUndefined(i)&&(i=t.result(this,e)),t.isUndefined(i)?n:i},enable:function(){this.toggle(!0)},disable:function(){this.toggle(!1)},toggle:function(e){this.disabled=!e,this.$el.toggleClass("link-button-disabled btn-disabled disabled",this.disabled),t.defer(t.bind(function(){this.delegateEvents(this.disabled?n:null)},this))}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e){},function(t,e,n){var i,o;i=[n(2),n(46),n(45),n(84)],o=function(t,e,n){return n.extend({className:"okta-form-label o-form-label",attributes:{"data-se":"o-form-label"},constructor:function(i){t.defaults(i,{inputId:i.id}),delete i.id,n.apply(this,arguments);var o;o=this._isLabelView(i.label)?'<label for="{{inputId}}"></label>':t.contains(["radio","checkbox"],i.type)||!i.label?"{{label}}":'<label for="{{inputId}}">{{label}}</label>',i.sublabel&&(o+='<span class="o-form-explain">{{sublabel}}</span>'),i.tooltip&&(t.isStr", "base64"));
  res.write(new Buffer("ing(i.tooltip)&&(i.tooltip={text:i.tooltip}),o+='<span class="o-form-tooltip icon-16 icon-only form-help-16" title="{{tooltip.text}}"></span>'),this.template=e.tpl(o)},getTemplateData:function(){var e={label:""};return t.each(["inputId","label","sublabel","tooltip"],function(n){e[n]=t.resultCtx(this.options,n,this)},this),e},_isLabelView:function(e){return!t.isUndefined(e)&&e instanceof n},postRender:function(){var e=this.getTemplateData();this._isLabelView(e.label)&&this.add(e.label,"label"),e.tooltip&&this.$(".o-form-tooltip").qtip(t.extend({style:{classes:"qtip-custom qtip-shadow"},position:{my:"bottom left",at:"top center"},hide:{fixed:!0},show:{delay:0}},e.tooltip.options))}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o,r;/*
	 * qTip2 - Pretty powerful tooltips - v3.0.3
	 * http://qtip2.com
	 *
	 * Copyright (c) 2016 
	 * Released under the MIT licenses
	 * http://jquery.org/license
	 *
	 * Date: Wed May 11 2016 10:31 GMT+0100+0100
	 * Plugins: tips modal viewport svg imagemap ie6
	 * Styles: core basic css3
	 */
!function(s,a,l){!function(s){"use strict";o=[n(6)],i=s,r="function"==typeof i?i.apply(e,o):i,!(r!==l&&(t.exports=r))}(function(t){"use strict";function e(e,n,i,o){this.id=i,this.target=e,this.tooltip=N,this.elements={target:e},this._id=V+"-"+i,this.timers={img:{}},this.options=n,this.plugins={},this.cache={event:{},target:t(),disabled:R,attr:o,onTooltip:R,lastClass:""},this.rendered=this.destroyed=this.disabled=this.waiting=this.hiddenDuringWait=this.positioning=this.triggering=R}function n(e){return e===N||"object"!==t.type(e)}function i(e){return!(t.isFunction(e)||e&&e.attr||e.length||"object"===t.type(e)&&(e.jquery||e.then))}function o(e){var o,r,s,a;return n(e)?R:(n(e.metadata)&&(e.metadata={type:e.metadata}),"content"in e&&(o=e.content,n(o)||o.jquery||o.done?(r=i(o)?R:o,o=e.content={text:r}):r=o.text,"ajax"in o&&(s=o.ajax,a=s&&s.once!==R,delete o.ajax,o.text=function(e,n){var i=r||t(this).attr(n.options.content.attr)||"Loading...",o=t.ajax(t.extend({},s,{context:n})).then(s.success,N,s.error).then(function(t){return t&&a&&n.set("content.text",t),t},function(t,e,i){n.destroyed||0===t.status||n.set("content.text",e+": "+i)});return a?i:(n.set("content.text",i),o)}),"title"in o&&(t.isPlainObject(o.title)&&(o.button=o.title.button,o.title=o.title.text),i(o.title||R)&&(o.title=R))),"position"in e&&n(e.position)&&(e.position={my:e.position,at:e.position}),"show"in e&&n(e.show)&&(e.show=e.show.jquery?{target:e.show}:e.show===O?{ready:O}:{event:e.show}),"hide"in e&&n(e.hide)&&(e.hide=e.hide.jquery?{target:e.hide}:{event:e.hide}),"style"in e&&n(e.style)&&(e.style={classes:e.style}),t.each(H,function(){this.sanitize&&this.sanitize(e)}),e)}function r(t,e){for(var n,i=0,o=t,r=e.split(".");o=o[r[i++]];)i<r.length&&(n=o);return[n||t,r.pop()]}function c(t,e){var n,i,o;for(n in this.checks)if(this.checks.hasOwnProperty(n))for(i in this.checks[n])this.checks[n].hasOwnProperty(i)&&(o=new RegExp(i,"i").exec(t))&&(e.push(o),("builtin"===n||this.plugins[n])&&this.checks[n][i].apply(this.plugins[n]||this,e))}function u(t){return K.concat("").join(t?"-"+t+" ":" ")}function p(e,n){return n>0?setTimeout(t.proxy(e,this),n):void e.call(this)}function h(t){this.tooltip.hasClass(tt)||(clearTimeout(this.timers.show),clearTimeout(this.timers.hide),this.timers.show=p.call(this,function(){this.toggle(O,t)},this.options.show.delay))}function d(e){if(!this.tooltip.hasClass(tt)&&!this.destroyed){var n=t(e.relatedTarget),i=n.closest(G)[0]===this.tooltip[0],o=n[0]===this.options.show.target[0];if(clearTimeout(this.timers.show),clearTimeout(this.timers.hide),this!==n[0]&&"mouse"===this.options.position.target&&i||this.options.hide.fixed&&/mouse(out|leave|move)/.test(e.type)&&(i||o))try{e.preventDefault(),e.stopImmediatePropagation()}catch(r){}else this.timers.hide=p.call(this,function(){this.toggle(R,e)},this.options.hide.delay,this)}}function f(t){!this.tooltip.hasClass(tt)&&this.options.hide.inactive&&(clearTimeout(this.timers.inactive),this.timers.inactive=p.call(this,function(){this.hide(t)},this.options.hide.inactive))}function m(t){this.rendered&&this.tooltip[0].offsetWidth>0&&this.reposition(t)}function g(e,n,i){t(a.body).delegate(e,(n.split?n:n.join("."+V+" "))+"."+V,function(){var e=x.api[t.attr(this,z)];e&&!e.disabled&&i.apply(e,arguments)})}function v(n,i,r){var s,l,c,u,p,h=t(a.body),d=n[0]===a?h:n,f=n.metadata?n.metadata(r.metadata):N,m="html5"===r.metadata.type&&f?f[r.metadata.name]:N,g=n.data(r.metadata.name||"qtipopts");try{g="string"==typeof g?t.parseJSON(g):g}catch(v){}if(u=t.extend(O,{},x.defaults,r,"object"==typeof g?o(g):N,o(m||f)),l=u.position,u.id=i,"boolean"==typeof u.content.text){if(c=n.attr(u.content.attr),u.content.attr===R||!c)return R;u.content.text=c}if(l.container.length||(l.container=h),l.target===R&&(l.target=d),u.show.target===R&&(u.show.target=d),u.show.solo===O&&(u.show.solo=l.container.closest("body")),u.hide.target===R&&(u.hide.target=d),u.position.viewport===O&&(u.position.viewport=l.container),l.container=l.container.eq(0),l.at=new T(l.at,O),l.my=new T(l.my),n.data(V))if(u.overwrite)n.qtip("destroy",!0);else if(u.overwrite===R)return R;return n.attr(W,i),u.suppress&&(p=n.attr("title"))&&n.removeAttr("title").attr(nt,p).attr("title",""),s=new e(n,u,i,(!!c)),n.data(V,s),s}function y(t){return t.charAt(0).toUpperCase()+t.slice(1)}function _(t,e){var n,i,o=e.charAt(0).toUpperCase()+e.slice(1),r=(e+" "+wt.join(o+" ")+o).split(" "),s=0;if(bt[e])return t.css(bt[e]);for(;n=r[s++];)if((i=t.css(n))!==l)return bt[e]=n,i}function b(t,e){return Math.ceil(parseFloat(_(t,e)))}function w(t,e){this._ns="tip",this.options=e,this.offset=e.offset,this.size=[e.width,e.height],this.qtip=t,this.init(t)}function S(t,e){this.options=e,this._ns="-modal",this.qtip=t,this.init(t)}function k(t){this._ns="ie6",this.qtip=t,this.init(t)}var x,E,T,C,A,O=!0,R=!1,N=null,I="x",P="y",L="width",M="height",D="top",U="left",F="bottom",B="right",j="center",q="flipinvert",$="shift",H={},V="qtip",W="data-hasqtip",z="data-qtip-id",K=["ui-widget","ui-tooltip"],G="."+V,Y="click dblclick mousedown mouseup mousemove mouseleave mouseenter".split(" "),J=V+"-fixed",Q=V+"-default",X=V+"-focus",Z=V+"-hover",tt=V+"-disabled",et="_replacedByqTip",nt="oldtitle",it={ie:function(){var t,e;for(t=4,e=a.createElement("div");(e.innerHTML="<!--[if gt IE "+t+"]><i></i><![endif]-->")&&e.getElementsByTagName("i")[0];t+=1);return t>4?t:NaN}(),iOS:parseFloat((""+(/CPU.*OS ([0-9_]{1,5})|(CPU like).*AppleWebKit.*Mobile/i.exec(navigator.userAgent)||[0,""])[1]).replace("undefined","3_2").replace("_",".").replace("_",""))||R};E=e.prototype,E._when=function(e){return t.when.apply(t,e)},E.render=function(e){if(this.rendered||this.destroyed)return this;var n=this,i=this.options,o=this.cache,r=this.elements,s=i.content.text,a=i.content.title,l=i.content.button,c=i.position,u=[];return t.attr(this.target[0],"aria-describedby",this._id),o.posClass=this._createPosClass((this.position={my:c.my,at:c.at}).my),this.tooltip=r.tooltip=t("<div/>",{id:this._id,"class":[V,Q,i.style.classes,o.posClass].join(" "),width:i.style.width||"",height:i.style.height||"",tracking:"mouse"===c.target&&c.adjust.mouse,role:"alert","aria-live":"polite","aria-atomic":R,"aria-describedby":this._id+"-content","aria-hidden":O}).toggleClass(tt,this.disabled).attr(z,this.id).data(V,this).appendTo(c.container).append(r.content=t("<div />",{"class":V+"-content",id:this._id+"-content","aria-atomic":O})),this.rendered=-1,this.positioning=O,a&&(this._createTitle(),t.isFunction(a)||u.push(this._updateTitle(a,R))),l&&this._createButton(),t.isFunction(s)||u.push(this._updateContent(s,R)),this.rendered=O,this._setWidget(),t.each(H,function(t){var e;"render"===this.initialize&&(e=this(n))&&(n.plugins[t]=e)}),this._unassignEvents(),this._assignEvents(),this._when(u).then(function(){n._trigger("render"),n.positioning=R,n.hiddenDuringWait||!i.show.ready&&!e||n.toggle(O,o.event,R),n.hiddenDuringWait=R}),x.api[this.id]=this,this},E.destroy=function(e){function n(){if(!this.destroyed){this.destroyed=O;var e,n=this.target,i=n.attr(nt);this.rendered&&this.tooltip.stop(1,0).find("*").remove().end().remove(),t.each(this.plugins,function(){this.destroy&&this.destroy()});for(e in this.timers)this.timers.hasOwnProperty(e)&&clearTimeout(this.timers[e]);n.removeData(V).removeAttr(z).removeAttr(W).removeAttr("aria-describedby"),this.options.suppress&&i&&n.attr("title",i).removeAttr(nt),this._unassignEvents(),this.options=this.elements=this.cache=this.timers=this.plugins=this.mouse=N,delete x.api[this.id]}}return this.destroyed?this.target:(e===O&&"hide"!==this.triggering||!this.rendered?n.call(this):(this.tooltip.one("tooltiphidden",t.proxy(n,this)),!this.triggering&&this.hide()),this.target)},C=E.checks={builtin:{"^id$":function(e,n,i,o){var r=i===O?x.nextid:i,s=V+"-"+r;r!==R&&r.length>0&&!t("#"+s).length?(this._id=s,this.rendered&&(this.tooltip[0].id=this._id,this.elements.content[0].id=this._id+"-content",this.elements.title[0].id=this._id+"-title")):e[n]=o},"^prerender":function(t,e,n){n&&!this.rendered&&this.render(this.options.show.ready)},"^content.text$":function(t,e,n){this._updateContent(n)},"^content.attr$":function(t,e,n,i){this.options.content.text===this.target.attr(i)&&this._updateContent(this.target.attr(n))},"^content.title$":function(t,e,n){return n?(n&&!this.elements.title&&this._createTitle(),void this._updateTitle(n)):this._removeTitle()},"^content.button$":function(t,e,n){this._updateButton(n)},"^content.title.(text|button)$":function(t,e,n){this.set("content."+e,n)},"^position.(my|at)$":function(t,e,n){"string"==typeof n&&(this.position[e]=t[e]=new T(n,"at"===e))},"^position.container$":function(t,e,n){this.rendered&&this.tooltip.appendTo(n)},"^show.ready$":function(t,e,n){n&&(!this.rendered&&this.render(O)||this.toggle(O))},"^style.classes$":function(t,e,n,i){this.rendered&&this.tooltip.removeClass(i).addClass(n)},"^style.(width|height)":function(t,e,n){this.rendered&&this.tooltip.css(e,n)},"^style.widget|content.title":function(){this.rendered&&this._setWidget()},"^style.def":function(t,e,n){this.rendered&&this.tooltip.toggleClass(Q,!!n)},"^events.(render|show|move|hide|focus|blur)$":function(e,n,i){this.rendered&&this.tooltip[(t.isFunction(i)?"":"un")+"bind"]("tooltip"+n,i)},"^(show|hide|position).(event|target|fixed|inactive|leave|distance|viewport|adjust)":function(){if(this.rendered){var t=this.options.position;this.tooltip.attr("tracking","mouse"===t.target&&t.adjust.mouse),this._unassignEvents(),this._assignEvents()}}}},E.get=function(t){if(this.destroyed)return this;var e=r(this.options,t.toLowerCase()),n=e[0][e[1]];return n.precedance?n.string():n};var ot=/^position\.(my|at|adjust|target|container|viewport)|style|content|show\.ready/i,rt=/^prerender|show\.ready/i;E.set=function(e,n){if(this.destroyed)return this;var i,s=this.rendered,a=R,l=this.options;return"string"==typeof e?(i=e,e={},e[i]=n):e=t.extend({},e),t.each(e,function(n,i){if(s&&rt.test(n))return void delete e[n];var o,c=r(l,n.toLowerCase());o=c[0][c[1]],c[0][c[1]]=i&&i.nodeType?t(i):i,a=ot.test(n)||a,e[n]=[c[0],c[1],i,o]}),o(l),this.positioning=O,t.each(e,t.proxy(c,this)),this.positioning=R,this.rendered&&this.tooltip[0].offsetWidth>0&&a&&this.reposition("mouse"===l.position.target?N:this.cache.event),this},E._update=function(e,n){var i=this,o=this.cache;return this.rendered&&e?(t.isFunction(e)&&(e=e.call(this.elements.target,o.event,this)||""),t.isFunction(e.then)?(o.waiting=O,e.then(function(t){return o.waiting=R,i._update(t,n)},N,function(t){return i._update(t,n)})):e===R||!e&&""!==e?R:(e.jquery&&e.length>0?n.empty().append(e.css({display:"block",visibility:"visible"})):n.html(e),this._waitForContent(n).then(function(t){i.rendered&&i.tooltip[0].offsetWidth>0&&i.reposition(o.event,!t.length)}))):R},E._waitForContent=function(e){var n=this.cache;return n.waiting=O,(t.fn.imagesLoaded?e.imagesLoaded():(new t.Deferred).resolve([])).done(function(){n.waiting=R}).promise()},E._updateContent=function(t,e){this._update(t,this.elements.content,e)},E._updateTitle=function(t,e){this._update(t,this.elements.title,e)===R&&this._removeTitle(R)},E._createTitle=function(){var e=this.elements,n=this._id+"-title";e.titlebar&&this._removeTitle(),e.titlebar=t("<div />",{"class":V+"-titlebar "+(this.options.style.widget?u("header"):"")}).append(e.title=t("<div />",{id:n,"class":V+"-title","aria-atomic":O})).insertBefore(e.content).delegate(".qtip-close","mousedown keydown mouseup keyup mouseout",function(e){t(this).toggleClass("ui-state-active ui-state-focus","down"===e.type.substr(-4))}).delegate(".qtip-close","mouseover mouseout",function(e){t(this).toggleClass("ui-state-hover","mouseover"===e.type)}),this.options.content.button&&this._createButton()},E._removeTitle=function(t){var e=this.elements;e.title&&(e.titlebar.remove(),e.titlebar=e.title=e.button=N,t!==R&&this.reposition())},E._createPosClass=function(t){return V+"-pos-"+(t||this.options.position.my).abbrev()},E.reposition=function(e,n){if(!this.rendered||this.positioning||this.destroyed)return this;this.positioning=O;var i,o,r,l,c=this.cache,u=this.tooltip,p=this.options.position,h=p.target,d=p.my,f=p.at,m=p.viewport,g=p.container,v=p.adjust,y=v.method.split(" "),_=u.outerWidth(R),b=u.outerHeight(R),w=0,S=0,k=u.css("position"),x={left:0,top:0},E=u[0].offsetWidth>0,T=e&&"scroll"===e.type,C=t(s),A=g[0].ownerDocument,N=this.mouse;if(t.isArray(h)&&2===h.length)f={x:U,y:D},x={left:h[0],top:h[1]};else if("mouse"===h)f={x:U,y:D},(!v.mouse||this.options.hide.distance)&&c.origin&&c.origin.pageX?e=c.origin:!e||e&&("resize"===e.type||"scroll"===e.type)?e=c.event:N&&N.pageX&&(e=N),"static"!==k&&(x=g.offset()),A.body.offsetWidth!==(s.innerWidth||A.documentElement.clientWidth)&&(o=t(a.body).offset()),x={left:e.pageX-x.left+(o&&o.left||0),top:e.pageY-x.top+(o&&o.top||0)},v.mouse&&T&&N&&(x.left-=(N.scrollX||0)-C.scrollLeft(),x.top-=(N.scrollY||0)-C.scrollTop());else{if("event"===h?e&&e.target&&"scroll"!==e.type&&"resize"!==e.type?c.target=t(e.target):e.target||(c.target=this.elements.target):"event"!==h&&(c.target=t(h.jquery?h:this.elements.target)),h=c.target,h=t(h).eq(0),0===h.length)return this;h[0]===a||h[0]===s?(w=it.iOS?s.innerWidth:h.width(),S=it.iOS?s.innerHeight:h.height(),h[0]===s&&(x={top:(m||h).scrollTop(),left:(m||h).scrollLeft()})):H.imagemap&&h.is("area")?i=H.imagemap(this,h,f,H.viewport?y:R):H.svg&&h&&h[0].ownerSVGElement?i=H.svg(this,h,f,H.viewport?y:R):(w=h.outerWidth(R),S=h.outerHeight(R),x=h.offset()),i&&(w=i.width,S=i.height,o=i.offset,x=i.position),x=this.reposition.offset(h,x,g),(it.iOS>3.1&&it.iOS<4.1||it.iOS>=4.3&&it.iOS<4.33||!it.iOS&&"fixed"===k)&&(x.left-=C.scrollLeft(),x.top-=C.scrollTop()),(!i||i&&i.adjustable!==R)&&(x.left+=f.x===B?w:f.x===j?w/2:0,x.top+=f.y===F?S:f.y===j?S/2:0)}return x.left+=v.x+(d.x===B?-_:d.x===j?-_/2:0),x.top+=v.y+(d.y===F?-b:d.y===j?-b/2:0),H.viewport?(r=x.adjusted=H.viewport(this,x,p,w,S,_,b),o&&r.left&&(x.left+=o.left),o&&r.top&&(x.top+=o.top),r.my&&(this.position.my=r.my)):x.adjusted={left:0,top:0},c.posClass!==(l=this._createPosClass(this.position.my))&&(c.posClass=l,u.removeClass(c.posClass).addClass(l)),this._trigger("move",[x,m.elem||m],e)?(delete x.adjusted,n===R||!E||isNaN(x.left)||isNaN(x.top)||"mouse"===h||!t.isFunction(p.effect)?u.css(x):t.isFunction(p.effect)&&(p.effect.call(u,this,t.extend({},x)),u.queue(function(e){t(this).css({opacity:"",height:""}),it.ie&&this.style.removeAttribute("filter"),e()})),this.positioning=R,this):this},E.reposition.offset=function(e,n,i){function o(t,e){n.left+=e*t.scrollLeft(),n.top+=e*t.scrollTop()}if(!i[0])return n;var r,s,l,c,u=t(e[0].ownerDocument),p=!!it.ie&&"CSS1Compat"!==a.compatMode,h=i[0];do"static"!==(s=t.css(h,"position"))&&("fixed"===s?(l=h.getBoundingClientRect(),o(u,-1)):(l=t(h).position(),l.left+=parseFloat(t.css(h,"borderLeftWidth"))||0,l.top+=parseFloat(t.css(h,"borderTopWidth"))||0),n.left-=l.left+(parseFloat(t.css(h,"marginLeft"))||0),n.top-=l.top+(parseFloat(t.css(h,"marginTop"))||0),r||"hidden"===(c=t.css(h,"overflow"))||"visible"===c||(r=t(h)));while(h=h.offsetParent);return r&&(r[0]!==u[0]||p)&&o(r,1),n};var st=(T=E.reposition.Corner=function(t,e){t=(""+t).replace(/([A-Z])/," $1").replace(/middle/gi,j).toLowerCase(),this.x=(t.match(/left|right/i)||t.match(/center/)||["inherit"])[0].toLowerCase(),this.y=(t.match(/top|bottom|center/i)||["inherit"])[0].toLowerCase(),this.forceY=!!e;var n=t.charAt(0);this.precedance="t"===n||"b"===n?P:I}).prototype;st.invert=function(t,e){this[t]=this[t]===U?B:this[t]===B?U:e||this[t]},st.string=function(t){var e=this.x,n=this.y,i=e!==n?"center"===e||"center"!==n&&(this.precedance===P||this.forceY)?[n,e]:[e,n]:[e];return t!==!1?i.join(" "):i},st.abbrev=function(){var t=this.string(!1);return t[0].charAt(0)+(t[1]&&t[1].charAt(0)||"")},st.clone=function(){return new T(this.string(),this.forceY)},E.toggle=function(e,n){var i=this.cache,o=this.options,r=this.tooltip;if(n){if(/over|enter/.test(n.type)&&i.event&&/out|leave/.test(i.event.type)&&o.show.target.add(n.target).length===o.show.target.length&&r.has(n.relatedTarget).length)return this;i.event=t.event.fix(n)}if(this.waiting&&!e&&(this.hiddenDuringWait=O),!this.rendered)return e?this.render(1):this;if(this.destroyed||this.disabled)return this;var s,l,c,u=e?"show":"hide",p=this.options[u],h=this.options.position,d=this.options.content,f=this.tooltip.css("width"),m=this.tooltip.is(":visible"),g=e||1===p.target.length,v=!n||p.target.length<2||i.target[0]===n.target;return(typeof e).search("boolean|number")&&(e=!m),s=!r.is(":animated")&&m===e&&v,l=s?N:!!this._trigger(u,[90]),this.destroyed?this:(l!==R&&e&&this.focus(n),!l||s?this:(t.attr(r[0],"aria-hidden",!e),e?(this.mouse&&(i.origin=t.event.fix(this.mouse)),t.isFunction(d.text)&&this._updateContent(d.text,R),t.isFunction(d.title)&&this._updateTitle(d.title,R),!A&&"mouse"===h.target&&h.adjust.mouse&&(t(a).bind("mousemove."+V,this._storeMouse),A=O),f||r.css("width",r.outerWidth(R)),this.reposition(n,arguments[2]),f||r.css("width",""),p.solo&&("string"==typeof p.solo?t(p.solo):t(G,p.solo)).not(r).not(p.target).qtip("hide",new t.Event("tooltipsolo"))):(clearTimeout(this.timers.show),delete i.origin,A&&!t(G+'[tracking="true"]:visible',p.solo).not(r).length&&(t(a).unbind("mousemove."+V),A=R),this.blur(n)),c=t.proxy(function(){e?(it.ie&&r[0].style.removeAttribute("filter"),r.css("overflow",""),"string"==typeof p.autofocus&&t(this.options.show.autofocus,r).focus(),this.options.show.target.trigger("qtip-"+this.id+"-inactive")):r.css({display:"",visibility:"",opacity:"",left:"",top:""}),this._trigger(e?"visible":"hidden")},this),p.effect===R||g===R?(r[u](),c()):t.isFunction(p.effect)?(r.stop(1,1),p.effect.call(r,this),r.queue("fx",function(t){c(),t()})):r.fadeTo(90,e?1:0,c),e&&p.target.trigger("qtip-"+this.id+"-inactive"),this))},E.show=function(t){return this.toggle(O,t)},E.hide=function(t){return this.toggle(R,t)},E.focus=function(e){if(!this.rendered||this.destroyed)return this;var n=t(G),i=this.tooltip,o=parseInt(i[0].style.zIndex,10),r=x.zindex+n.length;return i.hasClass(X)||this._trigger("focus",[r],e)&&(o!==r&&(n.each(function(){this.style.zIndex>o&&(this.style.zIndex=this.style.zIndex-1)}),n.filter("."+X).qtip("blur",e)),i.addClass(X)[0].style.zIndex=r),this},E.blur=function(t){return!this.rendered||this.destroyed?this:(this.tooltip.removeClass(X),this._trigger("blur",[this.tooltip.css("zIndex")],t),this)},E.disable=function(t){return this.destroyed?this:("toggle"===t?t=!(this.rendered?this.tooltip.hasClass(tt):this.disabled):"boolean"!=typeof t&&(t=O),this.rendered&&this.tooltip.toggleClass(tt,t).attr("aria-disabled",t),this.disabled=!!t,this)},E.enable=function(){return this.disable(R)},E._createButton=function(){var e=this,n=this.elements,i=n.tooltip,o=this.options.content.button,r="string"==typeof o,s=r?o:"Close tooltip";n.button&&n.button.remove(),o.jquery?n.button=o:n.button=t("<a />",{"class":"qtip-close "+(this.options.style.widget?"":V+"-icon"),title:s,"aria-label":s}).prepend(t("<span />",{"class":"ui-icon ui-icon-close",html:"&times;"})),n.button.appendTo(n.titlebar||i).attr("role","button").click(function(t){return i.hasClass(tt)||e.hide(t),R})},E._updateButton=function(t){if(!this.rendered)return R;var e=this.elements.button;t?this._createButton():e.remove()},E._setWidget=function(){var t=this.options.style.widget,e=this.elements,n=e.tooltip,i=n.hasClass(tt);n.removeClass(tt),tt=t?"ui-state-disabled":"qtip-disabled",n.toggleClass(tt,i),n.toggleClass("ui-helper-reset "+u(),t).toggleClass(Q,this.options.style.def&&!t),e.content&&e.content.toggleClass(u("content"),t),e.titlebar&&e.titlebar.toggleClass(u("header"),t),e.button&&e.button.toggleClass(V+"-icon",!t)},E._storeMouse=function(e){return(this.mouse=t.event.fix(e)).type="mousemove",this},E._bind=function(e,n,i,o,r){if(e&&i&&n.length){var s="."+this._id+(o?"-"+o:"");return t(e).bind((n.split?n:n.join(s+" "))+s,t.proxy(i,r||this)),this}},E._unbind=function(e,n){return e&&t(e).unbind("."+this._id+(n?"-"+n:"")),this},E._trigger=function(e,n,i){var o=new t.Event("tooltip"+e);return o.originalEvent=i&&t.extend({},i)||this.cache.event||N,this.triggering=e,this.tooltip.trigger(o,[this].concat(n||[])),this.triggering=R,!o.isDefaultPrevented()},E._bindEvents=function(e,n,i,o,r,s){var a=i.filter(o).add(o.filter(i)),l=[];a.length&&(t.each(n,function(n,i){var o=t.inArray(i,e);o>-1&&l.push(e.splice(o,1)[0])}),l.length&&(this._bind(a,l,function(t){var e=!!this.rendered&&this.tooltip[0].offsetWidth>0;(e?s:r).call(this,t)}),i=i.not(a),o=o.not(a))),this._bind(i,e,r),this._bind(o,n,s)},E._assignInitialEvents=function(e){function n(e){return this.disabled||this.destroyed?R:(this.cache.event=e&&t.event.fix(e),this.cache.target=e&&t(e.target),clearTimeout(this.timers.show),void(this.timers.show=p.call(this,function(){this.render("object"==typeof e||i.show.ready)},i.prerender?0:i.show.delay)))}var i=this.options,o=i.show.target,r=i.hide.target,s=i.show.event?t.trim(""+i.show.event).split(" "):[],a=i.hide.event?t.trim(""+i.hide.event).split(" "):[];this._bind(this.elements.target,["remove","removeqtip"],function(){this.destroy(!0)},"destroy"),/mouse(over|enter)/i.test(i.show.event)&&!/mouse(out|leave)/i.test(i.hide.event)&&a.push("mouseleave"),this._bind(o,"mousemove",function(t){this._storeMouse(t),this.cache.onTarget=O}),this._bindEvents(s,a,o,r,n,function(){return this.timers?void clearTimeout(this.timers.show):R}),(i.show.ready||i.prerender)&&n.call(this,e)},E._assignEvents=function(){var e=this,n=this.options,i=n.position,o=this.tooltip,r=n.show.target,l=n.hide.target,c=i.container,u=i.viewport,p=t(a),g=t(s),v=n.show.event?t.trim(""+n.show.event).split(" "):[],y=n.hide.event?t.trim(""+n.hide.event).split(" "):[];t.each(n.events,function(t,n){e._bind(o,"toggle"===t?["tooltipshow","tooltiphide"]:["tooltip"+t],n,null,o)}),/mouse(out|leave)/i.test(n.hide.event)&&"window"===n.hide.leave&&this._bind(p,["mouseout","blur"],function(t){/select|option/.test(t.target.nodeName)||t.relatedTarget||this.hide(t)}),n.hide.fixed?l=l.add(o.addClass(J)):/mouse(over|enter)/i.test(n.show.event)&&this._bind(l,"mouseleave",function(){clearTimeout(this.timers.show)}),(""+n.hide.event).indexOf("unfocus")>-1&&this._bind(c.closest("html"),["mousedown","touchstart"],function(e){var n=t(e.target),i=this.rendered&&!this.tooltip.hasClass(tt)&&this.tooltip[0].offsetWidth>0,o=n.parents(G).filter(this.tooltip[0]).length>0;n[0]===this.target[0]||n[0]===this.tooltip[0]||o||this.target.has(n[0]).length||!i||this.hide(e)}),"number"==typeof n.hide.inactive&&(this._bind(r,"qtip-"+this.id+"-inactive",f,"inactive"),this._bind(l.add(o),x.inactiveEvents,f)),this._bindEvents(v,y,r,l,h,d),this._bind(r.add(o),"mousemove",function(t){if("number"==typeof n.hide.distance){var e=this.cache.origin||{},i=this.options.hide.distance,o=Math.abs;(o(t.pageX-e.pageX)>=i||o(t.pageY-e.pageY)>=i)&&this.hide(t)}this._storeMouse(t)}),"mouse"===i.target&&i.adjust.mouse&&(n.hide.event&&this._bind(r,["mouseenter","mouseleave"],function(t){return this.cache?void(this.cache.onTarget="mouseenter"===t.type):R}),this._bind(p,"mousemove",function(t){this.rendered&&this.cache.onTarget&&!this.tooltip.hasClass(tt)&&this.tooltip[0].offsetWidth>0&&this.reposition(t)})),(i.adjust.resize||u.length)&&this._bind(t.event.special.resize?u:g,"resize",m),i.adjust.scroll&&this._bind(g.add(i.container),"scroll",m)},E._unassignEvents=function(){var e=this.options,n=e.show.target,i=e.hide.target,o=t.grep([this.elements.target[0],this.rendered&&this.tooltip[0],e.position.container[0],e.position.viewport[0],e.position.container.closest("html")[0],s,a],function(t){return"object"==typeof t});n&&n.toArray&&(o=o.concat(n.toArray())),i&&i.toArray&&(o=o.concat(i.toArray())),this._unbind(o)._unbind(o,"destroy")._unbind(o,"inactive")},t(function(){g(G,["mouseenter","mouseleave"],function(e){var n="mouseenter"===e.type,i=t(e.currentTarget),o=t(e.relatedTarget||e.target),r=this.options;n?(this.focus(e),i.hasClass(J)&&!i.hasClass(tt)&&clearTimeout(this.timers.hide)):"mouse"===r.position.target&&r.position.adjust.mouse&&r.hide.event&&r.show.target&&!o.closest(r.show.target[0]).length&&this.hide(e),i.toggleClass(Z,n)}),g("["+z+"]",Y,f)}),x=t.fn.qtip=function(e,n,i){var r=(""+e).toLowerCase(),s=N,a=t.makeArray(arguments).slice(1),c=a[a.length-1],u=this[0]?t.data(this[0],V):N;return!arguments.length&&u||"api"===r?u:"string"==typeof e?(this.each(function(){var e=t.data(this,V);if(!e)return O;if(c&&c.timeStamp&&(e.cache.event=c),!n||"option"!==r&&"options"!==r)e[r]&&e[r].apply(e,a);else{if(i===l&&!t.isPlainObject(n))return s=e.get(n),R;e.set(n,i)}}),s!==N?s:this):"object"!=typeof e&&arguments.length?void 0:(u=o(t.extend(O,{},e)),this.each(function(e){var n,i;return i=t.isArray(u.id)?u.id[e]:u.id,i=!i||i===R||i.length<1||x.api[i]?x.nextid++:i,n=v(t(this),i,u),n===R?O:(x.api[i]=n,t.each(H,function(){"initialize"===this.initialize&&this(n)}),void n._assignInitialEvents(c))}))},t.qtip=e,x.api={},t.each({attr:function(e,n){if(this.length){var i=this[0],o="title",r=t.data(i,"qtip");if(e===o&&r&&r.options&&"object"==typeof r&&"object"==typeof r.options&&r.options.suppress)return arguments.length<2?t.attr(i,nt):(r&&r.options.content.attr===o&&r.cache.attr&&r.set("content.text",n),this.attr(nt,n))}return t.fn["attr"+et].apply(this,arguments)},clone:function(e){var n=t.fn["clone"+et].apply(this,arguments);return e||n.filter("["+nt+"]").attr("title",function(){return t.attr(this,nt)}).removeAttr(nt),n}},function(e,n){if(!n||t.fn[e+et])return O;var i=t.fn[e+et]=t.fn[e];t.fn[e]=function(){return n.apply(this,arguments)||i.apply(this,arguments)}}),t.ui||(t["cleanData"+et]=t.cleanData,t.cleanData=function(e){for(var n,i=0;(n=t(e[i])).length;i++)if(n.attr(W))try{n.triggerHandler("removeqtip")}catch(o){}t["cleanData"+et].apply(this,arguments)}),x.version="3.0.3",x.nextid=0,x.inactiveEvents=Y,x.zindex=15e3,x.defaults={prerender:R,id:R,overwrite:O,suppress:O,content:{text:O,attr:"title",title:R,button:R},position:{my:"top left",at:"bottom right",target:R,container:R,viewport:R,adjust:{x:0,y:0,mouse:O,scroll:O,resize:O,method:"flipinvert flipinvert"},effect:function(e,n){t(this).animate(n,{duration:200,queue:R})}},show:{target:R,event:"mouseenter",effect:O,delay:90,solo:R,ready:R,autofocus:R},hide:{target:R,event:"mouseleave",effect:O,delay:0,fixed:R,inactive:R,leave:"window",distance:R},style:{classes:"",widget:R,width:R,height:R,def:O},events:{render:N,move:N,show:N,hide:N,toggle:N,visible:N,hidden:N,focus:N,blur:N}};var at,lt,ct,ut,pt,ht="margin",dt="border",ft="color",mt="background-color",gt="transparent",vt=" !important",yt=!!a.createElement("canvas").getContext,_t=/rgba?\(0, 0, 0(, 0)?\)|transparent|#123456/i,bt={},wt=["Webkit","O","Moz","ms"];yt?(ut=s.devicePixelRatio||1,pt=function(){var t=a.createElement("canvas").getContext("2d");return t.backingStorePixelRatio||t.webkitBackingStorePixelRatio||t.mozBackingStorePixelRatio||t.msBackingStorePixelRatio||t.oBackingStorePixelRatio||1}(),ct=ut/pt):lt=function(t,e,n){return"<qtipvml:"+t+' xmlns="urn:schemas-microsoft.com:vml" class="qtip-vml" '+(e||"")+' style="behavior: url(#default#VML); '+(n||"")+'" />'},t.extend(w.prototype,{init:function(e){var n,i;i=this.element=e.elements.tip=t("<div />",{"class":V+"-tip"}).prependTo(e.tooltip),yt?(n=t("<canvas />").appendTo(this.element)[0].getContext("2d"),n.lineJoin="miter",n.miterLimit=1e5,n.save()):(n=lt("shape",'coordorigin="0,0"',"position:absolute;"),this.element.html(n+n),e._bind(t("*",i).add(i),["click","mousedown"],function(t){t.stopPropagation()},this._ns)),e._bind(e.tooltip,"tooltipmove",this.reposition,this._ns,this),this.create()},_swapDimensions:function(){this.size[0]=this.options.height,this.size[1]=this.options.width},_resetDimensions:function(){this.size[0]=this.options.width,this.size[1]=this.options.height},_useTitle:function(t){var e=this.qtip.elements.titlebar;return e&&(t.y===D||t.y===j&&this.element.position().top+this.size[1]/2+this.options.offset<e.outerHeight(O))},_parseCorner:function(t){var e=this.qtip.options.position.my;return t===R||e===R?t=R:t===O?t=new T(e.string()):t.string||(t=new T(t),t.fixed=O),t},_parseWidth:function(t,e,n){var i=this.qtip.elements,o=dt+y(e)+"Width";return(n?b(n,o):b(i.content,o)||b(this._useTitle(t)&&i.titlebar||i.content,o)||b(i.tooltip,o))||0},_parseRadius:function(t){var e=this.qtip.elements,n=dt+y(t.y)+y(t.x)+"Radius";return it.ie<9?0:b(this._useTitle(t)&&e.titlebar||e.content,n)||b(e.tooltip,n)||0},_invalidColour:function(t,e,n){var i=t.css(e);return!i||n&&i===t.css(n)||_t.test(i)?R:i},_parseColours:function(e){var n=this.qtip.elements,i=this.element.css("cssText",""),o=dt+y(e[e.precedance])+y(ft),r=this._useTitle(e)&&n.titlebar||n.content,s=this._invalidColour,a=[];return a[0]=s(i,mt)||s(r,mt)||s(n.content,mt)||s(n.tooltip,mt)||i.css(mt),a[1]=s(i,o,ft)||s(r,o,ft)||s(n.content,o,ft)||s(n.tooltip,o,ft)||n.tooltip.css(o),t("*",i).add(i).css("cssText",mt+":"+gt+vt+";"+dt+":0"+vt+";"),a},_calculateSize:function(t){var e,n,i,o=t.precedance===P,r=this.options.width,s=this.options.height,a="c"===t.abbrev(),l=(o?r:s)*(a?.5:1),c=Math.pow,u=Math.round,p=Math.sqrt(c(l,2)+c(s,2)),h=[this.border/l*p,this.border/s*p];return h[2]=Math.sqrt(c(h[0],2)-c(this.border,2)),h[3]=Math.sqrt(c(h[1],2)-c(this.border,2)),e=p+h[2]+h[3]+(a?0:h[0]),n=e/p,i=[u(n*r),u(n*s)],o?i:i.reverse()},_calculateTip:function(t,e,n){n=n||1,e=e||this.size;var i=e[0]*n,o=e[1]*n,r=Math.ceil(i/2),s=Math.ceil(o/2),a={br:[0,0,i,o,i,0],bl:[0,0,i,0,0,o],tr:[0,o,i,0,i,o],tl:[0,0,0,o,i,o],tc:[0,o,r,0,i,o],bc:[0,0,i,0,r,o],rc:[0,0,i,s,0,o],lc:[i,0,i,o,0,s]};return a.lt=a.br,a.rt=a.bl,a.lb=a.tr,a.rb=a.tl,a[t.abbrev()]},_drawCoords:function(t,e){t.beginPath(),t.moveTo(e[0],e[1]),t.lineTo(e[2],e[3]),t.lineTo(e[4],e[5]),t.closePath()},create:function(){var t=this.corner=(yt||it.ie)&&this._parseCorner(this.options.corner);return this.enabled=!!this.corner&&"c"!==this.corner.abbrev(),this.enabled&&(this.qtip.cache.corner=t.clone(),this.update()),this.element.toggle(this.enabled),this.corner},update:function(e,n){if(!this.enabled)return this;var i,o,r,a,l,c,u,p,h=this.qtip.elements,d=this.element,f=d.children(),m=this.options,g=this.size,v=m.mimic,y=Math.round;e||(e=this.qtip.cache.corner||this.corner),v===R?v=e:(v=new T(v),v.precedance=e.precedance,"inherit"===v.x?v.x=e.x:"inherit"===v.y?v.y=e.y:v.x===v.y&&(v[e.precedance]=e[e.precedance])),o=v.precedance,e.precedance===I?this._swapDimensions():this._resetDimensions(),i=this.color=this._parseColours(e),i[1]!==gt?(p=this.border=this._parseWidth(e,e[e.precedance]),m.border&&p<1&&!_t.test(i[1])&&(i[0]=i[1]),this.border=p=m.border!==O?m.border:p):this.border=p=0,u=this.size=this._calculateSize(e),d.css({width:u[0],height:u[1],lineHeight:u[1]+"px"}),c=e.precedance===P?[y(v.x===U?p:v.x===B?u[0]-g[0]-p:(u[0]-g[0])/2),y(v.y===D?u[1]-g[1]:0)]:[y(v.x===U?u[0]-g[0]:0),y(v.y===D?p:v.y===F?u[1]-g[1]-p:(u[1]-g[1])/2)],yt?(r=f[0].getContext("2d"),r.restore(),r.save(),r.clearRect(0,0,6e3,6e3),a=this._calculateTip(v,g,ct),l=this._calculateTip(v,this.size,ct),f.attr(L,u[0]*ct).attr(M,u[1]*ct),f.css(L,u[0]).css(M,u[1]),this._drawCoords(r,l),r.fillStyle=i[1],r.fill(),r.translate(c[0]*ct,c[1]*ct),this._drawCoords(r,a),r.fillStyle=i[0],r.fill()):(a=this._calculateTip(v),a="m"+a[0]+","+a[1]+" l"+a[2]+","+a[3]+" "+a[4]+","+a[5]+" xe",c[2]=p&&/^(r|b)/i.test(e.string())?8===it.ie?2:1:0,f.css({coordsize:u[0]+p+" "+u[1]+p,antialias:""+(v.string().indexOf(j)>-1),left:c[0]-c[2]*Number(o===I),top:c[1]-c[2]*Number(o===P),width:u[0]+p,height:u[1]+p}).each(function(e){var n=t(this);n[n.prop?"prop":"attr"]({coordsize:u[0]+p+" "+u[1]+p,path:a,fillcolor:i[0],filled:!!e,stroked:!e}).toggle(!(!p&&!e)),!e&&n.html(lt("stroke",'weight="'+2*p+'px" color="'+i[1]+'" miterlimit="1000" joinstyle="miter"'))})),s.opera&&setTimeout(function(){h.tip.css({display:"inline-block",visibility:"visible"})},1),n!==R&&this.calculate(e,u)},calculate:function(e,n){if(!this.enabled)return R;var i,o,r=this,s=this.qtip.elements,a=this.element,l=this.options.offset,c={};
return e=e||this.corner,i=e.precedance,n=n||this._calculateSize(e),o=[e.x,e.y],i===I&&o.reverse(),t.each(o,function(t,o){var a,u,p;o===j?(a=i===P?U:D,c[a]="50%",c[ht+"-"+a]=-Math.round(n[i===P?0:1]/2)+l):(a=r._parseWidth(e,o,s.tooltip),u=r._parseWidth(e,o,s.content),p=r._parseRadius(e),c[o]=Math.max(-r.border,t?u:l+(p>a?p:-a)))}),c[e[i]]-=n[i===I?0:1],a.css({margin:"",top:"",bottom:"",left:"",right:""}).css(c),c},reposition:function(t,e,n){function i(t,e,n,i,o){t===$&&c.precedance===e&&u[i]&&c[n]!==j?c.precedance=c.precedance===I?P:I:t!==$&&u[i]&&(c[e]=c[e]===j?u[i]>0?i:o:c[e]===i?o:i)}function o(t,e,i){c[t]===j?m[ht+"-"+e]=f[t]=r[ht+"-"+e]-u[e]:(s=r[i]!==l?[u[e],-r[e]]:[-u[e],r[e]],(f[t]=Math.max(s[0],s[1]))>s[0]&&(n[e]-=u[e],f[e]=R),m[r[i]!==l?i:e]=f[t])}if(this.enabled){var r,s,a=e.cache,c=this.corner.clone(),u=n.adjusted,p=e.options.position.adjust.method.split(" "),h=p[0],d=p[1]||p[0],f={left:R,top:R,x:0,y:0},m={};this.corner.fixed!==O&&(i(h,I,P,U,B),i(d,P,I,D,F),c.string()===a.corner.string()&&a.cornerTop===u.top&&a.cornerLeft===u.left||this.update(c,R)),r=this.calculate(c),r.right!==l&&(r.left=-r.right),r.bottom!==l&&(r.top=-r.bottom),r.user=this.offset,f.left=h===$&&!!u.left,f.left&&o(I,U,B),f.top=d===$&&!!u.top,f.top&&o(P,D,F),this.element.css(m).toggle(!(f.x&&f.y||c.x===j&&f.y||c.y===j&&f.x)),n.left-=r.left.charAt?r.user:h!==$||f.top||!f.left&&!f.top?r.left+this.border:0,n.top-=r.top.charAt?r.user:d!==$||f.left||!f.left&&!f.top?r.top+this.border:0,a.cornerLeft=u.left,a.cornerTop=u.top,a.corner=c.clone()}},destroy:function(){this.qtip._unbind(this.qtip.tooltip,this._ns),this.qtip.elements.tip&&this.qtip.elements.tip.find("*").remove().end().remove()}}),at=H.tip=function(t){return new w(t,t.options.style.tip)},at.initialize="render",at.sanitize=function(t){if(t.style&&"tip"in t.style){var e=t.style.tip;"object"!=typeof e&&(e=t.style.tip={corner:e}),/string|boolean/i.test(typeof e.corner)||(e.corner=O)}},C.tip={"^position.my|style.tip.(corner|mimic|border)$":function(){this.create(),this.qtip.reposition()},"^style.tip.(height|width)$":function(t){this.size=[t.width,t.height],this.update(),this.qtip.reposition()},"^content.title|style.(classes|widget)$":function(){this.update()}},t.extend(O,x.defaults,{style:{tip:{corner:O,mimic:R,width:6,height:6,border:O,offset:0}}});var St,kt,xt="qtip-modal",Et="."+xt;kt=function(){function e(e){if(t.expr[":"].focusable)return t.expr[":"].focusable;var n,i,o,r=!isNaN(t.attr(e,"tabindex")),s=e.nodeName&&e.nodeName.toLowerCase();return"area"===s?(n=e.parentNode,i=n.name,!(!e.href||!i||"map"!==n.nodeName.toLowerCase())&&(o=t("img[usemap=#"+i+"]")[0],!!o&&o.is(":visible"))):/input|select|textarea|button|object/.test(s)?!e.disabled:"a"===s?e.href||r:r}function n(t){c.length<1&&t.length?t.not("body").blur():c.first().focus()}function i(e){if(s.is(":visible")){var i,r=t(e.target),a=o.tooltip,l=r.closest(G);i=l.length<1?R:parseInt(l[0].style.zIndex,10)>parseInt(a[0].style.zIndex,10),i||r.closest(G)[0]===a[0]||n(r)}}var o,r,s,l=this,c={};t.extend(l,{init:function(){return s=l.elem=t("<div />",{id:"qtip-overlay",html:"<div></div>",mousedown:function(){return R}}).hide(),t(a.body).bind("focusin"+Et,i),t(a).bind("keydown"+Et,function(t){o&&o.options.show.modal.escape&&27===t.keyCode&&o.hide(t)}),s.bind("click"+Et,function(t){o&&o.options.show.modal.blur&&o.hide(t)}),l},update:function(t){o=t,c=t.options.show.modal.stealfocus!==R?t.tooltip.find("*").filter(function(){return e(this)}):[]},toggle:function(e,i,c){var u=e.tooltip,p=e.options.show.modal,h=p.effect,d=i?"show":"hide",f=s.is(":visible"),m=t(Et).filter(":visible:not(:animated)").not(u);return l.update(e),i&&p.stealfocus!==R&&n(t(":focus")),s.toggleClass("blurs",p.blur),i&&s.appendTo(a.body),s.is(":animated")&&f===i&&r!==R||!i&&m.length?l:(s.stop(O,R),t.isFunction(h)?h.call(s,i):h===R?s[d]():s.fadeTo(parseInt(c,10)||90,i?1:0,function(){i||s.hide()}),i||s.queue(function(e){s.css({left:"",top:""}),t(Et).length||s.detach(),e()}),r=i,o.destroyed&&(o=N),l)}}),l.init()},kt=new kt,t.extend(S.prototype,{init:function(e){var n=e.tooltip;return this.options.on?(e.elements.overlay=kt.elem,n.addClass(xt).css("z-index",x.modal_zindex+t(Et).length),e._bind(n,["tooltipshow","tooltiphide"],function(e,i,o){var r=e.originalEvent;if(e.target===n[0])if(r&&"tooltiphide"===e.type&&/mouse(leave|enter)/.test(r.type)&&t(r.relatedTarget).closest(kt.elem[0]).length)try{e.preventDefault()}catch(s){}else(!r||r&&"tooltipsolo"!==r.type)&&this.toggle(e,"tooltipshow"===e.type,o)},this._ns,this),e._bind(n,"tooltipfocus",function(e,i){if(!e.isDefaultPrevented()&&e.target===n[0]){var o=t(Et),r=x.modal_zindex+o.length,s=parseInt(n[0].style.zIndex,10);kt.elem[0].style.zIndex=r-1,o.each(function(){this.style.zIndex>s&&(this.style.zIndex-=1)}),o.filter("."+X).qtip("blur",e.originalEvent),n.addClass(X)[0].style.zIndex=r,kt.update(i);try{e.preventDefault()}catch(a){}}},this._ns,this),void e._bind(n,"tooltiphide",function(e){e.target===n[0]&&t(Et).filter(":visible").not(n).last().qtip("focus",e)},this._ns,this)):this},toggle:function(t,e,n){return t&&t.isDefaultPrevented()?this:void kt.toggle(this.qtip,!!e,n)},destroy:function(){this.qtip.tooltip.removeClass(xt),this.qtip._unbind(this.qtip.tooltip,this._ns),kt.toggle(this.qtip,R),delete this.qtip.elements.overlay}}),St=H.modal=function(t){return new S(t,t.options.show.modal)},St.sanitize=function(t){t.show&&("object"!=typeof t.show.modal?t.show.modal={on:!!t.show.modal}:"undefined"==typeof t.show.modal.on&&(t.show.modal.on=O))},x.modal_zindex=x.zindex-200,St.initialize="render",C.modal={"^show.modal.(on|blur)$":function(){this.destroy(),this.init(),this.qtip.elems.overlay.toggle(this.qtip.tooltip[0].offsetWidth>0)}},t.extend(O,x.defaults,{show:{modal:{on:R,effect:O,blur:O,stealfocus:O,escape:O}}}),H.viewport=function(t,e,n,i,o,r,l){function c(t,n,i,o,r,s,a,l,c){var u=e[r],y=b[t],_=w[t],S=i===$,k=y===r?c:y===s?-c:-c/2,x=_===r?l:_===s?-l:-l/2,E=g[r]+v[r]-(d?0:h[r]),T=E-u,C=u+c-(a===L?f:m)-E,A=k-(b.precedance===t||y===b[n]?x:0)-(_===j?l/2:0);return S?(A=(y===r?1:-1)*k,e[r]+=T>0?T:C>0?-C:0,e[r]=Math.max(-h[r]+v[r],u-A,Math.min(Math.max(-h[r]+v[r]+(a===L?f:m),u+A),e[r],"center"===y?u-k:1e9))):(o*=i===q?2:0,T>0&&(y!==r||C>0)?(e[r]-=A+o,p.invert(t,r)):C>0&&(y!==s||T>0)&&(e[r]-=(y===j?-A:A)+o,p.invert(t,s)),e[r]<g[r]&&-e[r]>C&&(e[r]=u,p=b.clone())),e[r]-u}var u,p,h,d,f,m,g,v,y=n.target,_=t.elements.tooltip,b=n.my,w=n.at,S=n.adjust,k=S.method.split(" "),x=k[0],E=k[1]||k[0],T=n.viewport,C=n.container,A={left:0,top:0};return T.jquery&&y[0]!==s&&y[0]!==a.body&&"none"!==S.method?(h=C.offset()||A,d="static"===C.css("position"),u="fixed"===_.css("position"),f=T[0]===s?T.width():T.outerWidth(R),m=T[0]===s?T.height():T.outerHeight(R),g={left:u?0:T.scrollLeft(),top:u?0:T.scrollTop()},v=T.offset()||A,"shift"===x&&"shift"===E||(p=b.clone()),A={left:"none"!==x?c(I,P,x,S.x,U,B,L,i,r):0,top:"none"!==E?c(P,I,E,S.y,D,F,M,o,l):0,my:p}):A},H.polys={polygon:function(t,e){var n,i,o,r={width:0,height:0,position:{top:1e10,right:0,bottom:0,left:1e10},adjustable:R},s=0,a=[],l=1,c=1,u=0,p=0;for(s=t.length;s--;)n=[parseInt(t[--s],10),parseInt(t[s+1],10)],n[0]>r.position.right&&(r.position.right=n[0]),n[0]<r.position.left&&(r.position.left=n[0]),n[1]>r.position.bottom&&(r.position.bottom=n[1]),n[1]<r.position.top&&(r.position.top=n[1]),a.push(n);if(i=r.width=Math.abs(r.position.right-r.position.left),o=r.height=Math.abs(r.position.bottom-r.position.top),"c"===e.abbrev())r.position={left:r.position.left+r.width/2,top:r.position.top+r.height/2};else{for(;i>0&&o>0&&l>0&&c>0;)for(i=Math.floor(i/2),o=Math.floor(o/2),e.x===U?l=i:e.x===B?l=r.width-i:l+=Math.floor(i/2),e.y===D?c=o:e.y===F?c=r.height-o:c+=Math.floor(o/2),s=a.length;s--&&!(a.length<2);)u=a[s][0]-r.position.left,p=a[s][1]-r.position.top,(e.x===U&&u>=l||e.x===B&&u<=l||e.x===j&&(u<l||u>r.width-l)||e.y===D&&p>=c||e.y===F&&p<=c||e.y===j&&(p<c||p>r.height-c))&&a.splice(s,1);r.position={left:a[0][0],top:a[0][1]}}return r},rect:function(t,e,n,i){return{width:Math.abs(n-t),height:Math.abs(i-e),position:{left:Math.min(t,n),top:Math.min(e,i)}}},_angles:{tc:1.5,tr:7/4,tl:5/4,bc:.5,br:.25,bl:.75,rc:2,lc:1,c:0},ellipse:function(t,e,n,i,o){var r=H.polys._angles[o.abbrev()],s=0===r?0:n*Math.cos(r*Math.PI),a=i*Math.sin(r*Math.PI);return{width:2*n-Math.abs(s),height:2*i-Math.abs(a),position:{left:t+s,top:e+a},adjustable:R}},circle:function(t,e,n,i){return H.polys.ellipse(t,e,n,n,i)}},H.svg=function(e,n,i){for(var o,r,s,l,c,u,p,h,d,f=n[0],m=t(f.ownerSVGElement),g=f.ownerDocument,v=(parseInt(n.css("stroke-width"),10)||0)/2;!f.getBBox;)f=f.parentNode;if(!f.getBBox||!f.parentNode)return R;switch(f.nodeName){case"ellipse":case"circle":h=H.polys.ellipse(f.cx.baseVal.value,f.cy.baseVal.value,(f.rx||f.r).baseVal.value+v,(f.ry||f.r).baseVal.value+v,i);break;case"line":case"polygon":case"polyline":for(p=f.points||[{x:f.x1.baseVal.value,y:f.y1.baseVal.value},{x:f.x2.baseVal.value,y:f.y2.baseVal.value}],h=[],u=-1,l=p.numberOfItems||p.length;++u<l;)c=p.getItem?p.getItem(u):p[u],h.push.apply(h,[c.x,c.y]);h=H.polys.polygon(h,i);break;default:h=f.getBBox(),h={width:h.width,height:h.height,position:{left:h.x,top:h.y}}}return d=h.position,m=m[0],m.createSVGPoint&&(r=f.getScreenCTM(),p=m.createSVGPoint(),p.x=d.left,p.y=d.top,s=p.matrixTransform(r),d.left=s.x,d.top=s.y),g!==a&&"mouse"!==e.position.target&&(o=t((g.defaultView||g.parentWindow).frameElement).offset(),o&&(d.left+=o.left,d.top+=o.top)),g=t(g),d.left+=g.scrollLeft(),d.top+=g.scrollTop(),h},H.imagemap=function(e,n,i){n.jquery||(n=t(n));var o,r,s,a,l,c=(n.attr("shape")||"rect").toLowerCase().replace("poly","polygon"),u=t('img[usemap="#'+n.parent("map").attr("name")+'"]'),p=t.trim(n.attr("coords")),h=p.replace(/,$/,"").split(",");if(!u.length)return R;if("polygon"===c)a=H.polys.polygon(h,i);else{if(!H.polys[c])return R;for(s=-1,l=h.length,r=[];++s<l;)r.push(parseInt(h[s],10));a=H.polys[c].apply(this,r.concat(i))}return o=u.offset(),o.left+=Math.ceil((u.outerWidth(R)-u.width())/2),o.top+=Math.ceil((u.outerHeight(R)-u.height())/2),a.position.left+=o.left,a.position.top+=o.top,a};var Tt,Ct='<iframe class="qtip-bgiframe" frameborder="0" tabindex="-1" src="javascript:\'\';"  style="display:block; position:absolute; z-index:-1; filter:alpha(opacity=0); -ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";"></iframe>';t.extend(k.prototype,{_scroll:function(){var e=this.qtip.elements.overlay;e&&(e[0].style.top=t(s).scrollTop()+"px")},init:function(e){var n=e.tooltip;t("select, object").length<1&&(this.bgiframe=e.elements.bgiframe=t(Ct).appendTo(n),e._bind(n,"tooltipmove",this.adjustBGIFrame,this._ns,this)),this.redrawContainer=t("<div/>",{id:V+"-rcontainer"}).appendTo(a.body),e.elements.overlay&&e.elements.overlay.addClass("qtipmodal-ie6fix")&&(e._bind(s,["scroll","resize"],this._scroll,this._ns,this),e._bind(n,["tooltipshow"],this._scroll,this._ns,this)),this.redraw()},adjustBGIFrame:function(){var t,e,n=this.qtip.tooltip,i={height:n.outerHeight(R),width:n.outerWidth(R)},o=this.qtip.plugins.tip,r=this.qtip.elements.tip;e=parseInt(n.css("borderLeftWidth"),10)||0,e={left:-e,top:-e},o&&r&&(t="x"===o.corner.precedance?[L,U]:[M,D],e[t[1]]-=r[t[0]]()),this.bgiframe.css(e).css(i)},redraw:function(){if(this.qtip.rendered<1||this.drawing)return this;var t,e,n,i,o=this.qtip.tooltip,r=this.qtip.options.style,s=this.qtip.options.position.container;return this.qtip.drawing=1,r.height&&o.css(M,r.height),r.width?o.css(L,r.width):(o.css(L,"").appendTo(this.redrawContainer),e=o.width(),e%2<1&&(e+=1),n=o.css("maxWidth")||"",i=o.css("minWidth")||"",t=(n+i).indexOf("%")>-1?s.width()/100:0,n=(n.indexOf("%")>-1?t:1*parseInt(n,10))||e,i=(i.indexOf("%")>-1?t:1*parseInt(i,10))||0,e=n+i?Math.min(Math.max(e,i),n):e,o.css(L,Math.round(e)).appendTo(s)),this.drawing=0,this},destroy:function(){this.bgiframe&&this.bgiframe.remove(),this.qtip._unbind([s,this.qtip.tooltip],this._ns)}}),Tt=H.ie6=function(t){return 6===it.ie?new k(t):R},Tt.initialize="render",C.ie6={"^content|style$":function(){this.redraw()}}})}(window,document)},function(t,e,n){var i,o;i=[n(2),n(45),n(86)],o=function(t,e,n){function i(e,n){e.apply(this,t.map(n.split(/\s+/),function(t){return this.model.get(t)},this))}function o(e,n){t.isFunction(e)&&e.call(n)}return e.extend({className:function(){var t="o-form-fieldset";return this.options["label-top"]&&(t+=" o-form-label-top"),this.options.readOnly&&(t+=" o-form-read-mode"),t},attributes:function(){return{"data-se":this.options["data-se"]||"o-form-fieldset"}},constructor:function(r){r.className&&(this.inputWrapperClassName=this.className,this.optionsClassName=r.className,r.className=function(){return t.result(this,"inputWrapperClassName","")+" "+t.result(this,"optionsClassName")}),e.apply(this,arguments),t.each(r.events||{},function(t,e){this.listenTo(this.model,e,t)},this),t.each(r.bindings||{},function(e,o){this.listenTo(this.model,n.changeEventString(o.split(/\s+/)),t.bind(i,this,e,o))},this),n.applyShowWhen(this,r.showWhen),n.applyToggleWhen(this,r.toggleWhen),o(r.initialize,this)},postRender:function(){t.each(this.options.bindings||{},i,this),o(this.options.render,this)},getLabel:function(){return this.size()>1?this.at(0):null},getInput:function(){return this.getInputContainer()},getInputContainer:function(){return this.at(this.size()>1?1:0)},getInputs:function(){return this.getInputContainer().toArray()},focus:function(){return this.getInput().focus()}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(2),n(7),n(45),n(61),n(13),n(87)],o=function(t,e,n,i,o,r){function s(e){if(e&&!e.__edit__)return t.extend({__edit__:t.constant(!0)},e)}function a(e){e=t.pick(e||{},"action","className","text","type");var o,r,s;return n.extend({tagName:"input",className:"button",events:{click:function(){e.action&&!this.disabled()&&e.action.call(this)},keyup:function(t){i.isEnter(t)&&e.action&&!this.disabled()&&e.action.call(this)}},disabled:function(){return this.$el.prop("disabled")===!0},disable:function(){this.$el.prop("disabled",!0),this.$el.addClass("btn-disabled")},enable:function(){this.$el.prop("disabled",!1),this.$el.removeClass("btn-disabled")},initialize:function(){this.$el.attr("type","save"==e.type?"submit":"button"),this.$el.val(e.text),e.className&&this.$el.addClass(e.className),e.type&&this.$el.attr("data-type",e.type),this.listenTo(this.model,"form:set-saving-state",function(){this.disable(),"save"==e.type&&(o=setTimeout(t.bind(this.__changeSaveText,this),1e3))}),this.listenTo(this.model,"form:clear-saving-state",function(){this.enable(),"save"==e.type&&(clearTimeout(o),clearInterval(r),this.$el.val(e.text))})},__changeSaveText:function(){s=0,r=setInterval(t.bind(this.__showLoadingText,this),200)},__showLoadingText:function(){this.$el.val(g[s++%g.length])}})}function l(e,n){if(e||(e={}),"label"==e.type)return void(e.label||o.warn('A label input must have a "label" parameter',e));if("button"==e.type)return e.title||e.icon||o.warn('A button input must have a "title" and/or an "icon" parameter',e),void(e.click||e.href||o.warn('A button input must have a "click" and/or an "href" parameter',e));if(e.name||e.input||o.warn('Missing "name" or "input" parameters',e),t.isArray(e.name)&&t.isArray(e.input))throw new Error('Not allowed to have both "name" and "input" defined as array.');if(e.name&&n&&n.allows){var i=[];t.isArray(e.name)?i=e.name:i.push(e.name),t.each(i,function(t){if(!n.allows(t))throw new Error("field not allowed: "+e.name)})}t.isArray(e.input)&&t.each(e.input,function(t){l(t,n)});var r=t.keys(e),s=t.intersection(r,m);if(t.size(s)!=t.size(e)){var a=t.clone(m);a.unshift(r),o.warn("Invalid input parameters",t.without.apply(null,a),e)}}function c(e,n,i){e=t.clone(e),t.contains(["list","group"],e.type)&&(e.params=t.defaults({create:i,inputs:t.map(t.isArray(e.input)?e.input:[e.input],function(e){return t.first(c(e,n,i))})},e.params||{}),delete e.input);var o=t.isArray(e.input)?t.clone(e.input):[e];return t.map(o,function(i){var o=t.defaults({model:n.model},i,t.omit(e,"input","inputs"),n.options,{id:t.uniqueId("input"),readOnly:n.isReadOnly(),read:n.hasReadMode()});return n.isReadOnly()&&(o.read=o.readOnly=!0),o})}var u=["model","id","inputId","type","label","sublabel","tooltip","name"],p=["wide","multi","input","explain","customExplain","model","name","type","autoRender"],h=["model","name","label-top","readOnly","events","initialize","showWhen","bindings","render","className","data-se","toggleWhen"],d=["model","name","inputId","type","input","placeholder","label","readOnly","read","disabled","readModeString","options","from","to","autoRender","params"],f=["errorField"],m=t.uniq(t.union(u,p,h,d,f)),g=["•         ","•  •      ","•  •  •   ","•  •  •  •","   •  •  •","      •  •","         •","          ","          ","          "];return{LABEL_OPTIONS:u,CONTAINER_OPTIONS:p,WRAPPER_OPTIONS:h,INPUT_OPTIONS:d,generateInputOptions:c,changeEventString:function(t){return"change:"+t.join(" change:")},createReadFormButton:function(i){var o,r;return"cancel"==i.type?(r=e.localize("oform.cancel"),o=function(){this.model.trigger("form:cancel")}):(r=e.localize("oform.edit"),o=function(){this.model.set("__edit__",!0)}),n.extend({tagName:"a",attributes:{href:"#"},template:function(){return t.escape(r)},events:{click:function(t){t.preventDefault(),o.call(this)}}})},createButton:function(n){switch(n=t.clone(n),n.type){case"save":t.defaults(n,{className:"button-primary"});break;case"cancel":t.defaults(n,{text:e.localize("oform.cancel"),action:function(){this.model.trigger("form:cancel")}});break;case"previous":t.defaults(n,{text:e.localize("oform.previous"),action:function(){this.model.trigger("form:previous")}})}return a(n)},validateInput:l,applyShowWhen:function(t,e){var n=function(e){return function(){t.$el.toggle(e),t.model.trigger("form:resize")}};r.applyDoWhen(t,s(e),function(e,i){i.animate?t.$el["slide"+(e?"Down":"Up")](200,n(e)):t.$el.toggle(e)})},applyToggleWhen:function(t,e){r.applyDoWhen(t,s(e),function(e,n){t.$el.toggle(e),t.model.trigger("form:resize"),n.animate&&t.render()})}}}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(2)],o=function(t){function e(e){return"change:"+t.keys(e).join(" change:")}function n(e,n){var i=this.model.get(n);return t.isFunction(e)?e.call(this,i):e==i}function i(n,i,o){var r=t.bind(o,n,n,i);n.render=t.wrap(n.render,function(t){var e=t.call(n);return r({animate:!1}),e}),n.listenTo(n.model,e(i),function(){r({animate:!0})})}return{applyDoWhen:function(e,o,r){e.model&&t.isObject(o)&&t.size(o)&&t.isFunction(r)&&i(e,o,function(e,i,o){var s=t.every(t.map(i,n,e));r.call(e,s,o)})}}}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(45)],o=function(t){var e='\t    <div class="okta-form-infobox-error infobox infobox-error">\t      <span class="icon error-16"></span>\t      {{#if errorSummary}}\t        <p>{{errorSummary}}</p>\t      {{else}}\t        <p>{{i18n code="oform.errorbanner.title"}}</p>\t      {{/if}}\t    </div>\t  ';return t.extend({template:e,modelEvents:{"form:clear-errors":"remove"}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(2)],o=function(t){return{getResponseJSON:function(t){try{return t.responseJSON||JSON.parse(t.responseText)}catch(e){return}},parseErrorSummary:function(t){var e=t.match(/^([^\:]+)\: (.+)$/);if(e)return[e[1],e[2]]},parseFieldErrors:function(e){var n=this.getResponseJSON(e),i={};return n?t.each(n.errorCauses||[],function(t){var e=this.parseErrorSummary(t&&t.errorSummary||"");if(e){var n=e[0],o=e[1];i[n]||(i[n]=[]),i[n].push(o)}},this):t.isObject(e)&&t.size(e)&&t.each(e,function(t,e){i[e]=[t]}),t.size(i)?i:void 0}}}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e){},function(t,e,n){var i,o;i=[n(2),n(45),n(86)],o=function(t,e,n){return e.extend({className:"o-form-button-bar",initialize:function(e){this.addButton({type:"save",text:t.resultCtx(e,"save",this),className:t.resultCtx(e,"saveClassName",this)}),e.noCancelButton||this.addButton({type:"cancel",text:t.resultCtx(e,"cancel",this)}),e.hasPrevStep&&this.addButton({type:"previous"},{prepend:!0})},addButton:function(t,e){return this.add(n.createButton(t),e)}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(2),n(45)],o=function(t,e){function n(e,n){return t.resultCtx(e.options,n,e)||t.result(e,n)}function i(t){var e="infobox clearfix infobox-"+n(t,"type");switch(n(t,"size")){case"standard":e+="";break;case"compact":e+=" infobox-compact";break;case"large":e+=" infobox-md"}return n(t,"dismissible")&&(e+=" infobox-dismiss"),e}var o={"click .infobox-dismiss-link":function(t){t.preventDefault(),this.remove()}},r='\t    {{#if dismissible}}\t      <a class="infobox-dismiss-link" title="Dismiss" href="#">\t        <span class="dismiss-icon"></span>\t      </a>\t    {{/if}}\t    <span class="icon {{icon}}"></span>\t    {{#if title}}<h3>{{title}}</h3>{{/if}}\t    {{#if subtitle}}<p>{{subtitle}}</p>{{/if}}\t    {{#if bullets}}\t      <ul class="bullets">\t      {{#each bullets}}<li>{{this}}</li>{{/each}}\t      </ul>\t    {{/if}}\t  ',s=e.extend({content:null,size:"standard",type:"info",dismissible:!1,title:null,subtitle:null,bullets:null,constructor:function(){this.events=t.defaults(this.events||{},o),e.apply(this,arguments),this.$el.addClass(i(this)),this.template=r;var s=n(this,"content");s&&this.add(s)},getTemplateData:function(){var t=n(this,"type");return"tip"==t&&(t="light-bulb"),{icon:t+"-"+("large"==n(this,"size")?"24":"16"),title:n(this,"title"),subtitle:n(this,"subtitle"),bullets:n(this,"bullets"),dismissible:n(this,"dismissible")}}});return{create:function(t){return new s(t)}}}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(105),n(160),n(121),n(124),n(135),n(139),n(141),n(144),n(145),n(146),n(147),n(151),n(152),n(153),n(154),n(157),n(158),n(159),n(94),n(164),n(166),n(168),n(169),n(170),n(172),n(174),n(175),n(176),n(177),n(178),n(179),n(180),n(181),n(109),n(106),n(182)],o=function(t,e,n,i,o,r,s,a,l,c,u,p,h,d,f,m,g,v,y,_,b,w,S,k,x,E,T,C,A,O,R,N,I,P,L,M){return t.extend({routes:{"":"primaryAuth",signin:"primaryAuth","signin/verify/duo/web":"verifyDuo","signin/verify/fido/webauthn":"verifyWindowsHello","signin/verify/fido/u2f":"verifyU2F","signin/verify/:provider/:factorType":"verify","signin/enroll":"enrollChoices","signin/enroll/duo/web":"enrollDuo","signin/enroll/okta/question":"enrollQuestion","signin/enroll/okta/sms":"enrollSms","signin/enroll/okta/call":"enrollCall","signin/enroll-activate/okta/sms":"enrollSms","signin/enroll/rsa/token":"enrollRsa","signin/enroll/del_oath/token":"enrollOnPrem","signin/enroll/symantec/token":"enrollSymantecVip","signin/enroll/yubico/token:hardware":"enrollYubikey","signin/enroll/fido/webauthn":"enrollWindowsHello","signin/enroll/fido/u2f":"enrollU2F","signin/enroll/:provider/:factorType":"enrollTotpFactor","signin/enroll-activate/okta/push":"scanBarcodePushFactor","signin/enroll-activate/okta/push/manual":"manualSetupPushFactor","signin/enroll-activate/okta/push/sent":"activationLinkSent","signin/enroll-activate/okta/token:software:totp/passcode":"enterPasscodeInPushEnrollmentFlow","signin/enroll-activate/:provider/:factorType":"scanBarcodeTotpFactor","signin/enroll-activate/:provider/:factorType/activate":"activateTotpFactor","signin/enroll-activate/:provider/:factorType/manual":"manualSetupTotpFactor","signin/password-expired":"passwordExpired","signin/forgot-password":"forgotPassword","signin/recovery-challenge":"recoveryChallenge","signin/recovery-emailed":"recoveryEmailSent","signin/recovery-question":"recoveryQuestion","signin/password-reset":"passwordReset","signin/reset-password/:token":"recoveryLoading","signin/user-unlock/:token":"recoveryLoading","signin/recovery/:token":"recoveryLoading","signin/unlock-emailed":"unlockEmailSent","signin/unlock":"unlockAccount","signin/account-unlocked":"accountUnlocked","signin/refresh-auth-state(/:token)":"refreshAuthState","*wildcard":"primaryAuth"},stateLessRouteHandlers:["primaryAuth","forgotPassword","recoveryLoading","unlockAccount","refreshAuthState"],primaryAuth:function(){this.render(e,{Beacon:L})},verifyDuo:function(){this.render(n,{provider:"DUO",factorType:"web",Beacon:M})},verifyWindowsHello:function(){this.render(o,{provider:"FIDO",factorType:"webauthn",Beacon:M})},verifyU2F:function(){this.render(r,{provider:"FIDO",factorType:"u2f",Beacon:M})},verify:function(t,e){this.render(i,{provider:t.toUpperCase(),factorType:e,Beacon:M})},enrollChoices:function(){this.render(s,{Beacon:L})},enrollDuo:function(){this.render(a,{provider:"DUO",factorType:"web",Beacon:M})},enrollQuestion:function(){this.render(l,{provider:"OKTA",factorType:"question",Beacon:M})},enrollSms:function(){this.render(u,{provider:"OKTA",factorType:"sms",Beacon:M})},enrollCall:function(){this.render(u,{provider:"OKTA",factorType:"call",Beacon:M})},enrollRsa:function(){this.render(p,{provider:"RSA",factorType:"token",Beacon:M})},enrollOnPrem:function(){this.render(p,{provider:"DEL_OATH",factorType:"token",Beacon:M})},enrollSymantecVip:function(){this.render(h,{provider:"SYMANTEC",factorType:"token",Beacon:M})},enrollYubikey:function(){this.render(d,{provider:"YUBICO",factorType:"token:hardware",Beacon:M})},enrollTotpFactor:function(t,e){this.render(f,{provider:t.toUpperCase(),factorType:e,Beacon:M})},enrollWindowsHello:function(){this.render(c,{provider:"FIDO",factorType:"webauthn",Beacon:M})},enrollU2F:function(){this.render(m,{provider:"FIDO",factorType:"u2f",Beacon:M})},scanBarcodeTotpFactor:function(t,e){this.render(g,{provider:t.toUpperCase(),factorType:e,Beacon:M})},scanBarcodePushFactor:function(){this.render(v,{provider:"OKTA",factorType:"push",Beacon:M})},activateTotpFactor:function(t,e){this.render(y,{provider:t.toUpperCase(),factorType:e,Beacon:M})},manualSetupTotpFactor:function(t,e){this.render(_,{provider:t.toUpperCase(),factorType:e,Beacon:M})},manualSetupPushFactor:function(){this.render(b,{provider:"OKTA",factorType:"push",Beacon:M})},activationLinkSent:function(){this.render(w,{provider:"OKTA",factorType:"push",Beacon:M})},enterPasscodeInPushEnrollmentFlow:function(){this.render(S,{provider:"OKTA",factorType:"token:software:totp",Beacon:M})},passwordExpired:function(){this.render(k,{Beacon:L})},forgotPassword:function(){this.render(x)},recoveryChallenge:function(){this.render(E,{Beacon:L})},recoveryEmailSent:function(){this.render(T,{Beacon:L})},unlockEmailSent:function(){this.render(I,{Beacon:L})},recoveryQuestion:function(){this.render(C,{Beacon:L})},passwordReset:function(){this.render(A,{Beacon:L})},recoveryLoading:function(t){this.render(O,{token:t,Beacon:L})},unlockAccount:function(){this.render(R)},accountUnlocked:function(){this.render(N,{Beacon:L})},refreshAuthState:function(t){this.render(P,{token:t,Beacon:L})}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(95),n(99),n(103)],o=function(t,e,n,i){return e.extend({className:"activate-totp",Model:function(){return{props:{factorId:["string",!0,this.options.appState.get("activatedFactorId")],passCode:["string",!0]},local:{__factorType__:["string",!1,this.options.factorType],__provider__:["string",!1,this.options.provider]},save:function(){return this.doTransaction(function(t){return t.activate({passCode:this.get("passCode")})})}}},Form:n,Footer:i})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(96),n(91),n(86),n(97),n(98)],o=function(t,e,n,i,o,r){var s=t._,a=t.Form.extend({layout:"o-form-theme",noCancelButton:!0,constructor:function(o){t.Form.call(this,o),s.each(s.result(this,"formChildren")||[],function(o){switch(o.type){case e.INPUT:this.addInput(s.extend({label:!1,"label-top":!0},o.viewOptions));break;case e.BUTTON:this.add(t.createButton(s.extend({model:this.model},o.viewOptions)),o.addOptions),i.applyShowWhen(this.last(),o.viewOptions&&o.viewOptions.showWhen);break;case e.DIVIDER:this.addDivider(o.viewOptions);break;case e.TOOLBAR:this.add(n,{options:o.viewOptions}),i.applyShowWhen(this.last(),o.viewOptions&&o.viewOptions.showWhen);break;case e.VIEW:this.add(o.viewOptions.View,o.addOptions),i.applyShowWhen(this.last(),o.viewOptions.showWhen);break;default:throw new Error("Unrecognized child type: "+o.type)}},this)}});return o.extend({constructor:function(){var t=this.initialize;if(this.initialize=function(){},o.apply(this,arguments),this.Model&&this.Form){var e=r.extend(s.extend({parse:function(t){return this.settings=t.settings,this.appState=t.appState,s.omit(t,["settings","appState"])}},s.result(this,"Model")));this.model=new e({settings:this.settings,appState:this.options.appState},{parse:!0});var n=a.extend(s.result(this,"Form",this));this.form=new n(this.toJSON()),this.add(this.form)}this.Footer&&(this.footer=new this.Footer(this.toJSON()),this.add(this.footer)),this.addListeners(),t.apply(this,arguments)},toJSON:function(){var t=o.prototype.toJSON.apply(this,arguments);return s.extend(s.pick(this.options,"appState"),t)},back:function(){this.footer&&this.footer.back&&this.footer.back()}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i;i=function(){function t(t){return function(e,n){return{type:t,viewOptions:e,addOptions:n}}}var e="INPUT",n="BUTTON",i="DIVIDER",o="TOOLBAR",r="VIEW";return{Input:t(e),Button:t(n),Divider:t(i),Toolbar:t(o),View:t(r),INPUT:e,BUTTON:n,DIVIDER:i,TOOLBAR:o,VIEW:r}}.call(e,n,e,t),!(void 0!==i&&(t.exports=i))},function(t,e,n){var i,o;i=[n(38),n(9)],o=function(t,e){function n(e){return i.find(e.getChildren(),function(e){return e instanceof t.Form})}var i=t._;return t.Controller.extend({addListeners:function(){var t=this.model.get("backupFactor");this.listenTo(this.model,"save",function(){var t=n(this),e=t.disableSubmitButton;e&&!t.disableSubmitButton()||this.toggleButtonState(!0)}),this.listenTo(this.model,"error",function(){this.toggleButtonState(!1)});var e=i.bind(function(t){this.options.appState.set("transaction",t)},this),o=i.bind(function(t){this.options.appState.set("transactionError",t)},this);this.listenTo(this.model,"setTransaction",e),this.listenTo(this.model,"setTransactionError",o),t&&(this.listenTo(t,"setTransaction",e),this.listenTo(t,"setTransactionError",o))},fetchInitialData:function(){return e()},trapAuthResponse:function(){return!1},toJSON:function(){var e=t.Controller.prototype.toJSON.apply(this,arguments);return i.extend(i.pick(this.options,"appState"),e)},toggleButtonState:function(t){var e=this.$el.find(".button");e.toggleClass("link-button-disabled",t)},postRenderAnimation:function(){this.trigger("pageRendered",{page:this.className})}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(9)],o=function(t,e){var n=t._,i=["OAuthError","AuthSdkError","AuthPollStopError","AuthApiError"];return t.Model.extend({doTransaction:function(t,e){var o=this;return t.call(this,this.appState.get("transaction")).then(function(t){return o.trigger("setTransaction",t),t}).fail(function(t){if("AuthPollStopError"!==t.name&&(o.trigger("setTransactionError",t),o.trigger("error",o,t.xhr),e||n.indexOf(i,t.name)===-1))throw t})},manageTransaction:function(t){var i=this,o=t.call(this,this.appState.get("transaction"),n.bind(this.setTransaction,this));return e.isPromise(o)&&o.fail(function(t){"AuthPollStopError"!==t.name&&(i.trigger("setTransactionError",t),i.trigger("error",i,t.xhr))}),e.resolve(o)},startTransaction:function(t){var n=this,i=t.call(this,this.settings.getAuthClient());return e.isPromise(i)?i.then(function(t){return n.trigger("setTransaction",t),t}).fail(function(t){throw n.trigger("setTransactionError",t),n.trigger("error",n,t.xhr),t}):e.resolve(i)},setTransaction:function(t){this.appState.set("transaction",t)}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(100),n(96),n(101)],o=function(t,e,n,i){var o=t._,r={title:function(){var n=e.getFactorLabel(this.model.get("__provider__"),this.model.get("__factorType__"));return t.loc("enroll.totp.title","login",[n])},subtitle:o.partial(t.loc,"enroll.totp.enterCode","login"),
autoSave:!0,noButtonBar:!0,attributes:{"data-se":"step-sendcode"},formChildren:function(){return[n.Input({name:"passCode",input:i,type:"text",placeholder:t.loc("mfa.challenge.enterCode.placeholder","login"),params:{innerTooltip:t.loc("mfa.challenge.enterCode.tooltip","login")}}),n.Toolbar({noCancelButton:!0,save:t.loc("oform.verify","login")})]}};return r}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e", "base64"));
  res.write(new Buffer(",n){var i,o;i=[n(38)],o=function(t){var e={},n={OKTA_VERIFY:{label:"factor.totpSoft.oktaVerify",description:"factor.totpSoft.description",iconClassName:"mfa-okta-verify",sortOrder:1},OKTA_VERIFY_PUSH:{label:"factor.oktaVerifyPush",description:"factor.push.description",iconClassName:"mfa-okta-verify",sortOrder:1},GOOGLE_AUTH:{label:"factor.totpSoft.googleAuthenticator",description:"factor.totpSoft.description",iconClassName:"mfa-google-auth",sortOrder:2},SYMANTEC_VIP:{label:"factor.totpHard.symantecVip",description:"factor.totpHard.description",iconClassName:"mfa-symantec",sortOrder:3},RSA_SECURID:{label:"factor.totpHard.rsaSecurId",description:"factor.totpHard.description",iconClassName:"mfa-rsa",sortOrder:4},ON_PREM:{label:"",description:"factor.totpHard.description",iconClassName:"mfa-onprem",sortOrder:4},DUO:{label:"factor.duo",description:"factor.duo.description",iconClassName:"mfa-duo",sortOrder:5},YUBIKEY:{label:"factor.totpHard.yubikey",description:"factor.totpHard.yubikey.description",iconClassName:"mfa-yubikey",sortOrder:6},SMS:{label:"factor.sms",description:"factor.sms.description",iconClassName:"mfa-okta-sms",sortOrder:7},CALL:{label:"factor.call",description:"factor.call.description",iconClassName:"mfa-okta-call",sortOrder:8},QUESTION:{label:"factor.securityQuestion",description:"factor.securityQuestion.description",iconClassName:"mfa-okta-security-question",sortOrder:9},WINDOWS_HELLO:{label:"factor.windowsHello",description:"factor.windowsHello.signin.description",iconClassName:"mfa-windows-hello",sortOrder:10},U2F:{label:"factor.u2f",description:"factor.u2f.description",iconClassName:"mfa-u2f",sortOrder:11}};return e.getFactorName=function(t,e){return"OKTA"===t&&"token:software:totp"===e?"OKTA_VERIFY":"OKTA"===t&&"push"===e?"OKTA_VERIFY_PUSH":"GOOGLE"===t?"GOOGLE_AUTH":"SYMANTEC"===t&&"token"===e?"SYMANTEC_VIP":"RSA"===t&&"token"===e?"RSA_SECURID":"DEL_OATH"===t&&"token"===e?"ON_PREM":"DUO"===t&&"web"===e?"DUO":"YUBICO"===t&&"token:hardware"===e?"YUBIKEY":"OKTA"===t&&"sms"===e?"SMS":"OKTA"===t&&"call"===e?"CALL":"OKTA"===t&&"question"===e?"QUESTION":"FIDO"===t&&"webauthn"===e?"WINDOWS_HELLO":"FIDO"===t&&"u2f"===e?"U2F":void 0},e.isOktaVerify=function(t,e){return"OKTA"===t&&("token:software:totp"===e||"push"===e)},e.getFactorLabel=function(i,o){var r=n[e.getFactorName(i,o)].label;return t.loc(r,"login")},e.getFactorDescription=function(i,o){var r=n[e.getFactorName(i,o)].description;return t.loc(r,"login")},e.getFactorIconClassName=function(t,i){return n[e.getFactorName(t,i)].iconClassName},e.getFactorSortOrder=function(t,i){return n[e.getFactorName(t,i)].sortOrder},e.getRememberDeviceValue=function(t){return t&&t.get("rememberDeviceByDefault")},e.getSecurityQuestionLabel=function(e){var n=t.loc("security."+e.question);return n.indexOf("L10N_ERROR")<0?n:e.questionText},e}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(6),n(5),n(102),n(59),n(84)],o=function(t,e,n,i){function o(t){var e=t.title,n=t.text;return!(!e||!n||e===n)}function r(t){return o(t)?t:{text:t.text||t}}return i.extend({template:e.compile('\t      {{#if params}}\t        {{#if params.innerTooltip}}\t          <span class="input-tooltip icon form-help-16"></span>\t        {{/if}}\t        {{#if params.icon}}\t          <span class="icon input-icon {{params.icon}}"></span>\t        {{/if}}\t      {{/if}}\t      <input type="{{type}}" placeholder="{{placeholder}}" name="{{name}}" \t        id="{{inputId}}" value="{{value}}" autocomplete="off"/>\t    '),postRender:function(){var e,n=this.options.params;n&&n.innerTooltip&&(e=r(n.innerTooltip),this.$(".input-tooltip").qtip({content:e,style:{classes:"okta-sign-in-tooltip qtip-custom qtip-shadow"},position:{my:"bottom left",at:"top center",adjust:{method:"flip"},viewport:t("body")},hide:{fixed:!0},show:{delay:0}}))},focus:function(){if(!n.isIE())return i.prototype.focus.apply(this,arguments)}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(2)],o=function(t){var e=window.XMLHttpRequest,n={},i="withCredentials"in new e,o="undefined"!=typeof XDomainRequest;return n.corsIsLimited=function(){return o&&!i},n.corsIsNotSupported=function(){return!(i||o)},n.corsIsNotEnabled=function(t){return 0===t.status},n.localStorageIsNotSupported=function(){var t="test";try{return localStorage.setItem(t,t),localStorage.removeItem(t),!1}catch(e){return!0}},n.supportsPushState=function(t){return t=t||window,!(!t.history||!t.history.pushState)},n.isIE=function(){return/(msie|trident)/i.test(navigator.userAgent)},n.getUserLanguages=function(){var e,n;return navigator.languages?navigator.languages:(e=[],n=["language","userLanguage","browserLanguage","systemLanguage"],t.each(n,function(t){navigator[t]&&e.push(navigator[t])}),e)},n}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(104)],o=function(t,e){return t.View.extend({template:'\t      <a href="#" class="link help js-back" data-se="back-link">\t        {{i18n code="mfa.backToFactors" bundle="login"}}\t      </a>\t    ',className:"auth-footer",events:{"click .js-back":function(t){t.preventDefault(),this.back()}},back:function(){this.state.set("navigateDir",e.DIRECTION_BACK),this.options.appState.get("prevLink")?this.model.doTransaction(function(t){return t.prev()}):this.options.appState.trigger("navigate","signin/enroll")}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){!(t.exports={DIRECTION_BACK:"DIRECTION_BACK",RECOVERY_TYPE_PASSWORD:"PASSWORD",RECOVERY_TYPE_UNLOCK:"UNLOCK",RECOVERY_FACTOR_TYPE_SMS:"SMS",RECOVERY_FACTOR_TYPE_EMAIL:"EMAIL",RECOVERY_FACTOR_TYPE_CALL:"CALL",SUCCESS:"SUCCESS",FORGOT_PASSWORD_EMAIL_SENT:"FORGOT_PASSWORD_EMAIL_SENT",UNLOCK_ACCOUNT_EMAIL_SENT:"UNLOCK_ACCOUNT_EMAIL_SENT",CONFIG_ERROR:"CONFIG_ERROR",UNSUPPORTED_BROWSER_ERROR:"UNSUPPORTED_BROWSER_ERROR",OAUTH_ERROR:"OAUTH_ERROR",ALL_OPTIONAL_NONE_ENROLLED:"ALL_OPTIONAL_NONE_ENROLLED",ALL_OPTIONAL_SOME_ENROLLED:"ALL_OPTIONAL_SOME_ENROLLED",HAS_REQUIRED_NONE_ENROLLED:"HAS_REQUIRED_NONE_ENROLLED",HAS_REQUIRED_SOME_REQUIRED_ENROLLED:"HAS_REQUIRED_SOME_REQUIRED_ENROLLED",HAS_REQUIRED_ALL_REQUIRED_ENROLLED:"HAS_REQUIRED_ALL_REQUIRED_ENROLLED",PRIMARY_AUTH:"PRIMARY_AUTH",FORGOT_PASSWORD:"FORGOT_PASSWORD",UNLOCK_ACCOUNT:"UNLOCK_ACCOUNT"})},function(t,e,n){var i,o;i=[n(38),n(41),n(102),n(108),n(109),n(110),n(112),n(106),n(114),n(115),n(117),n(107),n(111),n(8)],o=function(t,e,n,i,o,r,s,a,l,c,u,p,h,d){function f(t,e){return v.find(t.stateLessRouteHandlers,function(n){return e===t[n]})}function m(t,e){return!!t&&(t!==a||e.get("features.securityImage"))}function g(t,e,n,i){var o=setTimeout(function(){t.trigger("loading",!0)},200);return d.loadLanguage(t.get("languageCode"),e,{baseUrl:n,rewrite:i}).then(function(){clearTimeout(o),t.trigger("loading",!1)})}var v=t._,y=t.$;return t.Router.extend({Events:e.Events,initialize:function(e){var o;this.settings=new r(v.omit(e,"el","authClient"),{parse:!0}),this.settings.setAuthClient(e.authClient),e.el||this.settings.callGlobalError(new h.ConfigError(t.loc("error.required.el"))),n.corsIsLimited()&&(y.support.cors=!0,o={},o[this.settings.get("baseUrl")]="/cors/proxy",i.xdomain.slaves(o)),y("body > div").on("click",function(){}),this.appState=new c({baseUrl:this.settings.get("baseUrl"),settings:this.settings},{parse:!0});var a=new l({appState:this.appState});t.$(e.el).append(a.render().$el),this.el="#okta-sign-in",this.header=new s({el:this.el,appState:this.appState,settings:this.settings}),this.listenTo(this.appState,"change:transactionError",function(t,e){u.routeAfterAuthStatusChange(this,e)}),this.listenTo(this.appState,"change:transaction",function(t,e){u.routeAfterAuthStatusChange(this,null,e.data)}),this.listenTo(this.appState,"navigate",function(t){this.navigate(t,{trigger:!0})})},execute:function(t,e){var n=this.settings.get("recoveryToken");if(n)return this.settings.unset("recoveryToken"),void this.navigate(u.createRecoveryUrl(n),{trigger:!0});var i=this.settings.get("stateToken");if(i)return this.settings.unset("stateToken"),void this.navigate(u.createRefreshUrl(i),{trigger:!0});var o=this.appState.get("transaction");return o&&o.data||f(this,t)?void t.apply(this,e):this.settings.getAuthClient().tx.exists()?void this.navigate(u.createRefreshUrl(),{trigger:!0}):void this.navigate("",{trigger:!0})},navigate:function(n,i){return this.settings.get("features.router")?t.Router.prototype.navigate.apply(this,arguments):i&&i.trigger?e.history.loadUrl(n):void 0},render:function(t,e){e||(e={});var n=e.Beacon,i=v.extend({settings:this.settings,appState:this.appState},v.omit(e,"Beacon"));if(this.header.rendered()||(this.el=this.header.render().getContentEl()),!d.isLoaded(this.appState.get("languageCode")))return g(this.appState,this.settings.get("i18n"),this.settings.get("assets.baseUrl"),this.settings.get("assets.rewrite")).then(v.bind(this.render,this,t,e)).done();var o=this.controller;this.controller=new t(i),this.listenTo(this.controller,"all",this.trigger),this.controller.fetchInitialData().then(v.bind(function(){return m(n,this.settings)||(n=null),this.header.setBeacon(n,i),this.controller.render(),o?p.swapPages({$parent:this.el,$oldRoot:o.$el,$newRoot:this.controller.$el,dir:o.state.get("navigateDir"),ctx:this,success:function(){var t=this.appState.get("flashError"),e=this.controller.model;o.remove(),o.$el.remove(),this.controller.postRenderAnimation(),t&&(e.trigger("error",e,{responseJSON:{errorSummary:t}}),this.appState.unset("flashError"))}}):(this.el.append(this.controller.el),void this.controller.postRenderAnimation())},this)).fail(function(){o&&(o.remove(),o.$el.remove())}).done()},start:function(){var e=!1;window.addEventListener&&(window.addEventListener("popstate",v.bind(function(t){this.controller.back&&(t.preventDefault(),t.stopImmediatePropagation(),this.controller.back())},this)),e=n.supportsPushState()),t.Router.prototype.start.call(this,{pushState:e})}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(107)],o=function(t,e){function n(t,e){var n=e.get("securityImage"),i=e.get("isUndefinedUser"),o=e.get("isNewUser"),s=!i&&!o;return t.css("background-image",""),t.removeClass("new-user undefined-user"),o?void t.addClass("new-user"):i?void t.addClass("undefined-user"):s?void t.css("background-image","url("+r.escape(n)+")"):void 0}function i(e,n,i){e.qtip({prerender:!0,content:{text:t.loc("primaryauth.newUser.tooltip","login",[r.escape(n)]),button:t.loc("primaryauth.newUser.tooltip.close","login")},style:{classes:"okta-security-image-tooltip security-image-qtip qtip-custom qtip-shadow qtip-rounded",tip:{height:12,width:16}},position:{my:"top center",at:"bottom center",adjust:{method:"flip",y:-22},viewport:s("body")},hide:{event:!1,fixed:!0},show:{event:!1,delay:200}}),e.qtip("toggle",i)}function o(t,o,r){var s=t.find(".auth-beacon-security"),a=t.find(".js-auth-beacon-border"),l=!o.get("isUndefinedUser"),c=o.get("isNewUser"),u=t.find(".radial-progress-bar"),p=o.get("baseUrl").match(/https?:\/\/(.[^\/]+)/)[1],h=200;return r?void(l?(s.qtip("destroy"),a.removeClass("auth-beacon-border"),e.radialProgressBar({$el:u,swap:function(){s.fadeOut(h,function(){n(s,o),s.fadeIn(h)})}}).then(function(){a.addClass("auth-beacon-border")}).then(function(){i(s,p,c)})):(s.qtip("destroy"),s.fadeOut(h,function(){n(s,o),a.removeClass("auth-beacon-border"),s.fadeIn(h)}))):(n(s,o),void a.toggleClass("auth-beacon-border",l))}var r=t._,s=t.$;return t.View.extend({template:'\t    <div class="beacon-blank">\t      <div class="radial-progress-bar">\t        <div class="circle left"></div>\t        <div class="circle right"></div>\t      </div>\t    </div>\t    <div class="bg-helper auth-beacon auth-beacon-security" data-se="security-beacon">\t      <div class="okta-sign-in-beacon-border auth-beacon-border js-auth-beacon-border">\t      </div>\t    </div>\t    ',className:"js-security-beacon",initialize:function(t){this.update=r.partial(o,this.$el,t.appState),this.listenTo(t.appState,"change:securityImage",this.update),this.listenTo(t.appState,"loading",function(t){this.$el.toggleClass("beacon-loading",t)}),this.options.appState.set("beaconType","security")},postRender:function(){this.update(!1)},equals:function(t){return t&&this instanceof t}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(9),n(104)],o=function(t,e){function n(e,n,i){var o=t.defer();return e.animate({"text-indent":1},{duration:200,easing:"swing",step:function(t,o){o.start=n,o.end=i,e.css("transform","scale("+t+", "+t+")")},always:function(){o.resolve(e)}}),o.promise}function i(e,n,i){var o=t.defer();return e.animate({"text-indent":1},{duration:150,easing:"swing",step:function(t,o){o.start=n,o.end=i,e.css("transform","rotate("+t+"deg)")},always:function(){o.resolve(e)}}),o.promise}var o=200,r={};return r.swapPages=function(n){var i=t.defer(),r=n.$parent,s=n.$oldRoot,a=n.$newRoot,l=n.success,c=n.ctx,u="transition-from-right";return n.dir&&n.dir===e.DIRECTION_BACK&&(u="transition-from-left"),a.addClass(u),r.append(a),r.addClass("animation-container-overflow"),a.animate({left:"0px",top:"0px",opacity:1},o,function(){r.removeClass("animation-container-overflow"),a.removeClass(u),a.removeAttr("style"),l.call(c),i.resolve()}),s.animate({height:a.height(),opacity:0},.8*o),i.promise},r.swapBeacons=function(t){var e=t.$el,n=t.swap,i=t.ctx;return this.implode(e).then(function(){return n.call(i),e}).then(this.explode)},r.explode=function(t){return n(t,0,1)},r.implode=function(t){return n(t,1,0)},r.radialProgressBar=function(t){var e=t.$el,n=t.swap,o=e.children();return i(o,0,180).then(function(){e.css({clip:"auto"})}).then(function(){var t=o.eq(0);return n(),i(t,180,360)}).then(function(){e.css({clip:"rect(0px, 96px, 96px, 48px)"}),o.css({transform:"rotate(0deg)","text-indent":"1px"})})},r}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o,i,r;
// Jaime Pillora <dev@jpillora.com> - MIT Copyright 2015
(function(n,s){
// Jaime Pillora <dev@jpillora.com> - MIT Copyright 2015
(function(t,n){var r,s,a,l,c,u,p,h,d,f,m,g,v,y,_,b,w,S,k,x,E,T,C,A,O,R=[].indexOf||function(t){for(var e=0,n=this.length;e<n;e++)if(e in this&&this[e]===t)return e;return-1};S=t.document,s="before",r="after",m="readyState",f="addEventListener",d="removeEventListener",c="dispatchEvent",_="XMLHttpRequest",u="FormData",g=["load","loadend","loadstart"],a=["progress","abort","error","timeout"],E=parseInt((/msie (\d+)/.exec(navigator.userAgent.toLowerCase())||[])[1]),isNaN(E)&&(E=parseInt((/trident\/.*; rv:(\d+)/.exec(navigator.userAgent.toLowerCase())||[])[1])),(O=Array.prototype).indexOf||(O.indexOf=function(t){var e,n,i,o;for(e=i=0,o=this.length;i<o;e=++i)if(n=this[e],n===t)return e;return-1}),C=function(t,e){return Array.prototype.slice.call(t,e)},w=function(t){return"returnValue"===t||"totalSize"===t||"position"===t},x=function(t,e){var n,i;for(n in t)if(i=t[n],!w(n))try{e[n]=t[n]}catch(o){}return e},T=function(t,e,n){var i,o,r,s;for(o=function(t){return function(i){var o,r,s;o={};for(r in i)w(r)||(s=i[r],o[r]=s===e?n:s);return n[c](t,o)}},r=0,s=t.length;r<s;r++)i=t[r],n._has(i)&&(e["on"+i]=o(i))},k=function(t){var e;if(null!=S.createEventObject)return e=S.createEventObject(),e.type=t,e;try{return new Event(t)}catch(n){return{type:t}}},l=function(t){var e,i,o;return i={},o=function(t){return i[t]||[]},e={},e[f]=function(t,e,r){i[t]=o(t),i[t].indexOf(e)>=0||(r=r===n?i[t].length:r,i[t].splice(r,0,e))},e[d]=function(t,e){var r;return t===n?void(i={}):(e===n&&(i[t]=[]),r=o(t).indexOf(e),void(r!==-1&&o(t).splice(r,1)))},e[c]=function(){var i,r,s,a,l,c,u,p;for(i=C(arguments),r=i.shift(),t||(i[0]=x(i[0],k(r))),a=e["on"+r],a&&a.apply(n,i),p=o(r).concat(o("*")),s=c=0,u=p.length;c<u;s=++c)l=p[s],l.apply(n,i)},e._has=function(t){return!(!i[t]&&!e["on"+t])},t&&(e.listeners=function(t){return C(o(t))},e.on=e[f],e.off=e[d],e.fire=e[c],e.once=function(t,n){var i;return i=function(){return e.off(t,i),n.apply(null,arguments)},e.on(t,i)},e.destroy=function(){return i={}}),e},A=l(!0),A.EventEmitter=l,A[s]=function(t,e){if(t.length<1||t.length>2)throw"invalid hook";return A[f](s,t,e)},A[r]=function(t,e){if(t.length<2||t.length>3)throw"invalid hook";return A[f](r,t,e)},A.enable=function(){t[_]=y,p&&(t[u]=v)},A.disable=function(){t[_]=A[_],t[u]=p},b=A.headers=function(t,e){var n,i,o,r,s,a,l,c,u;switch(null==e&&(e={}),typeof t){case"object":i=[];for(o in t)s=t[o],r=o.toLowerCase(),i.push(""+r+":\t"+s);return i.join("\n");case"string":for(i=t.split("\n"),l=0,c=i.length;l<c;l++)n=i[l],/([^:]+):\s*(.+)/.test(n)&&(r=null!=(u=RegExp.$1)?u.toLowerCase():void 0,a=RegExp.$2,null==e[r]&&(e[r]=a));return e}},p=t[u],v=function(t){var e;this.fd=t?new p(t):new p,this.form=t,e=[],Object.defineProperty(this,"entries",{get:function(){var n;return n=t?C(t.querySelectorAll("input,select")).filter(function(t){var e;return"checkbox"!==(e=t.type)&&"radio"!==e||t.checked}).map(function(t){return[t.name,"file"===t.type?t.files:t.value]}):[],n.concat(e)}}),this.append=function(t){return function(){var n;return n=C(arguments),e.push(n),t.fd.append.apply(t.fd,n)}}(this)},p&&(A[u]=p,t[u]=v),h=t[_],A[_]=h,y=t[_]=function(){var t,e,n,i,o,u,p,h,d,y,w,S,k,C,O,N,I;return t=-1,I=new A[_],y={},k=null,u=void 0,C=void 0,w=void 0,d=function(){var e,n,i,o;if(w.status=k||I.status,k===t&&E<10||(w.statusText=I.statusText),k!==t){o=b(I.getAllResponseHeaders());for(e in o)i=o[e],w.headers[e]||(n=e.toLowerCase(),w.headers[n]=i)}},h=function(){I.responseType&&"text"!==I.responseType?"document"===I.responseType?(w.xml=I.responseXML,w.data=I.responseXML):w.data=I.response:(w.text=I.responseText,w.data=I.responseText),"responseURL"in I&&(w.finalUrl=I.responseURL)},N=function(){o.status=w.status,o.statusText=w.statusText},O=function(){"text"in w&&(o.responseText=w.text),"xml"in w&&(o.responseXML=w.xml),"data"in w&&(o.response=w.data),"finalUrl"in w&&(o.responseURL=w.finalUrl)},i=function(t){for(;t>e&&e<4;)o[m]=++e,1===e&&o[c]("loadstart",{}),2===e&&N(),4===e&&(N(),O()),o[c]("readystatechange",{}),4===e&&setTimeout(n,0)},n=function(){u||o[c]("load",{}),o[c]("loadend",{}),u&&(o[m]=0)},e=0,S=function(t){var e,n;return 4!==t?void i(t):(e=A.listeners(r),n=function(){var t;return e.length?(t=e.shift(),2===t.length?(t(y,w),n()):3===t.length&&y.async?t(y,w,n):n()):i(4)},void n())},o=y.xhr=l(),I.onreadystatechange=function(t){try{2===I[m]&&d()}catch(e){}4===I[m]&&(C=!1,d(),h()),S(I[m])},p=function(){u=!0},o[f]("error",p),o[f]("timeout",p),o[f]("abort",p),o[f]("progress",function(){e<3?S(3):o[c]("readystatechange",{})}),("withCredentials"in I||A.addWithCredentials)&&(o.withCredentials=!1),o.status=0,o.open=function(t,n,i,o,r){e=0,u=!1,C=!1,y.headers={},y.headerNames={},y.status=0,w={},w.headers={},y.method=t,y.url=n,y.async=i!==!1,y.user=o,y.pass=r,S(1)},o.send=function(t){var e,n,i,r,l,c,u,p;for(p=["type","timeout","withCredentials"],c=0,u=p.length;c<u;c++)n=p[c],i="type"===n?"responseType":n,i in o&&(y[n]=o[i]);y.body=t,l=function(){var t,e,r,s,l,c;for(T(a,I,o),o.upload&&T(a.concat(g),I.upload,o.upload),C=!0,I.open(y.method,y.url,y.async,y.user,y.pass),l=["type","timeout","withCredentials"],r=0,s=l.length;r<s;r++)n=l[r],i="type"===n?"responseType":n,n in y&&(I[i]=y[n]);c=y.headers;for(t in c)e=c[t],I.setRequestHeader(t,e);y.body instanceof v&&(y.body=y.body.fd),I.send(y.body)},e=A.listeners(s),(r=function(){var t,n;return e.length?(t=function(t){return"object"!=typeof t||"number"!=typeof t.status&&"number"!=typeof w.status?void r():(x(t,w),R.call(t,"data")<0&&(t.data=t.response||t.text),void S(4))},t.head=function(t){return x(t,w),S(2)},t.progress=function(t){return x(t,w),S(3)},n=e.shift(),1===n.length?t(n(y)):2===n.length&&y.async?n(y,t):t()):l()})()},o.abort=function(){k=t,C?I.abort():o[c]("abort",{})},o.setRequestHeader=function(t,e){var n,i;n=null!=t?t.toLowerCase():void 0,i=y.headerNames[n]=y.headerNames[n]||t,y.headers[i]&&(e=y.headers[i]+", "+e),y.headers[i]=e},o.getResponseHeader=function(t){var e;return e=null!=t?t.toLowerCase():void 0,w.headers[e]},o.getAllResponseHeaders=function(){return b(w.headers)},I.overrideMimeType&&(o.overrideMimeType=function(){return I.overrideMimeType.apply(I,arguments)}),I.upload&&(o.upload=y.upload=l()),o},"function"==typeof this.define&&this.define.amd?(i=[],!(o=function(){return A}.apply(e,i))):(this.exports||this).xhook=A}).call(this,n);var a,l,c,u,p,h,d,f,m,g,v,y,_,b,w,S,k,x,E,T,C,A,O,R,N,I,P,L,M,D,U,F,B,j,q,$,H,V,W;k=!1,L=function(t){var e,n;k||w();for(e in t)n=t[e],A("adding slave: "+e),L[e]=n},v={},y=function(t,e){var n;return v[t]?v[t]:(n=f.createElement("iframe"),n.id=n.name=_(),A("creating iframe "+n.id),n.src=""+t+e,n.setAttribute("style","display:none;"),f.body.appendChild(n),v[t]=n.contentWindow)},w=function(){var t,e,n;return k=!0,e=function(t,e){var n,i,o,r,s;return o=t[0],r=t[1],n=E(r,"Blob"),i=E(r,"File"),n||i?(s=new FileReader,s.onload=function(){return t[1]=null,i&&(t[2]=r.name),e(["XD_BLOB",t,this.result,r.type])},s.readAsArrayBuffer(r),1):0},t=function(t,n){var i;t.forEach(function(e,n){var i,o,r,s,a;if(o=e[0],r=e[1],E(r,"FileList"))for(t.splice(n,1),s=0,a=r.length;s<a;s++)i=r[s],t.splice(n,0,[o,i])}),i=0,t.forEach(function(o,r){i+=e(o,function(e){t[r]=e,0===--i&&n()})}),0===i&&n()},n=function(e,n){var i,o,r;return n.on("xhr-event",function(){return e.xhr.dispatchEvent.apply(null,arguments)}),n.on("xhr-upload-event",function(){return e.xhr.upload.dispatchEvent.apply(null,arguments)}),o=F(e),o.headers=e.headers,e.withCredentials&&(p.master&&(o.headers[p.master]=f.cookie),o.slaveCookie=p.slave),r=function(){return n.emit("request",o)},e.body&&(o.body=e.body,E(o.body,"FormData"))?(i=o.body.entries,o.body=["XD_FD",i],void t(i,r)):void r()},"addWithCredentials"in $||($.addWithCredentials=!0),$.before(function(t,e){var i,o,r;return o=I(t.url),o&&o.origin!==d?L[o.origin]?(A("proxying request to slave: '"+o.origin+"'"),t.async===!1?(j("sync not supported"),e()):(i=y(o.origin,L[o.origin]),r=h(_(),i),r.on("response",function(t){return e(t),r.close()}),t.xhr.addEventListener("abort",function(){return r.emit("abort")}),void(r.ready?n(t,r):r.once("ready",function(){return n(t,r)})))):(o&&A("no slave matching: '"+o.origin+"'"),e()):e()})},x=!1,R=function(t){var e,n;x||S();for(e in t)n=t[e],A("adding master: "+e),R[e]=n},b=null,S=function(){return x=!0,A("handling incoming sockets..."),b=function(t,e){var n,i,o,r;"null"===t&&(t="*"),o=null;for(n in R){r=R[n];try{if(i=B(n),i.test(t)){o=B(r);break}}catch(s){}}return o?(e.once("request",function(t){var n,i,r,s,a,l,c,u,p,h,d;if(A("request: "+t.method+" "+t.url),l=I(t.url),!l||!o.test(l.path))return j("blocked request to path: '"+l.path+"' by regex: "+o),void e.close();u=new XMLHttpRequest,u.open(t.method,t.url),u.addEventListener("*",function(t){return e.emit("xhr-event",t.type,F(t))}),u.upload&&u.upload.addEventListener("*",function(t){return e.emit("xhr-upload-event",t.type,F(t))}),e.once("abort",function(){return u.abort()}),u.onreadystatechange=function(){var t;if(4===u.readyState){t={status:u.status,statusText:u.statusText,data:u.response,headers:$.headers(u.getAllResponseHeaders())};try{t.text=u.responseText}catch(n){}return e.emit("response",t)}},t.withCredentials&&(u.withCredentials=!0,t.slaveCookie&&(t.headers[t.slaveCookie]=f.cookie)),t.timeout&&(u.timeout=t.timeout),t.type&&(u.responseType=t.type),d=t.headers;for(a in d)c=d[a],u.setRequestHeader(a,c);if(t.body instanceof Array&&"XD_FD"===t.body[0]){for(s=new $.FormData,r=t.body[1],p=0,h=r.length;p<h;p++)n=r[p],"XD_BLOB"===n[0]&&4===n.length&&(i=new Blob([n[2]],{type:n[3]}),n=n[1],n[1]=i),s.append.apply(s,n);t.body=s}u.send(t.body||null)}),void A("slave listening for requests on socket: "+e.id)):void j("blocked request from: '"+t+"'")},n===n.parent?j("slaves must be in an iframe"):n.parent.postMessage("XDPING_"+l,"*")},c="XD_CHECK",D={},T=!0,h=function(t,e){var n,i,o,r,s,l;return s=!1,l=D[t]=$.EventEmitter(!0),l.id=t,l.once("close",function(){return l.destroy(),l.close()}),r=[],l.emit=function(){var e,n;e=M(arguments),n="string"==typeof e[1]?" -> "+e[1]:"",A("send socket: "+t+": "+e[0]+n),e.unshift(t),s?o(e):r.push(e)},o=function(t){T&&(t=JSON.stringify(t)),e.postMessage(t,"*")},l.close=function(){l.emit("close"),A("close socket: "+t),D[t]=null},l.once(c,function(e){for(T="string"==typeof e,s=l.ready=!0,l.emit("ready"),A("ready socket: "+t+" (emit #"+r.length+" pending)");r.length;)o(r.shift())}),i=0,n=function(o){return function(){e.postMessage([t,c,{}],"*"),s||(i++>=q.timeout/a?(j("Timeout waiting on iframe socket"),m.fire("timeout"),l.fire("abort")):setTimeout(n,a))}}(this),setTimeout(n),A("new socket: "+t),l},N=function(t){return f.addEventListener?n.addEventListener("message",t):n.attachEvent("onmessage",t)},U=function(){return N(function(t){var e,n,i,o;if(e=t.data,"string"==typeof e){if(/^XDPING(_(V\d+))?$/.test(e)&&RegExp.$2!==l)return j("your master is not compatible with your slave, check your xdomain.js version");if(/^xdomain-/.test(e))e=e.split(",");else if(T)try{e=JSON.parse(e)}catch(r){return}}if(e instanceof Array&&(i=e.shift(),/^xdomain-/.test(i)&&(o=D[i],null!==o))){if(o===s){if(!b)return;o=h(i,t.source),b(t.origin,o)}n="string"==typeof e[1]?" -> "+e[1]:"",A("receive socket: "+i+": "+e[0]+n),o.fire.apply(o,e)}})},$=(this.exports||this).xhook,q=function(t){t&&(t.masters&&R(t.masters),t.slaves&&L(t.slaves))},q.masters=R,q.slaves=L,q.debug=!1,q.timeout=15e3,a=100,p=q.cookies={master:"Master-Cookie",slave:"Slave-Cookie"},f=n.document,C=n.location,d=q.origin=C.protocol+"//"+C.host,_=function(){return"xdomain-"+Math.round(Math.random()*Math.pow(2,32)).toString(16)},M=function(t,e){return Array.prototype.slice.call(t,e)},u=n.console||{},m=null,P=function(){m=$.EventEmitter(!0),q.on=m.on,q.off=m.off},$&&P(),O=function(t){return function(e){e="xdomain ("+d+"): "+e,m.fire(t,e),("log"!==t||q.debug)&&(t in q?q[t](e):t in u?u[t](e):"warn"===t&&alert(e))}},A=O("log"),j=O("warn"),W=["postMessage","JSON"];for(H=0,V=W.length;H<V;H++)if(g=W[H],!n[g])return void j("requires '"+g+"' and this browser does not support it");E=function(t,e){return e in n&&t instanceof n[e]},l="V1",I=q.parseUrl=function(t){return/^((https?:)?\/\/[^\/\?]+)(\/.*)?/.test(t)?{origin:(RegExp.$2?"":C.protocol)+RegExp.$1,path:RegExp.$3}:(A("failed to parse absolute url: "+t),null)},B=function(t){var e;return t instanceof RegExp?t:(e=t.toString().replace(/\W/g,function(t){return"\\"+t}).replace(/\\\*/g,".*"),new RegExp("^"+e+"$"))},F=function(t){var e,n,i,o;e={};for(n in t)"returnValue"!==n&&(i=t[n],"function"!=(o=typeof i)&&"object"!==o&&(e[n]=i));return e},function(){var t,e,n,i,o,r,s,a,l,c,u;for(t={debug:function(t){if("string"==typeof t)return q.debug="false"!==t},slave:function(t){var e,n;if(t&&(e=I(t)))return n={},n[e.origin]=e.path,L(n)},master:function(t){var e,n;if(t&&(n="*"===t?{origin:"*",path:"*"}:I(t)))return e={},e[n.origin]=n.path.replace(/^\//,"")?n.path:"*",R(e)}},c=f.getElementsByTagName("script"),r=0,a=c.length;r<a;r++)if(o=c[r],/xdomain/.test(o.src))for(u=["","data-"],s=0,l=u.length;s<l;s++){i=u[s];for(n in t)(e=t[n])(o.getAttribute(i+n))}}(),U(),"function"==typeof this.define&&this.define.amd?(i=[o],r=function(t){return $=t,P(),q}.apply(e,i),!(r!==s&&(t.exports=r))):(this.exports||this).xdomain=q}).call(this,window)},function(t,e,n){var i,o;i=[n(38),n(95)],o=function(t,e){return e.extend({className:"refresh-auth-state",Model:{},Form:{noButtonBar:!0},preRender:function(){var t=this.options.token,e=this.options.appState;this.model.startTransaction(function(n){return t?(e.trigger("loading",!0),n.tx.resume({stateToken:t})):n.tx.exists()?(e.trigger("loading",!0),n.tx.resume()):void e.trigger("navigate","")})},remove:function(){return this.options.appState.trigger("loading",!1),e.prototype.remove.apply(this,arguments)}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(111),n(102),n(37),n(12),n(1)],o=function(t,e,n,i,o,r){var s="en",a=["facebook","google","linkedin","microsoft"],l=["token","id_token","code"],c=t.tpl("{{origin}}"),u=t._,p=e.ConfigError,h=e.UnsupportedBrowserError,d=t.tpl("https://ok1static.oktacdn.com/assets/js/sdk/okta-signin-widget/{{version}}");return t.Model.extend({flat:!0,authClient:void 0,local:{baseUrl:["string",!0],recoveryToken:["string",!1,void 0],stateToken:["string",!1,void 0],username:["string",!1],transformUsername:["function",!1],globalSuccessFn:"function",globalErrorFn:"function",processCreds:"function",logo:"string",helpSupportNumber:"string","features.router":["boolean",!0,!1],"features.securityImage":["boolean",!0,!1],"features.rememberMe":["boolean",!0,!0],"features.autoPush":["boolean",!0,!1],"features.smsRecovery":["boolean",!0,!1],"features.callRecovery":["boolean",!0,!1],"features.windowsVerify":["boolean",!0,!1],"features.selfServiceUnlock":["boolean",!0,!1],"features.multiOptionalFactorEnroll":["boolean",!0,!1],"features.preventBrowserFromSavingOktaPassword":["boolean",!0,!0],language:["any",!1],i18n:["object",!1],"assets.baseUrl":["string",!1],"assets.rewrite":{type:"function",value:u.identity},authScheme:["string",!1,"OAUTH2"],"authParams.display":{type:"string",values:["none","popup","page"]},"authParams.responseMode":{type:"string",values:["query","fragment","form_post","okta_post_message"]},"authParams.responseType":["any",!1,"id_token"],"authParams.scopes":["array",!1],clientId:"string",redirectUri:"string",idps:["array",!1,[]],idpDisplay:{type:"string",values:["PRIMARY","SECONDARY"],value:"SECONDARY"},oAuthTimeout:["number",!1],"helpLinks.help":"string","helpLinks.forgotPassword":"string","helpLinks.unlock":"string","helpLinks.custom":"array"},derived:{supportedLanguages:{deps:["i18n"],fn:function(t){return u.union(r.supportedLanguages,u.keys(t))},cache:!0},languageCode:{deps:["language","supportedLanguages"],fn:function(t,e){var o,r=n.getUserLanguages(),a=u.clone(r),l=i.toLower(e);u.isString(t)?a.unshift(t):u.isFunction(t)&&a.unshift(t(e,r)),a.push(s),o=i.toLower(i.expandLanguages(a));var c,p;for(c=0;c<o.length;c++)if(p=l.indexOf(o[c]),p>-1)return e[p]}},oauth2Enabled:{deps:["clientId","authScheme","authParams.responseType"],fn:function(t,e,n){if(!t)return!1;if("oauth2"!==e.toLowerCase())return!1;var i=u.isArray(n)?n:[n];return u.intersection(i,l).length>0},cache:!0},oauthRedirectUri:{deps:["redirectUri"],fn:function(t){if(t)return t;var e=window.location.origin;if(!e){var n=window.location.href,i=window.location.pathname;""!==i&&(e=n.substring(0,n.lastIndexOf(i)))}return c({origin:e})}},configuredSocialIdps:{deps:["idps"],fn:function(t){return u.filter(t,function(t){return u.contains(a,t.type.toLowerCase())})},cache:!0},socialAuthConfigured:{deps:["configuredSocialIdps"],fn:function(t){return!u.isEmpty(t)},cache:!0},socialAuthPositionTop:{deps:["socialAuthConfigured","idpDisplay"],fn:function(t,e){return!(!t||"PRIMARY"!==e.toUpperCase())},cache:!0}},initialize:function(e){e.baseUrl?e.globalSuccessFn?n.corsIsNotSupported()&&this.callGlobalError(new h(t.loc("error.unsupported.cors"))):this.callGlobalError(new p(t.loc("error.required.success"))):this.callGlobalError(new p(t.loc("error.required.baseUrl")))},setAuthClient:function(t){this.authClient=t},getAuthClient:function(){return this.authClient},set:function(){try{return t.Model.prototype.set.apply(this,arguments)}catch(e){var n=e.message?e.message:e;this.callGlobalError(new p(n))}},callGlobalSuccess:function(t,e){var n=u.extend(e,{status:t});u.defer(u.partial(this.get("globalSuccessFn"),n))},callGlobalError:function(t){var e=this.get("globalErrorFn")||this.options.globalErrorFn;if(!e)throw t;e(t)},transformUsername:function(t,e){var n=this.get("transformUsername");return n&&u.isFunction(n)?n(t,e):t},parse:function(t){if(t.authParams&&t.authParams.scope&&(o.deprecate('Use "scopes" instead of "scope"'),t.authParams.scopes=t.authParams.scope,delete t.authParams.scope),t.labels||t.country){o.deprecate('Use "i18n" instead of "labels" and "country"');var e=t.labels||{};u.each(t.country,function(t,n){e["country."+n]=t}),t.i18n={},u.each(r.supportedLanguages,function(n){t.i18n[n]=e}),delete t.labels,delete t.country}t.assets||(t.assets={});var n=t.assets.baseUrl;return n?"/"===n[n.length-1]&&(t.assets.baseUrl=n.substring(0,n.length-1)):t.assets.baseUrl=d({version:r.version}),t}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(104)],o=function(t,e){function n(n){this.name=e.CONFIG_ERROR,this.message=n||t.loc("error.config")}function i(n){this.name=e.UNSUPPORTED_BROWSER_ERROR,this.message=n||t.loc("error.unsupported.browser")}function o(t){this.name=e.OAUTH_ERROR,this.message=t}return n.prototype=new Error,i.prototype=new Error,o.prototype=new Error,{ConfigError:n,UnsupportedBrowserError:i,OAuthError:o}}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(107),n(113)],o=function(t,e,n){function i(t){return t&&t.equals(n)}function o(t){t.currentBeacon&&(t.currentBeacon.remove(),t.currentBeacon=null)}function r(t,e,n,i){t.add(e,{selector:n,options:i}),t.currentBeacon=t.first()}function s(t,e,n){return t||e?!t&&n.loading?"load":t&&i(t)?e?"swap":"unload":t&&t.equals(e,n)?"same":!t&&e?"add":t&&!e?"remove":t instanceof e?"fade":"swap":"none"}var a="no-beacon",l="beacon-small beacon-loading";return t.View.extend({currentBeacon:null,template:'\t      <div class="okta-sign-in-header auth-header">\t        {{#if logo}}\t        <img src="{{logo}}" class="auth-org-logo"/>\t        {{/if}}\t        <div data-type="beacon-container" class="beacon-container"></div>\t      </div>\t      <div class="auth-content"><div class="auth-content-inner"></div></div>\t    ',initialize:function(t){t.settings.get("features.securityImage")||(this.$el.addClass(a),this.listenTo(t.appState,"loading",this.setLoadingBeacon),this.listenTo(t.appState,"removeLoading",this.removeLoadingBeacon))},setBeacon:function(t,n){var c='[data-type="beacon-container"]',u=this.$(c),p=s(this.currentBeacon,t,n),h=this;switch(p){case"none":return void this.$el.addClass(a);case"same":return;case"add":return this.$el.removeClass(a),r(this,t,c,n),e.explode(u);case"remove":return this.$el.addClass(a),e.implode(u).then(function(){o(h)}).done();case"fade":if(!this.currentBeacon.fadeOut)throw new Error('The current beacon is missing the "fadeOut" method');return n.animate=!0,this.currentBeacon.fadeOut().then(function(){o(h),r(h,t,c,n)}).done();case"swap":return e.swapBeacons({$el:u,swap:function(){var e=i(h.currentBeacon);o(h),e&&(u.removeClass(l),h.$el.removeClass(a)),r(h,t,c,n)}}).done();case"load":return u.addClass(l),r(h,t,c,n),e.explode(u);case"unload":return this.removeLoadingBeacon();default:throw new Error('the "'+p+'" is not recognized')}},setLoadingBeacon:function(t){t&&!i(this.currentBeacon)&&this.setBeacon(n,{loading:!0})},removeLoadingBeacon:function(){var t=this,n=this.$('[data-type="beacon-container"]');return e.implode(n).then(function(){o(t),n.removeClass(l)}).done()},getTemplateData:function(){return this.settings.toJSON({verbose:!0})},getContentEl:function(){return this.$(".auth-content-inner")}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38)],o=function(t){return t.View.extend({template:'\t      <div class="beacon-blank"/>\t      <div class="bg-helper auth-beacon auth-beacon-security" data-se="loading-beacon">\t      <div class="okta-sign-in-beacon-border auth-beacon-border js-auth-beacon-border"/>\t      </div>\t    ',equals:function(t){return t&&this instanceof t}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38)],o=function(t){var e="can-remove-beacon";return t.View.extend({className:"auth-container main-container",id:"okta-sign-in",attributes:{"data-se":"auth-container"},initialize:function(t){this.listenTo(t.appState,"change:beaconType",function(t,n){this.$el.toggleClass(e,"security"===n)})}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(9),n(116),n(102),n(111)],o=function(t,e,n,i,o){function r(t,n){var i=d({baseUrl:t,username:n});return a.isEmpty(n)||a.isUndefined(n)?e(p):e(l.get(i)).then(function(t){return t.pwdImg===u?h:t.pwdImg})}function s(e){if(e>60&&e<=1440){var n=e/60;return t.loc("hours","login",[n])}if(e>1440){var i=e/1440;return t.loc("days","login",[i])}return 1===e?t.loc("minutes.oneMinute","login"):t.loc("minutes","login",[e])}var a=t._,l=t.$,c=t.Handlebars.compile,u="/img/security/unknown.png",p="/img/security/default.png",h="/img/security/unknown-device.png",d=c("{{baseUrl}}/login/getimage?username={{username}}");return t.Model.extend({initialize:function(){if(this.settings.get("features.securityImage")){var e=this;this.listenTo(this,"change:username",function(n,s){r(this.get("baseUrl"),s).then(function(t){n.set("securityImage",t)}).fail(function(n){if(!i.corsIsNotEnabled(n))throw n;e.settings.callGlobalError(new o.UnsupportedBrowserError(t.loc("error.enabled.cors")))}).done()})}},local:{baseUrl:"string",lastAuthResponse:["object",!0,{}],transaction:"object",transactionError:"object",username:"string",factors:"object",policy:"object",securityImage:["string",!0,p],userCountryCode:"string",userPhoneNumber:"string",factorActivationType:"string",flashError:"object",beaconType:"string",languageCode:["string",!0]},setAuthResponse:function(t){var e=this;if(t._embedded&&t._embedded.policy&&this.set("policy",t._embedded.policy),t._embedded&&t._embedded.factors){var i=this.settings,o=a.map(t._embedded.factors,function(t){return t.settings=i,t.appState=e,t});this.set("factors",new n.Collection(o,{parse:!0}))}this.set("lastAuthResponse",t)},derived:{isSuccessResponse:{deps:["lastAuthResponse"],fn:function(t){return"SUCCESS"===t.status}},isMfaRequired:{deps:["lastAuthResponse"],fn:function(t){return"MFA_REQUIRED"===t.status}},isMfaEnroll:{deps:["lastAuthResponse"],fn:function(t){return"MFA_ENROLL"===t.status}},isMfaChallenge:{deps:["lastAuthResponse"],fn:function(t){return"MFA_CHALLENGE"===t.status}},isMfaRejectedByUser:{deps:["lastAuthResponse"],fn:function(t){return"REJECTED"===t.factorResult}},isMfaTimeout:{deps:["lastAuthResponse"],fn:function(t){return"TIMEOUT"===t.factorResult}},isMfaEnrollActivate:{deps:["lastAuthResponse"],fn:function(t){return"MFA_ENROLL_ACTIVATE"===t.status}},isWaitingForActivation:{deps:["isMfaEnrollActivate","lastAuthResponse"],fn:function(t,e){return t&&"WAITING"===e.factorResult}},hasMfaRequiredOptions:{deps:["lastAuthResponse","factors"],fn:function(t,e){return("MFA_REQUIRED"===t.status||"MFA_CHALLENGE"===t.status)&&(e&&e.length>1)}},userId:{deps:["lastAuthResponse"],fn:function(t){return t._embedded&&t._embedded.user?t._embedded.user.id:null}},isPwdExpiringSoon:{deps:["lastAuthResponse"],fn:function(t){return"PASSWORD_WARN"===t.status}},passwordExpireDays:{deps:["lastAuthResponse"],fn:function(t){return t._embedded&&t._embedded.policy&&t._embedded.policy.expiration?t._embedded.policy.expiration.passwordExpireDays:null}},recoveryType:{deps:["lastAuthResponse"],fn:function(t){return t.recoveryType}},factorType:{deps:["lastAuthResponse"],fn:function(t){return t.factorType}},factor:{deps:["lastAuthResponse"],fn:function(t){return t._embedded&&t._embedded.factor?t._embedded.factor:null}},activatedFactorId:{deps:["factor"],fn:function(t){return t?t.id:null}},activatedFactorType:{deps:["factor"],fn:function(t){return t?t.factorType:null}},activatedFactorProvider:{deps:["factor"],fn:function(t){return t?t.provider:null}},qrcode:{deps:["factor"],fn:function(t){try{return t._embedded.activation._links.qrcode.href}catch(e){return null}}},activationSendLinks:{deps:["factor"],fn:function(t){var e;try{e=t._embedded.activation._links.send}catch(n){e=[]}return e}},textActivationLinkUrl:{deps:["activationSendLinks"],fn:function(t){var e=a.findWhere(t,{name:"sms"});return e?e.href:null}},emailActivationLinkUrl:{deps:["activationSendLinks"],fn:function(t){var e=a.findWhere(t,{name:"email"});return e?e.href:null}},sharedSecret:{deps:["factor"],fn:function(t){try{return t._embedded.activation.sharedSecret}catch(e){return null}}},duoEnrollActivation:{deps:["factor"],fn:function(t){return t&&t._embedded&&t._embedded.activation?t._embedded.activation:null}},prevLink:{deps:["lastAuthResponse"],fn:function(t){return t._links&&t._links.prev?t._links.prev.href:null}},user:{deps:["lastAuthResponse"],fn:function(t){return t._embedded&&t._embedded.user?t._embedded.user:null}},recoveryQuestion:{deps:["user"],fn:function(t){return t&&t.recovery_question?t.recovery_question.question:null}},userProfile:{deps:["user"],fn:function(t){return t&&t.profile?t.profile:null}},userEmail:{deps:["userProfile"],fn:function(t){return t&&t.login?t.login:null}},userFullName:{deps:["userProfile"],fn:function(t){return t&&(t.firstName||t.lastName)?t.firstName+" "+t.lastName:""}},hasExistingPhones:{deps:["lastAuthResponse"],fn:function(t){if(!t._embedded||!t._embedded.factors)return!1;var e=t._embedded.factors,n=a.findWhere(e,{factorType:"sms",provider:"OKTA"});return!(!n||!n._embedded)&&!!n._embedded.phones.length}},hasExistingPhonesForCall:{deps:["lastAuthResponse"],fn:function(t){if(!t._embedded||!t._embedded.factors)return!1;var e=t._embedded.factors,n=a.findWhere(e,{factorType:"call",provider:"OKTA"});return!(!n||!n._embedded)&&!!n._embedded.phones.length}},isUndefinedUser:{deps:["securityImage"],fn:function(t){return t===p}},isNewUser:{deps:["securityImage"],fn:function(t){return t===h}},allowRememberDevice:{deps:["policy"],fn:function(t){return t&&t.allowRememberDevice}},rememberDeviceLabel:{deps:["policy"],fn:function(e){if(e&&e.rememberDeviceLifetimeInMinutes>0){var n=s(e.rememberDeviceLifetimeInMinutes);return t.loc("rememberDevice.timebased","login",[n])}return e&&0===e.rememberDeviceLifetimeInMinutes?t.loc("rememberDevice.devicebased","login"):t.loc("rememberDevice","login")}},rememberDeviceByDefault:{deps:["policy"],fn:function(t){return t&&t.rememberDeviceByDefault}}},parse:function(t){return this.settings=t.settings,a.extend(a.omit(t,"settings"),{languageCode:this.settings.get("languageCode")})}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(9),n(100),n(98)],o=function(t,e,n,i){var o=t._,r=6e3,s=i.extend({extraProperties:!0,flat:!1,props:{id:"string",factorType:{type:"string",values:["sms","call","token","token:software:totp","token:hardware","question","push","u2f"]},provider:{type:"string",values:["OKTA","RSA","DEL_OATH","SYMANTEC","GOOGLE","YUBICO","FIDO"]},enrollment:{type:"string",values:["OPTIONAL","REQUIRED"]},status:{type:"string",values:["NOT_SETUP","ACTIVE"]},profile:["object"],vendorName:"string"},local:{answer:"string",backupFactor:"object",showAnswer:"boolean",rememberDevice:"boolean",autoPush:["boolean",!0,!1]},derived:{isOktaFactor:{deps:["provider"],fn:function(t){return"OKTA"===t}},factorName:{deps:["provider","factorType"],fn:n.getFactorName},factorLabel:{deps:["provider","factorType","vendorName"],fn:function(t,e,i){return"DEL_OATH"===t?i:n.getFactorLabel(t,e)}},factorDescription:{deps:["provider","factorType"],fn:n.getFactorDescription},sortOrder:{deps:["provider","factorType"],fn:n.getFactorSortOrder},iconClassName:{deps:["provider","factorType"],fn:n.getFactorIconClassName},securityQuestion:{deps:["profile","factorType"],fn:function(t,e){return"question"!==e?null:t&&n.getSecurityQuestionLabel(t)}},phoneNumber:{deps:["profile","factorType"],fn:function(t,e){return o.contains(["sms","call"],e)?t&&t.phoneNumber:null}},deviceName:{deps:["profile","factorType"],fn:function(t,e){return"push"!==e?null:t&&t.name}},enrolled:{deps:["status"],fn:function(t){return"ACTIVE"===t}},required:{deps:["enrollment"],fn:function(t){return"REQUIRED"===t}},canUseResend:{deps:["provider","factorType"],fn:function(t,e){return"OKTA"===t&&"push"===e}},isSMSorCall:{deps:["factorType"],fn:function(t){return o.contains(["sms","call"],t)}}},parse:function(t){return this.settings=t.settings,this.appState=t.appState,t.rememberDevice=n.getRememberDeviceValue(this.appState),o.omit(t,["settings","appState"])},validate:function(){if(this.get("isSMSorCall")&&!this.get("answer"))return{answer:t.loc("model.validation.field.blank")}},save:function(){var t=!!this.get("rememberDevice");return this.doTransaction(function(n){var i={rememberDevice:t};"question"===this.get("factorType")?i.answer=this.get("answer"):i.passCode=this.get("answer");var s;if("MFA_REQUIRED"===n.status){var a=o.findWhere(n.factors,{id:this.get("id")});s=a.verify(i)}else if(this.get("canUseResend")&&n.resend){var l=n.data._links.resend[0];s=n.resend(l.name)}else s=n.verify(i);return this.trigger("save"),s.then(function(t){return"MFA_CHALLENGE"===t.status&&t.poll?e.delay(r).then(function(){return t.poll(r)}):t}).fail(function(t){throw t})})}}),a=t.Collection.extend({model:s,comparator:"sortOrder",parse:function(t){this.lastUsedFactor=t[0];var e=o.findWhere(t,{provider:"OKTA",factorType:"push"});if(!e)return t;var n=o.findWhere(t,{provider:"OKTA",factorType:"token:software:totp"}),i=n===t[0],r=o.reduce(t,function(t,i){var o="OKTA"===i.provider,r=o&&"token:software:totp"===i.factorType,a=o&&"push"===i.factorType,l="ACTIVE"!==i.status,c=r&&(l||"ACTIVE"===e.status),u=a&&l&&"ACTIVE"===n.status;return c||u?t:(a&&(i.backupFactor=new s(n,{parse:!0})),t.push(i),t)},[]);return i&&(this.lastUsedFactor=e),r},getDefaultFactor:function(){var t=o.pick(this.lastUsedFactor,"factorType","provider");return this.findWhere(t)},getFirstUnenrolledRequiredFactor:function(){return this.findWhere({required:!0,enrolled:!1})}});return{Model:s,Collection:a}}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(118),n(119),n(104),n(102),n(111),n(120)],o=function(t,e,n,i,o,r,s){var a={},l=t.tpl("signin/verify/{{provider}}/{{factorType}}"),c=t.tpl("signin/enroll/{{provider}}/{{factorType}}"),u=t.tpl("signin/enroll-activate/{{provider}}/{{factorType}}{{#if step}}/{{step}}{{/if}}"),p=t.tpl("signin/recovery/{{recoveryToken}}"),h=t.tpl("signin/refresh-auth-state{{#if token}}/{{token}}{{/if}}"),d=t.tpl("{{baseUrl}}/login/sessionCookieRedirect?checkAccountSetupComplete=true&token={{{token}}}&redirectUrl={{{redirectUrl}}}");return a.createVerifyUrl=function(t,e){
return l({provider:encodeURIComponent(t.toLowerCase()),factorType:encodeURIComponent(e)})},a.createEnrollFactorUrl=function(t,e){return c({provider:encodeURIComponent(t.toLowerCase()),factorType:encodeURIComponent(e)})},a.createActivateFactorUrl=function(t,e,n){return u({provider:encodeURIComponent(t.toLowerCase()),factorType:encodeURIComponent(e),step:!!n&&encodeURIComponent(n)})},a.createRecoveryUrl=function(t){return p({recoveryToken:encodeURIComponent(t)})},a.createRefreshUrl=function(t){var e=t?encodeURIComponent(t):null;return h({token:e})},a.routeAfterAuthStatusChange=function(l,c,u){if(c&&c.xhr&&o.corsIsNotEnabled(c.xhr))return void l.settings.callGlobalError(new r.UnsupportedBrowserError(t.loc("error.enabled.cors")));if(c&&c.errorCode===s.INVALID_TOKEN_EXCEPTION)return l.appState.set("flashError",t.loc("error.expired.session")),l.controller.state.set("navigateDir",i.DIRECTION_BACK),void l.navigate("",{trigger:!0});if(!c&&u&&u.status&&(l.appState.setAuthResponse(u),!l.controller||!l.controller.trapAuthResponse(u)))switch(u.status){case"SUCCESS":return l.settings.get("oauth2Enabled")?void n.getTokens(l.settings,{sessionToken:u.sessionToken}):u.recoveryType===i.RECOVERY_TYPE_UNLOCK?void l.navigate("signin/account-unlocked",{trigger:!0}):void l.settings.callGlobalSuccess(i.SUCCESS,{user:u._embedded.user,session:{token:u.sessionToken,setCookieAndRedirect:function(t){e.redirect(d({baseUrl:l.settings.get("baseUrl"),token:encodeURIComponent(u.sessionToken),redirectUrl:encodeURIComponent(t)}))}}});case"MFA_REQUIRED":var p=l.appState.get("factors").getDefaultFactor(),h=a.createVerifyUrl(p.get("provider"),p.get("factorType"));return void l.navigate(h,{trigger:!0});case"MFA_CHALLENGE":return void l.appState.get("transaction").prev().then(function(t){l.appState.set("transaction",t)}).done();case"MFA_ENROLL":return void l.navigate("signin/enroll",{trigger:!0});case"MFA_ENROLL_ACTIVATE":var f=a.createActivateFactorUrl(l.appState.get("activatedFactorProvider"),l.appState.get("activatedFactorType"));return void l.navigate(f,{trigger:!0});case"PASSWORD_WARN":case"PASSWORD_EXPIRED":return void l.navigate("signin/password-expired",{trigger:!0});case"RECOVERY_CHALLENGE":var m=u.factorType.toLowerCase()===i.RECOVERY_FACTOR_TYPE_EMAIL.toLowerCase(),g=u.recoveryType===i.RECOVERY_TYPE_PASSWORD,v=u.recoveryType===i.RECOVERY_TYPE_UNLOCK;return void(g&&m?l.navigate("signin/recovery-emailed",{trigger:!0}):v&&m?l.navigate("signin/unlock-emailed",{trigger:!0}):l.navigate("signin/recovery-challenge",{trigger:!0}));case"RECOVERY":return void l.navigate("signin/recovery-question",{trigger:!0});case"PASSWORD_RESET":return void l.navigate("signin/password-reset",{trigger:!0});case"LOCKED_OUT":return void(l.settings.get("features.selfServiceUnlock")?l.navigate("signin/unlock",{trigger:!0}):l.controller.model.trigger("error",l.controller.model,{responseJSON:{errorCauses:[],errorSummary:t.loc("error.auth.lockedOut","login")}}));default:throw new Error("Unknown status: "+u.status)}},a}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(2)],o=function(t){return{redirect:function(t){window.location=t},constantError:function(t){return function(){throw new Error(t)}},getUrlQueryString:function(e){t.isObject(e)||(e={});var n=t.without(t.map(e,function(t,e){if(void 0!==t&&null!==t)return e+"="+encodeURIComponent(t)}),void 0).join("&");return t.isEmpty(n)?"":"?"+n}}}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(104),n(111)],o=function(t,e,n){function i(t,e){return r.isArray(t.responseType)?r.contains(t.responseType,e):e===t.responseType}var o={},r=t._;return o.getTokens=function(o,s){function a(t){o.callGlobalSuccess(e.SUCCESS,t)}function l(t){o.callGlobalError(new n.OAuthError(t.message))}var c=o.getAuthClient(),u=o.toJSON({verbose:!0}),p={},h={};r.extend(p,r.pick(u,"clientId","redirectUri"),r.pick(u.authParams,"responseType","responseMode","display","scopes"),s),h.popupTitle=t.loc("socialauth.popup.title","login"),h.timeout=u.oAuthTimeout,"page"===p.display||i(p,"code")?c.token.getWithRedirect(p,h):p.sessionToken?c.token.getWithoutPrompt(p,h).then(a).fail(l).done():c.token.getWithPopup(p,h).then(a).fail(l).done()},o}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){!(t.exports={INVALID_TOKEN_EXCEPTION:"E0000011"})},function(t,e,n){var i,o;i=[n(38),n(122),n(9),n(100),n(95),n(104),n(96),n(123)],o=function(t,e,n,i,o,r,s,a){var l=t.$,c=t._;return o.extend({className:"mfa-verify-duo duo-form",Model:{props:{host:"string",signature:"string",postAction:"string",factorId:"string",stateToken:"string",rememberDevice:"boolean"},initialize:function(){var t=i.getRememberDeviceValue(this.appState);this.set("rememberDevice",t)},getInitOptions:function(){var t=!!this.get("rememberDevice");return this.doTransaction(function(e){var n={rememberDevice:t},i=c.findWhere(e.factors,{provider:"DUO",factorType:"web"});return i.verify(n).fail(function(t){throw t})})},verify:function(t){var e=this.get("postAction"),i=this.get("factorId"),o=this,r={id:i,stateToken:this.get("stateToken"),sig_response:t},s=this.get("rememberDevice");return n(l.post(e,r)).then(function(){return o.doTransaction(function(t){var e;return s&&(e={rememberDevice:s}),t.poll(e)})}).fail(function(t){o.trigger("error",o,t.xhr)})}},Form:{autoSave:!0,noButtonBar:!0,title:c.partial(t.loc,"factor.duo"),attributes:{"data-se":"factor-duo"},postRender:function(){this.add('<iframe frameborder="0"></iframe>'),this.options.appState.get("allowRememberDevice")&&this.addInput({label:!1,"label-top":!0,placeholder:this.options.appState.get("rememberDeviceLabel"),className:"margin-btm-0",name:"rememberDevice",type:"checkbox"}),e.init({host:this.model.get("host"),sig_request:this.model.get("signature"),iframe:this.$("iframe").get(0),post_action:c.bind(this.model.verify,this.model)})}},Footer:a,fetchInitialData:function(){var t=this;return this.model.getInitOptions().then(function(e){var n=e.data;if(!(n._embedded&&n._embedded.factor&&n._embedded.factor._embedded&&n._embedded.factor._embedded.verification))throw new Error("Response does not have duo verification options");var i=n._embedded.factor._embedded.verification;t.model.set({host:i.host,signature:i.signature,postAction:i._links.complete.href,factorId:n._embedded.factor.id,stateToken:n.stateToken})})},trapAuthResponse:function(){if(this.options.appState.get("isMfaChallenge"))return!0}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i;i=function(){function t(t,e){throw new Error("Duo Web SDK error: "+t+(e?"\nSee "+e+" for more information":""))}function e(t){return t.replace(/([a-z])([A-Z])/,"$1-$2").toLowerCase()}function n(t,n){return"dataset"in t?t.dataset[n]:t.getAttribute("data-"+e(n))}function i(t,e,n,i){"addEventListener"in window?t.addEventListener(e,i,!1):t.attachEvent(n,i)}function o(t,e,n,i){"removeEventListener"in window?t.removeEventListener(e,i,!1):t.detachEvent(n,i)}function r(t){i(document,"DOMContentLoaded","onreadystatechange",t)}function s(t){o(document,"DOMContentLoaded","onreadystatechange",t)}function a(t){i(window,"message","onmessage",t)}function l(t){o(window,"message","onmessage",t)}function c(e){if(e){0===e.indexOf("ERR|")&&t(e.split("|")[1]),e.indexOf(":")!==-1&&2===e.split(":").length||t("Duo was given a bad token.  This might indicate a configuration problem with one of Duo's client libraries.","https://www.duosecurity.com/docs/duoweb#first-steps");var n=e.split(":");return v=e,y=n[0],_=n[1],{sigRequest:e,duoSig:n[0],appSig:n[1]}}}function u(){if(b=document.getElementById(k),!b)throw new Error('This page does not contain an iframe for Duo to use.Add an element like <iframe id="duo_iframe"></iframe> to this page.  See https://www.duosecurity.com/docs/duoweb#3.-show-the-iframe for more information.');f(),s(u)}function p(t){return Boolean(t.origin==="https://"+g&&"string"==typeof t.data&&(t.data.match(w)||t.data.match(S)))}function h(t){t&&(t.host&&(g=t.host),t.sig_request&&c(t.sig_request),t.post_action&&(x=t.post_action),t.post_argument&&(E=t.post_argument),t.iframe&&("tagName"in t.iframe?b=t.iframe:"string"==typeof t.iframe&&(k=t.iframe))),b?f():(b=document.getElementById(k),b?f():r(u)),s(h)}function d(t){p(t)&&(m(t.data),l(d))}function f(){g||(g=n(b,"host"),g||t("No API hostname is given for Duo to use.  Be sure to pass a `host` parameter to Duo.init, or through the `data-host` attribute on the iframe element.","https://www.duosecurity.com/docs/duoweb#3.-show-the-iframe")),y&&_||(c(n(b,"sigRequest")),y&&_||t("No valid signed request is given.  Be sure to give the `sig_request` parameter to Duo.init, or use the `data-sig-request` attribute on the iframe element.","https://www.duosecurity.com/docs/duoweb#3.-show-the-iframe")),""===x&&(x=n(b,"postAction")||x),"sig_response"===E&&(E=n(b,"postArgument")||E),b.src=["https://",g,"/frame/web/v1/auth?tx=",y,"&parent=",document.location.href].join(""),a(d)}function m(t){x(t+":"+_)}var g,v,y,_,b,w=/^(?:AUTH|ENROLL)+\|[A-Za-z0-9\+\/=]+\|[A-Za-z0-9\+\/=]+$/,S=/^ERR\|[\w\s\.\(\)]+$/,k="duo_iframe",x="",E="sig_response";return r(h),{init:h,_parseSigRequest:c,_isDuoMessage:p}}.call(e,n,e,t),/**
	 * Duo Web SDK v2
	 * Copyright 2015, Duo Security
	 */
!(void 0!==i&&(t.exports=i))},function(t,e,n){var i,o;i=[n(38),n(104)],o=function(t,e){var n=t._;return t.View.extend({template:'\t      <a href="#" class="link {{linkClassName}}" data-se="signout-link">\t        {{linkText}}\t      </a>\t    ',className:"auth-footer clearfix",events:{"click a":function(t){t.preventDefault();var n=this;this.model.doTransaction(function(t){return t.cancel()}).then(function(){n.state.set("navigateDir",e.DIRECTION_BACK),n.options.appState.trigger("navigate","")})}},getTemplateData:function(){return{linkClassName:n.isUndefined(this.options.linkClassName)?"goto":this.options.linkClassName,linkText:this.options.linkText||t.loc("signout","login")}}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(68),n(97),n(127),n(130),n(131),n(125),n(132),n(133),n(134),n(123)],o=function(t,e,n,i,o,r,s,a,l,c,u){return n.extend({className:"mfa-verify",initialize:function(n){var i,p=n.appState.get("factors"),h=n.factorType,d=n.provider;switch(h){case"question":i=s;break;case"sms":case"call":i=a;break;case"token":case"token:software:totp":i=o;break;case"token:hardware":i=r;break;case"push":i=l;break;default:throw new Error("Unrecognized factor type")}if(this.model=p.findWhere({provider:d,factorType:h}),!this.model)throw new Error("Unrecognized factor/provider");this.addListeners(),this.add(new i(this.toJSON())),"push"===h&&this.model.get("isOktaFactor")&&(this.add(c,{options:{model:this.model.get("backupFactor")}}),this.settings.get("features.autoPush")&&this.add(e,{options:{model:this.model,name:"autoPush",placeholder:t.loc("autoPush","login"),label:!1,"label-top":!1,className:"margin-btm-0"}}),this.options.appState.get("allowRememberDevice")&&this.add(e,{options:{model:this.model,name:"rememberDevice",placeholder:this.options.appState.get("rememberDeviceLabel"),label:!1,"label-top":!0,className:"margin-btm-0"}}),this.listenTo(this.model,"change:rememberDevice",function(t,e){t.get("backupFactor").set("rememberDevice",e)})),this.add(new u(this.toJSON()))},trapAuthResponse:function(){return!(!this.options.appState.get("isMfaChallenge")&&!this.options.appState.get("isMfaRequired"))||("push"==this.options.factorType&&(this.settings.get("features.autoPush")&&this.model.get("autoPush")?i.setAutoPushCookie(this.options.appState.get("userId")):i.removeAutoPushCookie(this.options.appState.get("userId"))),!1)}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(126)],o=function(t,e){var n=t._;return t.Form.extend({className:"mfa-verify-question",autoSave:!0,noCancelButton:!0,save:n.partial(t.loc,"mfa.challenge.verify","login"),scrollOnError:!1,layout:"o-form-theme",attributes:{"data-se":"factor-question"},initialize:function(){this.title=this.model.get("factorLabel"),this.addInput({label:this.model.get("securityQuestion"),"label-top":!0,placeholder:t.loc("mfa.challenge.answer.placeholder","login"),className:"auth-passcode",name:"answer",type:"password",input:e}),this.options.appState.get("allowRememberDevice")&&this.addInput({label:!1,"label-top":!0,placeholder:this.options.appState.get("rememberDeviceLabel"),className:"margin-btm-0",name:"rememberDevice",type:"checkbox"})}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(101)],o=function(t,e){return e.extend({template:t.tpl('\t        <input type="password" placeholder="{{placeholder}}" name="{{name}}" id="{{inputId}}" value="{{value}}"/>\t        <span class="password-toggle">\t          <span class="button button-dark button-show">\t            {{i18n code="mfa.challenge.answer.showAnswer" bundle="login"}}</span>\t          <span class="button button-hide">{{i18n code="mfa.challenge.answer.hideAnswer" bundle="login"}}</span>\t        </span>'),initialize:function(){this.events["click .password-toggle .button-show"]="_showPassword",this.events["click .password-toggle .button-hide"]="_hidePassword",this.delegateEvents()},changeType:function(t){e.prototype.changeType.apply(this,arguments),this.$(".password-toggle").toggleClass("password-toggle-on","password"!==t)},_showPassword:function(){this.changeType("text")},_hidePassword:function(){this.changeType("password")}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(128),n(129)],o=function(t,e){function n(t){r.removeCookie(t,{path:"/"})}function i(t,e){r.cookie(t,e,{expires:l,path:"/"})}function o(t){return a+e.getStringHash(t)}var r=t.$,s="ln",a="auto_push_",l=365,c={};return c.getCookieUsername=function(){return r.cookie(s)},c.setUsernameCookie=function(t){i(s,t)},c.removeUsernameCookie=function(){n(s)},c.isAutoPushEnabled=function(t){return void 0!==t&&"true"===r.cookie(o(t))},c.setAutoPushCookie=function(t){void 0!==t&&i(o(t),!0)},c.removeAutoPushCookie=function(t){void 0!==t&&n(o(t))},c}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i;i=function(){var t={};return t.getStringHash=function(t){for(var e=5381,n=t.length;n;)e=33*e^t.charCodeAt(--n);return e>>>0},t}.call(e,n,e,t),!(void 0!==i&&(t.exports=i))},function(t,e,n){var i,o,r;/*!
	 * jQuery Cookie Plugin v1.4.1
	 * https://github.com/carhartl/jquery-cookie
	 *
	 * Copyright 2013 Klaus Hartl
	 * Released under the MIT license
	 */
!function(s){o=[n(6)],i=s,r="function"==typeof i?i.apply(e,o):i,!(void 0!==r&&(t.exports=r))}(function(t){function e(t){return a.raw?t:encodeURIComponent(t)}function n(t){return a.raw?t:decodeURIComponent(t)}function i(t){return e(a.json?JSON.stringify(t):String(t))}function o(t){0===t.indexOf('"')&&(t=t.slice(1,-1).replace(/\\"/g,'"').replace(/\\\\/g,"\\"));try{return t=decodeURIComponent(t.replace(s," ")),a.json?JSON.parse(t):t}catch(e){}}function r(e,n){var i=a.raw?e:o(e);return t.isFunction(n)?n(i):i}var s=/\+/g,a=t.cookie=function(o,s,l){if(void 0!==s&&!t.isFunction(s)){if(l=t.extend({},a.defaults,l),"number"==typeof l.expires){var c=l.expires,u=l.expires=new Date;u.setTime(+u+864e5*c)}return document.cookie=[e(o),"=",i(s),l.expires?"; expires="+l.expires.toUTCString():"",l.path?"; path="+l.path:"",l.domain?"; domain="+l.domain:"",l.secure?"; secure":""].join("")}for(var p=o?void 0:{},h=document.cookie?document.cookie.split("; "):[],d=0,f=h.length;d<f;d++){var m=h[d].split("="),g=n(m.shift()),v=m.join("=");if(o&&o===g){p=r(v,s);break}o||void 0===(v=r(v))||(p[g]=v)}return p};a.defaults={},t.removeCookie=function(e,n){return void 0!==t.cookie(e)&&(t.cookie(e,"",t.extend({},n,{expires:-1})),!t.cookie(e))}})},function(t,e,n){var i,o;i=[n(38),n(101)],o=function(t,e){var n=t._;return t.Form.extend({className:"mfa-verify-totp",autoSave:!0,noCancelButton:!0,save:n.partial(t.loc,"mfa.challenge.verify","login"),scrollOnError:!1,layout:"o-form-theme",attributes:{"data-se":"factor-totp"},initialize:function(){var n=this.model.get("factorLabel"),i="RSA"===this.model.get("provider")||"DEL_OATH"===this.model.get("provider");this.title=n,this.subtitle=t.loc("mfa.challenge.title","login",[n]),this.addInput({label:!1,"label-top":!0,placeholder:t.loc("mfa.challenge.enterCode.placeholder","login"),className:"o-form-fieldset o-form-label-top auth-passcode",name:"answer",input:e,type:i?"password":"text"}),this.options.appState.get("allowRememberDevice")&&this.addInput({label:!1,"label-top":!0,placeholder:this.options.appState.get("rememberDeviceLabel"),className:"margin-btm-0",name:"rememberDevice",type:"checkbox"})}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(101)],o=function(t,e){var n=t._;return t.Form.extend({className:"mfa-verify-yubikey",autoSave:!0,noCancelButton:!0,save:n.partial(t.loc,"mfa.challenge.verify","login"),scrollOnError:!1,layout:"o-form-theme",attributes:{"data-se":"factor-yubikey"},initialize:function(){var n=this.model.get("factorLabel");this.title=n,this.subtitle=t.loc("factor.totpHard.yubikey.description","login"),this.addInput({label:!1,"label-top":!0,className:"o-form-fieldset o-form-label-top auth-passcode",name:"answer",input:e,type:"password"}),this.options.appState.get("allowRememberDevice")&&this.addInput({label:!1,"label-top":!0,className:"margin-btm-0",placeholder:this.options.appState.get("rememberDeviceLabel"),name:"rememberDevice",type:"checkbox"})}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(9),n(101)],o=function(t,e,n){function i(t){return"call"===t}var o=t.Handlebars.compile("({{phoneNumber}})"),r=t._,s=3e4;return t.Form.extend({className:"mfa-verify-sms-call",autoSave:!0,noCancelButton:!0,save:r.partial(t.loc,"mfa.challenge.verify","login"),scrollOnError:!1,layout:"o-form-theme",disableSubmitButton:function(){return this.model.appState.get("isMfaChallenge")},initialize:function(){var a=this;this.title=this.model.get("factorLabel");var l=this.model.get("factorType"),c=i(l);this.$el.attr("data-se","factor-"+l);var u=c?"make-call":"sms-send-code",p=c?"call-request-button":"sms-request-button",h=t.loc(c?"mfa.call":"mfa.sendCode","login"),d=t.loc(c?"mfa.redial":"mfa.resendCode","login"),f=t.loc(c?"mfa.calling":"mfa.sent","login");this.subtitle=o({phoneNumber:this.model.get("phoneNumber")}),this.listenTo(this.model,"error",function(){this.clearErrors()}),this.add(t.createButton({attributes:{"data-se":u},className:"button "+p,title:h,click:function(){a.clearErrors(),this.model.set("answer",""),this.model.save().then(r.bind(function(){return this.options.title=f,this.disable(),this.render(),a.getInputs().first().render().focus(),e.delay(s)},this)).then(r.bind(function(){this.options.title=d,this.enable(),this.render()},this))}})),this.addInput({label:!1,"label-top":!0,placeholder:t.loc("mfa.challenge.enterCode.placeholder","login"),className:"o-form-fieldset o-form-label-top auth-passcode",name:"answer",input:n,type:"text"}),this.options.appState.get("allowRememberDevice")&&this.addInput({label:!1,"label-top":!0,placeholder:this.options.appState.get("rememberDeviceLabel"),className:"margin-btm-0",name:"rememberDevice",type:"checkbox"})}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(127)],o=function(t,e){var n=t._,i=t.Handlebars.compile("{{factorName}} ({{{deviceName}}})");return t.Form.extend({className:"mfa-verify-push",autoSave:!0,noCancelButton:!0,save:n.partial(t.loc,"oktaverify.send","login"),scrollOnError:!1,layout:"o-form-theme",attributes:{"data-se":"factor-push"},events:{submit:"submit"},init", "base64"));
  res.write(new Buffer("ialize:function(){this.enabled=!0,this.listenTo(this.options.appState,"change:isMfaRejectedByUser",function(e,n){this.setSubmitState(n),n&&this.showError(t.loc("oktaverify.rejected","login"))}),this.listenTo(this.options.appState,"change:isMfaTimeout",function(e,n){this.setSubmitState(n),n&&this.showError(t.loc("oktaverify.timeout","login"))}),this.listenTo(this.options.appState,"change:isMfaRequired",function(t,e){e&&this.clearErrors()}),this.title=i({factorName:this.model.get("factorLabel"),deviceName:this.model.get("deviceName")})},setSubmitState:function(e){var n=this.$el.find(".button");this.enabled=e,e?(n.removeClass("link-button-disabled"),n.prop("value",t.loc("oktaverify.send","login"))):(n.addClass("link-button-disabled"),n.prop("value",t.loc("oktaverify.sent","login")))},submit:function(t){void 0!==t&&t.preventDefault(),this.enabled&&(this.setSubmitState(!1),this.doSave())},postRender:function(){this.settings.get("features.autoPush")&&e.isAutoPushEnabled(this.options.appState.get("userId"))&&(this.model.set("autoPush",!0),n.defer(n.bind(this.submit,this)))},doSave:function(){this.clearErrors(),this.model.isValid()&&(this.listenToOnce(this.model,"error",this.setSubmitState,!0),this.trigger("save",this.model))},showError:function(t){this.model.trigger("error",this.model,{responseJSON:{errorSummary:t}})}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(101)],o=function(t,e){function n(n){n.addDivider(),n.addInput({label:!1,"label-top":!0,placeholder:t.loc("mfa.challenge.enterCode.placeholder","login"),className:"o-form-fieldset o-form-label-top inline-input auth-passcode",name:"answer",input:e,type:"text"}),n.add(t.createButton({attributes:{"data-se":"inline-totp-verify"},className:"button inline-totp-verify",title:t.loc("mfa.challenge.verify","login"),click:function(){n.model.manageTransaction(function(t,e){return"MFA_CHALLENGE"===t.status&&t.prev?t.prev().then(function(t){e(t),n.model.save()}):void n.model.save()})}})),n.at(1).focus()}return t.Form.extend({autoSave:!0,noButtonBar:!0,scrollOnError:!1,layout:"o-form-theme",className:"mfa-verify-totp-inline",attributes:{"data-se":"factor-inline-totp"},initialize:function(){var e=this;this.listenTo(this.model,"error",function(){this.clearErrors()}),this.add(t.createButton({className:"link",attributes:{"data-se":"inline-totp-add"},title:t.loc("mfa.challenge.orEnterCode","login"),click:function(){this.remove(),n(e)}}))}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(95),n(96),n(136),n(137),n(123),n(138)],o=function(t,e,n,i,o,r,s){var a=t._;return e.extend({className:"verify-windows-hello",Model:{save:function(){if(i.isAvailable()){this.trigger("request");var t=this;return this.doTransaction(function(e){var n=a.findWhere(e.factors,{factorType:"webauthn",provider:"FIDO"});return n.verify().then(function(o){var r=o.factor;return i.getAssertion(r.challenge.nonce,[{id:r.profile.credentialId}]).then(function(e){return t.trigger("sync"),n.verify({authenticatorData:e.authenticatorData,clientData:e.clientData,signatureData:e.signature})}).fail(function(n){switch(n.message){case"AbortError":case"NotFoundError":case"NotSupportedError":return t.trigger("abort",n.message),e}throw n})})})}}},Form:{autoSave:!0,hasSavingState:!1,title:a.partial(t.loc,"factor.windowsHello","login"),subtitle:function(){return i.isAvailable()?t.loc("verify.windowsHello.subtitle","login"):""},save:a.partial(t.loc,"verify.windowsHello.save","login"),customSavingState:{stop:"abort"},modelEvents:function(){return i.isAvailable()?{request:"_startEnrollment",error:"_stopEnrollment",abort:"_stopEnrollment",sync:"_successEnrollment"}:{}},noButtonBar:function(){return!i.isAvailable()},formChildren:function(){var e=[];return i.isAvailable()||e.push(n.View({View:new s({message:t.loc("enroll.windowsHello.error.notWindows","login")})},{selector:".o-form-error-container"})),e.push(n.View({View:new o({model:this.model,visible:!1})})),e},postRender:function(){1!==this.options.appState.get("factors").length||this.model.get("__enrollmentState__")||this.model.save()},_startEnrollment:function(){this.subtitle=t.loc("verify.windowsHello.subtitle.loading","login"),this.model.trigger("spinner:show"),this.$(".o-form-button-bar").addClass("hide"),this._resetErrorMessage(),this.render()},_stopEnrollment:function(e){this.subtitle=t.loc("verify.windowsHello.subtitle","login"),this.model.trigger("spinner:hide"),this.$(".o-form-button-bar").removeClass("hide");var n;switch(e){case"NotFoundError":n=this.options.appState.get("factors").length>1?t.loc("verify.windowsHello.error.notFound.selectAnother","login"):t.loc("verify.windowsHello.error.notFound","login");break;case"NotSupportedError":n=t.loc("enroll.windowsHello.error.notConfiguredHtml","login")}if(this._resetErrorMessage(),n){var i=new s({message:n});this.$(".o-form-error-container").addClass("o-form-has-errors"),this.add(i,{selector:".o-form-error-container"}),this._errorMessageView=this.last()}this.render()},_successEnrollment:function(){this.subtitle=t.loc("verify.windowsHello.subtitle.signingIn","login"),this.render()},_resetErrorMessage:function(){this._errorMessageView&&this._errorMessageView.remove(),this._errorMessageView=void 0,this.clearErrors()}},Footer:r})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(9)],o=function(t,e){function n(t){return new e(t)}function i(t,e,i){e=e.map(function(t){return{type:"FIDO_2_0",algorithm:t.algorithm}});var o=window.msCredentials.makeCredential(t,e,i).then(function(t){return Object.freeze({credential:{id:t.id},publicKey:JSON.parse(t.publicKey),attestation:t.attestation})});return n(o)}function o(t,e){var i=e.map(function(t){return{type:"FIDO_2_0",id:t.id}}),o={accept:i},r=window.msCredentials.getAssertion(t,o).then(function(t){var e=t.signature;return Object.freeze({credential:{id:t.id},clientData:e.clientData,authenticatorData:e.authnrData,signature:e.signature})});return n(r)}return{makeCredential:i,getAssertion:o,isAvailable:function(){return window.hasOwnProperty("msCredentials")}}}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38)],o=function(t){return t.View.extend({className:"okta-waiting-spinner",attributes:{"data-se":"o-form-okta-waiting-spinner"},modelEvents:{"spinner:show":"show","spinner:hide":"hide"},initialize:function(t){t&&t.visible===!1&&this.hide()},show:function(){this.$el.removeClass("hide")},hide:function(){this.$el.addClass("hide")}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(45)],o=function(t,e){var n='\t      <span class="icon error-24"></span>\t      <h4><strong>{{{message}}}</strong></h4>\t    ';return e.extend({template:n,className:"okta-infobox-error infobox infobox-error infobox-md margin-btm-25",attributes:{"data-se":"o-form-error-windows-hello"},message:"",initialize:function(t){t&&t.message&&(this.message=t.message)},getTemplateData:function(){return{message:this.message}}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(95),n(96),n(123),n(9),n(140)],o=function(t,e,n,i,o){var r=t._;return e.extend({className:"verify-u2f",Model:{save:function(){return this.trigger("request"),this.doTransaction(function(t){var e=r.findWhere(t.factors,{factorType:"u2f",provider:"FIDO"}),n=this;return e.verify().then(function(t){var i=t.factor,r=i.profile.appId,s=[{version:i.profile.version,keyHandle:i.profile.credentialId}];n.trigger("request");var a=o.defer();return u2f.sign(r,i.challenge.nonce,s,function(t){return n.trigger("errors:clear"),t.errorCode&&0!==t.errorCode?void a.reject({responseJSON:{errorSummary:"Error Code: "+t.errorCode}}):e.verify({clientData:t.clientData,signatureData:t.signatureData}).then(a.resolve)}),a.promise})})}},Form:{autoSave:!0,hasSavingState:!1,title:r.partial(t.loc,"factor.u2f","login"),className:"verify-u2f-form",noCancelButton:!0,save:r.partial(t.loc,"verify.u2f.retry","login"),modelEvents:{error:"_showRetry",request:"_hideRetry"},formChildren:[n.View({View:'\t            <div class="u2f-verify-text">\t              <p>{{i18n code="verify.u2f.instructions" bundle="login"}}</p>\t              <p>{{i18n code="verify.u2f.instructionsBluetooth" bundle="login"}}</p>\t              <div data-se="u2f-waiting" class="okta-waiting-spinner"></div>\t            </div>'})],postRender:function(){r.defer(r.bind(function(){this.model.save()},this))},_showRetry:function(){this.$(".okta-waiting-spinner").addClass("hide"),this.$(".o-form-button-bar").show()},_hideRetry:function(){this.$(".okta-waiting-spinner").removeClass("hide"),this.$(".o-form-button-bar").hide()}},Footer:i})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e){
//Copyright 2014-2015 Google Inc. All rights reserved.
//license that can be found in the LICENSE file or at
//https://developers.google.com/open-source/licenses/bsd
"use strict";!function(){if(!("u2f"in window)&&"chrome"in window){var t,e=window.u2f={};e.EXTENSION_ID="kmendfapggjehodndflmmgagdbamhnfd",e.MessageTypes={U2F_REGISTER_REQUEST:"u2f_register_request",U2F_REGISTER_RESPONSE:"u2f_register_response",U2F_SIGN_REQUEST:"u2f_sign_request",U2F_SIGN_RESPONSE:"u2f_sign_response",U2F_GET_API_VERSION_REQUEST:"u2f_get_api_version_request",U2F_GET_API_VERSION_RESPONSE:"u2f_get_api_version_response"},e.ErrorCodes={OK:0,OTHER_ERROR:1,BAD_REQUEST:2,CONFIGURATION_UNSUPPORTED:3,DEVICE_INELIGIBLE:4,TIMEOUT:5},e.U2fRequest,e.U2fResponse,e.Error,e.Transport,e.Transports,e.SignRequest,e.SignResponse,e.RegisterRequest,e.RegisterResponse,e.RegisteredKey,e.GetJsApiVersionResponse,e.getMessagePort=function(t){if("undefined"!=typeof chrome&&chrome.runtime){var n={type:e.MessageTypes.U2F_SIGN_REQUEST,signRequests:[]};chrome.runtime.sendMessage(e.EXTENSION_ID,n,function(){chrome.runtime.lastError?e.getIframePort_(t):e.getChromeRuntimePort_(t)})}else e.isAndroidChrome_()?e.getAuthenticatorPort_(t):e.isIosChrome_()?e.getIosPort_(t):e.getIframePort_(t)},e.isAndroidChrome_=function(){var t=navigator.userAgent;return t.indexOf("Chrome")!=-1&&t.indexOf("Android")!=-1},e.isIosChrome_=function(){return $.inArray(navigator.platform,["iPhone","iPad","iPod"])>-1},e.getChromeRuntimePort_=function(t){var n=chrome.runtime.connect(e.EXTENSION_ID,{includeTlsChannelId:!0});setTimeout(function(){t(new e.WrappedChromeRuntimePort_(n))},0)},e.getAuthenticatorPort_=function(t){setTimeout(function(){t(new e.WrappedAuthenticatorPort_)},0)},e.getIosPort_=function(t){setTimeout(function(){t(new e.WrappedIosPort_)},0)},e.WrappedChromeRuntimePort_=function(t){this.port_=t},e.formatSignRequest_=function(n,i,o,r,s){if(void 0===t||t<1.1){for(var a=[],l=0;l<o.length;l++)a[l]={version:o[l].version,challenge:i,keyHandle:o[l].keyHandle,appId:n};return{type:e.MessageTypes.U2F_SIGN_REQUEST,signRequests:a,timeoutSeconds:r,requestId:s}}return{type:e.MessageTypes.U2F_SIGN_REQUEST,appId:n,challenge:i,registeredKeys:o,timeoutSeconds:r,requestId:s}},e.formatRegisterRequest_=function(n,i,o,r,s){if(void 0===t||t<1.1){for(var a=0;a<o.length;a++)o[a].appId=n;for(var l=[],a=0;a<i.length;a++)l[a]={version:i[a].version,challenge:o[0],keyHandle:i[a].keyHandle,appId:n};return{type:e.MessageTypes.U2F_REGISTER_REQUEST,signRequests:l,registerRequests:o,timeoutSeconds:r,requestId:s}}return{type:e.MessageTypes.U2F_REGISTER_REQUEST,appId:n,registerRequests:o,registeredKeys:i,timeoutSeconds:r,requestId:s}},e.WrappedChromeRuntimePort_.prototype.postMessage=function(t){this.port_.postMessage(t)},e.WrappedChromeRuntimePort_.prototype.addEventListener=function(t,e){var n=t.toLowerCase();"message"==n||"onmessage"==n?this.port_.onMessage.addListener(function(t){e({data:t})}):console.error("WrappedChromeRuntimePort only supports onMessage")},e.WrappedAuthenticatorPort_=function(){this.requestId_=-1,this.requestObject_=null},e.WrappedAuthenticatorPort_.prototype.postMessage=function(t){var n=e.WrappedAuthenticatorPort_.INTENT_URL_BASE_+";S.request="+encodeURIComponent(JSON.stringify(t))+";end";document.location=n},e.WrappedAuthenticatorPort_.prototype.getPortType=function(){return"WrappedAuthenticatorPort_"},e.WrappedAuthenticatorPort_.prototype.addEventListener=function(t,e){var n=t.toLowerCase();if("message"==n){var i=this;window.addEventListener("message",i.onRequestUpdate_.bind(i,e),!1)}else console.error("WrappedAuthenticatorPort only supports message")},e.WrappedAuthenticatorPort_.prototype.onRequestUpdate_=function(t,e){var n=JSON.parse(e.data),i=(n.intentURL,n.errorCode,null);n.hasOwnProperty("data")&&(i=JSON.parse(n.data)),t({data:i})},e.WrappedAuthenticatorPort_.INTENT_URL_BASE_="intent:#Intent;action=com.google.android.apps.authenticator.AUTHENTICATE",e.WrappedIosPort_=function(){},e.WrappedIosPort_.prototype.postMessage=function(t){var e=JSON.stringify(t),n="u2f://auth?"+encodeURI(e);location.replace(n)},e.WrappedIosPort_.prototype.getPortType=function(){return"WrappedIosPort_"},e.WrappedIosPort_.prototype.addEventListener=function(t,e){var n=t.toLowerCase();"message"!==n&&console.error("WrappedIosPort only supports message")},e.getIframePort_=function(t){var n="chrome-extension://"+e.EXTENSION_ID,i=document.createElement("iframe");i.src=n+"/u2f-comms.html",i.setAttribute("style","display:none"),document.body.appendChild(i);var o=new MessageChannel,r=function(e){"ready"==e.data?(o.port1.removeEventListener("message",r),t(o.port1)):console.error('First event on iframe port was not "ready"')};o.port1.addEventListener("message",r),o.port1.start(),i.addEventListener("load",function(){i.contentWindow.postMessage("init",n,[o.port2])})},e.EXTENSION_TIMEOUT_SEC=30,e.port_=null,e.waitingForPort_=[],e.reqCounter_=0,e.callbackMap_={},e.getPortSingleton_=function(t){e.port_?t(e.port_):(0==e.waitingForPort_.length&&e.getMessagePort(function(t){for(e.port_=t,e.port_.addEventListener("message",e.responseHandler_);e.waitingForPort_.length;)e.waitingForPort_.shift()(e.port_)}),e.waitingForPort_.push(t))},e.responseHandler_=function(t){var n=t.data,i=n.requestId;if(!i||!e.callbackMap_[i])return void console.error("Unknown or missing requestId in response.");var o=e.callbackMap_[i];delete e.callbackMap_[i],o(n.responseData)},e.sign=function(n,i,o,r,s){void 0===t?e.getApiVersion(function(a){t=void 0===a.js_api_version?0:a.js_api_version,console.log("Extension JS API Version: ",t),e.sendSignRequest(n,i,o,r,s)}):e.sendSignRequest(n,i,o,r,s)},e.sendSignRequest=function(t,n,i,o,r){e.getPortSingleton_(function(s){var a=++e.reqCounter_;e.callbackMap_[a]=o;var l="undefined"!=typeof r?r:e.EXTENSION_TIMEOUT_SEC,c=e.formatSignRequest_(t,n,i,l,a);s.postMessage(c)})},e.register=function(n,i,o,r,s){void 0===t?e.getApiVersion(function(a){t=void 0===a.js_api_version?0:a.js_api_version,console.log("Extension JS API Version: ",t),e.sendRegisterRequest(n,i,o,r,s)}):e.sendRegisterRequest(n,i,o,r,s)},e.sendRegisterRequest=function(t,n,i,o,r){e.getPortSingleton_(function(s){var a=++e.reqCounter_;e.callbackMap_[a]=o;var l="undefined"!=typeof r?r:e.EXTENSION_TIMEOUT_SEC,c=e.formatRegisterRequest_(t,i,n,l,a);s.postMessage(c)})},e.getApiVersion=function(t,n){e.getPortSingleton_(function(i){if(i.getPortType){var o;switch(i.getPortType()){case"WrappedIosPort_":case"WrappedAuthenticatorPort_":o=1.1;break;default:o=0}return void t({js_api_version:o})}var r=++e.reqCounter_;e.callbackMap_[r]=t;var s={type:e.MessageTypes.U2F_GET_API_VERSION_REQUEST,timeoutSeconds:"undefined"!=typeof n?n:e.EXTENSION_TIMEOUT_SEC,requestId:r};i.postMessage(s)})}}}()},function(t,e,n){var i,o;i=[n(38),n(95),n(104),n(117),n(91),n(142),n(143)],o=function(t,e,n,i,o,r,s){var a=t._;return e.extend({className:"enroll-choices",state:{pageType:null},Model:{},Form:{noCancelButton:!0,title:a.partial(t.loc,"enroll.choices.title","login"),noButtonBar:function(){return this.state.get("pageType")===n.ALL_OPTIONAL_NONE_ENROLLED},subtitle:function(){switch(this.state.get("pageType")){case n.ALL_OPTIONAL_SOME_ENROLLED:case n.HAS_REQUIRED_ALL_REQUIRED_ENROLLED:return t.loc("enroll.choices.optional","login");default:return t.loc("enroll.choices.description","login")}},save:function(){switch(this.state.get("pageType")){case n.ALL_OPTIONAL_SOME_ENROLLED:case n.HAS_REQUIRED_ALL_REQUIRED_ENROLLED:return t.loc("enroll.choices.submit.finish","login");case n.HAS_REQUIRED_NONE_ENROLLED:return t.loc("enroll.choices.submit.configure","login");case n.HAS_REQUIRED_SOME_REQUIRED_ENROLLED:return t.loc("enroll.choices.submit.next","login");default:return""}},initialize:function(t){this.listenTo(this,"save",function(){var e;switch(this.state.get("pageType")){case n.HAS_REQUIRED_NONE_ENROLLED:case n.HAS_REQUIRED_SOME_REQUIRED_ENROLLED:e=t.appState.get("factors").getFirstUnenrolledRequiredFactor(),t.appState.trigger("navigate",i.createEnrollFactorUrl(e.get("provider"),e.get("factorType")));break;default:return this.model.doTransaction(function(t){return t.skip()})}})},preRender:function(){var e=this.options.appState.get("factors");switch(this.state.get("pageType")){case n.HAS_REQUIRED_NONE_ENROLLED:case n.HAS_REQUIRED_SOME_REQUIRED_ENROLLED:this.add(new s({minimize:!0,collection:new t.Collection(e.where({required:!0})),appState:this.options.appState}));break;case n.HAS_REQUIRED_ALL_REQUIRED_ENROLLED:case n.ALL_OPTIONAL_SOME_ENROLLED:case n.ALL_OPTIONAL_NONE_ENROLLED:var i,o=e.where({enrolled:!0}),a=e.where({enrolled:!1});o.length>0&&(i=t.loc("enroll.choices.list.optional","login"),this.add(new r({listTitle:t.loc("enroll.choices.list.enrolled","login"),minimize:!0,collection:new t.Collection(o),appState:this.options.appState}))),this.add(new r({listTitle:i,collection:new t.Collection(a),appState:this.options.appState}))}}},initialize:function(t){var e,i,o=0,r=0,s=0,a=0;t.appState.get("factors").each(function(t){var e=t.get("required"),n=t.get("enrolled");e&&n?o++:e&&!n?r++:!e&&n?s++:e||n||a++}),e=o>0||r>0,e&&0===o?i=n.HAS_REQUIRED_NONE_ENROLLED:e&&r>0?i=n.HAS_REQUIRED_SOME_REQUIRED_ENROLLED:e&&a>0?i=n.HAS_REQUIRED_ALL_REQUIRED_ENROLLED:0===s&&a>0?i=n.ALL_OPTIONAL_NONE_ENROLLED:a>0?i=n.ALL_OPTIONAL_SOME_ENROLLED:this.model.doTransaction(function(t){return t.skip()}),this.state.set("pageType",i)}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(117)],o=function(t,e){var n=t._,i=t.View.extend({className:"enroll-factor-row clearfix",template:'\t      <div class="enroll-factor-icon-container">\t        <div class="factor-icon enroll-factor-icon {{iconClassName}}">\t        </div>\t      </div>\t      <div class="enroll-factor-description">\t        <h3 class="enroll-factor-label">{{factorLabel}}</h3>\t        {{#if factorDescription}}\t          <p>{{factorDescription}}</p>\t        {{/if}}\t        <div class="enroll-factor-button"></div>\t      </div>\t    ',attributes:function(){return{"data-se":this.model.get("factorName")}},children:function(){return this.model.get("enrolled")?[['<span class="icon success-16-green"></span>',".enroll-factor-label"]]:[[t.createButton({className:"button",title:t.loc("enroll.choices.setup","login"),click:function(){this.options.appState.trigger("navigate",e.createEnrollFactorUrl(this.model.get("provider"),this.model.get("factorType")))}}),".enroll-factor-button"]]},minimize:function(){this.$el.addClass("enroll-factor-row-min")},maximize:function(){this.$el.removeClass("enroll-factor-row-min")}});return t.ListView.extend({className:"enroll-factor-list",item:i,itemSelector:".list-content",template:'\t      {{#if listSubtitle}}\t        <div class="list-subtitle">{{listSubtitle}}</div>\t      {{/if}}\t      {{#if listTitle}}\t        <div class="list-title">{{listTitle}}</div>\t      {{/if}}\t      <div class="list-content"></div>\t    ',getTemplateData:function(){var e=t.ListView.prototype.getTemplateData.call(this);return n.extend(e,this),e},postRender:function(){this.options.minimize&&this.invoke("minimize")}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(142)],o=function(t,e){var n=t._;return e.extend({listTitle:n.partial(t.loc,"enroll.choices.list.setup","login"),className:function(){return e.prototype.className+" enroll-required-factor-list"},initialize:function(){var e=this.collection.length,n=this.collection.where({enrolled:!0}).length,i=n+1;this.listSubtitle=t.loc("enroll.choices.step","login",[i,e])},postRender:function(){var t,n;e.prototype.postRender.apply(this,arguments),t=this.options.appState.get("factors").getFirstUnenrolledRequiredFactor(),n=this.find(function(e){return e.model===t}),n.maximize()}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(122),n(9),n(95),n(103)],o=function(t,e,n,i,o){var r=t.$,s=t._;return i.extend({className:"enroll-duo duo-form",Model:{props:{host:"string",signature:"string",postAction:"string",factorId:"string",stateToken:"string"},getInitOptions:function(){return this.doTransaction(function(t){var e=s.findWhere(t.factors,{factorType:"web",provider:"DUO"});return e.enroll()})},activate:function(t){var e=this.get("postAction"),i=this.get("factorId"),o=this,s={id:i,stateToken:this.get("stateToken"),sig_response:t};return n(r.post(e,s)).then(function(){return o.doTransaction(function(t){return t.poll()})}).fail(function(t){o.trigger("error",o,t.xhr)})}},Form:{autoSave:!0,noButtonBar:!0,title:s.partial(t.loc,"enroll.duo.title","login"),postRender:function(){this.add('<iframe frameborder="0"></iframe>'),e.init({host:this.model.get("host"),sig_request:this.model.get("signature"),iframe:this.$("iframe").get(0),post_action:s.bind(this.model.activate,this.model)})}},Footer:o,fetchInitialData:function(){var t=this;return this.model.getInitOptions(this.options.appState).then(function(e){var n=e.data;if(!(n&&n._embedded&&n._embedded.factor&&n._embedded.factor._embedded&&n._embedded.factor._embedded.activation))throw new Error("Response does not have duo activation options");var i=n._embedded.factor,o=i._embedded.activation;t.model.set({host:o.host,signature:o.signature,postAction:o._links.complete.href,factorId:i.id,stateToken:n.stateToken})})},trapAuthResponse:function(){if(this.options.appState.get("isMfaEnrollActivate"))return!0}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(95),n(100),n(103),n(101)],o=function(t,e,n,i,o){var r=t._;return e.extend({className:"enroll-question",Model:{props:{question:"string",answer:["string",!0]},local:{securityQuestions:"object"},save:function(){return this.doTransaction(function(t){var e=r.findWhere(t.factors,{factorType:"question",provider:"OKTA"});return e.enroll({profile:{question:this.get("question"),answer:this.get("answer")}})})}},Form:{autoSave:!0,title:r.partial(t.loc,"enroll.securityQuestion.setup","login"),inputs:function(){return[{label:!1,"label-top":!0,name:"question",type:"select",wide:!0,options:function(){return this.model.get("securityQuestions")},params:{searchThreshold:25}},{label:!1,"label-top":!0,placeholder:t.loc("mfa.challenge.answer.placeholder","login"),className:"o-form-fieldset o-form-label-top auth-passcode",name:"answer",input:o,type:"text",params:{innerTooltip:t.loc("mfa.challenge.answer.tooltip","login")}}]}},Footer:i,fetchInitialData:function(){var t=this;return this.model.manageTransaction(function(t){var e=r.findWhere(t.factors,{factorType:"question",provider:"OKTA"});return e.questions()}).then(function(e){var i={};r.each(e,function(t){i[t.question]=n.getSecurityQuestionLabel(t)}),t.model.set("securityQuestions",i)})}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(95),n(96),n(136),n(137),n(103),n(138)],o=function(t,e,n,i,o,r,s){var a=t._;return e.extend({className:"enroll-windows-hello",Model:{local:{__isEnrolled__:"boolean"},save:function(){if(i.isAvailable())return this.trigger("request"),this.get("__isEnrolled__")?this.activate():this.doTransaction(function(t){return this._enroll(t)})},_enroll:function(t){var e=a.findWhere(t.factors,{factorType:"webauthn",provider:"FIDO"});return e.enroll()},activate:function(){return this.set("__isEnrolled__",!0),this.doTransaction(function(t){var e=t.factor.activation,n=t.user,o=this,r={rpDisplayName:e.rpDisplayName,userDisplayName:n.profile.displayName,accountName:n.profile.login,userId:n.id},s=[{algorithm:e.algorithm}],a=e.nonce;return i.makeCredential(r,s,a).then(function(e){return t.activate({credentialId:e.credential.id,publicKey:e.publicKey,attestation:null})}).fail(function(e){switch(e.message){case"AbortError":case"NotFoundError":case"NotSupportedError":return o.trigger("abort",e.message),t}throw e})})}},Form:{autoSave:!0,hasSavingState:!1,title:a.partial(t.loc,"enroll.windowsHello.title","login"),subtitle:function(){return i.isAvailable()?t.loc("enroll.windowsHello.subtitle","login"):""},save:a.partial(t.loc,"enroll.windowsHello.save","login"),customSavingState:{stop:"abort"},modelEvents:function(){return i.isAvailable()?{request:"_startEnrollment",error:"_stopEnrollment",abort:"_stopEnrollment"}:{}},noButtonBar:function(){return!i.isAvailable()},formChildren:function(){var e=[];return i.isAvailable()||e.push(n.View({View:new s({message:t.loc("enroll.windowsHello.error.notWindows","login")})},{selector:".o-form-error-container"})),e.push(n.View({View:new o({model:this.model,visible:!1})})),e},_startEnrollment:function(){this.subtitle=t.loc("enroll.windowsHello.subtitle.loading","login"),this.model.trigger("spinner:show"),this.$(".o-form-button-bar").addClass("hide"),this._resetErrorMessage(),this.render()},_stopEnrollment:function(e){this.subtitle=t.loc("enroll.windowsHello.subtitle","login"),this.model.trigger("spinner:hide"),this.$(".o-form-button-bar").removeClass("hide");var n;switch(e){case"NotSupportedError":n=t.loc("enroll.windowsHello.error.notConfiguredHtml","login")}if(this._resetErrorMessage(),n){var i=new s({message:n});this.$(".o-form-error-container").addClass("o-form-has-errors"),this.add(i,{selector:".o-form-error-container"}),this._errorMessageView=this.last()}this.render()},_resetErrorMessage:function(){this._errorMessageView&&this._errorMessageView.remove(),this._errorMessageView=void 0,this.clearErrors()}},Footer:r,trapAuthResponse:function(){if(this.options.appState.get("isMfaEnrollActivate"))return this.model.activate(),!0}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(95),n(103),n(148),n(101),n(149),n(96),n(61)],o=function(t,e,n,i,o,r,s,a){function l(t){return"call"===t}function c(t){return l(t)?"enroll-call":"enroll-sms"}function u(t){a.isEnter(t)&&(t.stopPropagation(),t.preventDefault(),"keyup"===t.type&&t.data&&t.data.model&&t.data.model.sendCode())}var p=t._,h=3e4,d={factorId:function(t){return!p.isUndefined(t)}};return e.extend({className:function(){return c(this.options.factorType)},Model:{props:{countryCode:["string",!0,"US"],phoneNumber:["string",!0],phoneExtension:["string",!1],lastEnrolledPhoneNumber:"string",passCode:["string",!0],factorId:"string"},local:{hasExistingPhones:"boolean",trapEnrollment:"boolean",ableToResend:"boolean",factorType:"string"},derived:{countryCallingCode:{deps:["countryCode"],fn:function(t){return"+"+r.getCallingCodeForCountry(t)}},fullPhoneNumber:{deps:["countryCallingCode","phoneNumber"],fn:function(t,e){return e?t+e:""}},enrolled:{deps:["lastEnrolledPhoneNumber","fullPhoneNumber"],fn:function(t,e){return t===e}}},limitResending:function(){this.set({ableToResend:!1}),p.delay(p.bind(this.set,this),h,{ableToResend:!0})},sendCode:function(){var t=this,e=this.get("fullPhoneNumber"),n=this.get("phoneExtension");return t.trigger("errors:clear"),this.doTransaction(function(i){var o="MFA_ENROLL"===i.status,r={phoneNumber:e,updatePhone:!o||t.get("hasExistingPhones")};if(l(t.get("factorType"))&&(r.phoneExtension=n),o){var s=p.findWhere(i.factors,{factorType:t.get("factorType"),provider:"OKTA"});return s.enroll({profile:r})}return t.set("trapEnrollment",!0),i.prev().then(function(e){var n=p.findWhere(e.factors,{factorType:t.get("factorType"),provider:"OKTA"});return n.enroll({profile:r})}).then(function(e){return t.set("trapEnrollment",!1),e})},!0).then(function(){t.set("lastEnrolledPhoneNumber",e),t.limitResending()}).fail(function(){t.set("ableToResend",!0),t.set("trapEnrollment",!1)})},resendCode:function(){return this.trigger("errors:clear"),this.limitResending(),this.doTransaction(function(t){return t.resend(this.get("factorType"))})},save:function(){return this.doTransaction(function(t){return t.activate({passCode:this.get("passCode")})})}},Form:function(){var e=this.options.factorType,n=l(e),a=t.loc(n?"enroll.call.setup":"enroll.sms.setup","login"),p=t.loc(n?"mfa.call":"mfa.sendCode","login"),h=t.loc(n?"mfa.redial":"mfa.resendCode","login"),f=t.loc(n?"mfa.calling":"mfa.sent","login"),m=n?"enroll-call-phone":"enroll-sms-phone",g=n?"call-request-button":"sms-request-button",v=[s.Input({name:"countryCode",type:"select",wide:!0,options:r.getCountries()}),s.Input({placeholder:t.loc("mfa.phoneNumber.placeholder","login"),className:m,name:"phoneNumber",input:i,type:"text",render:function(){this.$('input[name="phoneNumber"]').off("keydown keyup",u).keydown(u).keyup({model:this.model},u)}})];return n&&v.push(s.Input({placeholder:t.loc("mfa.phoneNumber.ext.placeholder","login"),className:"enroll-call-extension",name:"phoneExtension",input:o,type:"text"})),v.push(s.Button({title:p,attributes:{"data-se":g},className:"button button-primary js-enroll-phone "+g,click:function(){this.model.sendCode()}}),s.Button({title:h,attributes:{"data-se":g},className:"button js-enroll-phone "+g,click:function(){this.model.resendCode()},initialize:function(){this.$el.css({display:"none"}),this.listenTo(this.model,"change:ableToResend",function(t,e){e?(this.options.title=h,this.enable()):(this.options.title=f,this.disable()),this.render()})}}),s.Divider({showWhen:d}),s.Input({placeholder:t.loc("mfa.challenge.enterCode.placeholder","login"),name:"passCode",input:o,type:"text",params:{innerTooltip:t.loc("mfa.challenge.enterCode.tooltip","login")},showWhen:d}),s.Toolbar({noCancelButton:!0,save:t.loc("mfa.challenge.verify","login"),showWhen:d})),{title:a,noButtonBar:!0,autoSave:!0,className:c(e),initialize:function(){this.listenTo(this.model,"error errors:clear",function(){this.clearErrors()}),this.listenTo(this.model,"change:enrolled",function(){this.$(".js-enroll-phone").toggle()})},formChildren:v}},Footer:n,trapAuthResponse:function(){return this.options.appState.get("isMfaEnrollActivate")?(this.model.set("factorId",this.options.appState.get("activatedFactorId")),!0):!(!this.options.appState.get("isMfaEnroll")||!this.model.get("trapEnrollment"))||void 0},initialize:function(){l(this.options.factorType)?this.model.set("hasExistingPhones",this.options.appState.get("hasExistingPhonesForCall")):this.model.set("hasExistingPhones",this.options.appState.get("hasExistingPhones")),this.model.set("factorType",this.options.factorType)}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(59)],o=function(t,e){var n=t._;return e.extend({template:t.Handlebars.compile('\t      <span class="okta-form-label-inline o-form-label-inline">{{countryCallingCode}}</span>\t      <span class="okta-form-input-field input-fix o-form-control">\t        <input type="{{type}}" placeholder="{{placeholder}}" name="{{name}}" \t          id="{{inputId}}" value="{{value}}" autocomplete="off"/>\t      </span>\t    '),initialize:function(){this.listenTo(this.model,"change:countryCallingCode",function(){this.$(".o-form-label-inline").text(this.model.get("countryCallingCode"))})},preRender:function(){this.options.countryCallingCode=this.model.get("countryCallingCode")},postRender:function(){this.$el.removeClass("input-fix o-form-control"),n.defer(n.bind(function(){this.$el.parent().addClass("o-form-input-group")},this))}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(2),n(8),n(150)],o=function(t,e,n){var i={};return i.getCountries=function(){var n=t.omit(e.country,"HM","BV","TF"),i=t.map(n,function(t,e){return{name:t,code:e}});i=t.sortBy(i,"name");var o={};return t.each(i,function(t){o[t.code]=t.name}),o},i.getCallingCodeForCountry=function(t){return n[t]},i}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){!(t.exports={US:"1",AG:"1",AI:"1",AS:"1",BB:"1",BM:"1",BS:"1",CA:"1",DM:"1",DO:"1",GD:"1",GU:"1",JM:"1",KN:"1",KY:"1",LC:"1",MP:"1",MS:"1",PR:"1",SX:"1",TC:"1",TT:"1",VC:"1",VG:"1",VI:"1",RU:"7",KZ:"7",EG:"20",ZA:"27",GR:"30",NL:"31",BE:"32",FR:"33",ES:"34",HU:"36",IT:"39",RO:"40",CH:"41",AT:"43",GB:"44",GG:"44",IM:"44",JE:"44",DK:"45",SE:"46",NO:"47",SJ:"47",PL:"48",DE:"49",PE:"51",MX:"52",CU:"53",AR:"54",BR:"55",CL:"56",CO:"57",VE:"58",MY:"60",AU:"61",CC:"61",CX:"61",ID:"62",PH:"63",NZ:"64",SG:"65",TH:"66",JP:"81",KR:"82",VN:"84",CN:"86",TR:"90",IN:"91",PK:"92",AF:"93",LK:"94",MM:"95",IR:"98",SS:"211",MA:"212",EH:"212",DZ:"213",TN:"216",LY:"218",GM:"220",SN:"221",MR:"222",ML:"223",GN:"224",CI:"225",BF:"226",NE:"227",TG:"228",BJ:"229",MU:"230",LR:"231",SL:"232",GH:"233",NG:"234",TD:"235",CF:"236",CM:"237",CV:"238",ST:"239",GQ:"240",GA:"241",CG:"242",CD:"243",AO:"244",GW:"245",IO:"246",AC:"247",SC:"248",SD:"249",RW:"250",ET:"251",SO:"252",DJ:"253",KE:"254",TZ:"255",UG:"256",BI:"257",MZ:"258",ZM:"260",MG:"261",RE:"262",YT:"262",ZW:"263",NA:"264",MW:"265",LS:"266",BW:"267",SZ:"268",KM:"269",SH:"290",TA:"290",ER:"291",AW:"297",FO:"298",GL:"299",GI:"350",PT:"351",LU:"352",IE:"353",IS:"354",AL:"355",MT:"356",CY:"357",FI:"358",AX:"358",BG:"359",LT:"370",LV:"371",EE:"372",MD:"373",AM:"374",BY:"375",AD:"376",MC:"377",SM:"378",VA:"379",UA:"380",RS:"381",ME:"382",HR:"385",SI:"386",BA:"387",MK:"389",CZ:"420",SK:"421",LI:"423",FK:"500",BZ:"501",GT:"502",SV:"503",HN:"504",NI:"505",CR:"506",PA:"507",PM:"508",HT:"509",GP:"590",BL:"590",MF:"590",BO:"591",GY:"592",EC:"593",GF:"594",PY:"595",MQ:"596",SR:"597",UY:"598",CW:"599",BQ:"599",TL:"670",NF:"672",BN:"673",NR:"674",PG:"675",TO:"676",SB:"677",VU:"678",FJ:"679",PW:"680",WF:"681",CK:"682",NU:"683",WS:"685",KI:"686",NC:"687",TV:"688",PF:"689",TK:"690",FM:"691",MH:"692","001":"979",KP:"850",HK:"852",MO:"853",KH:"855",LA:"856",BD:"880",TW:"886",MV:"960",LB:"961",JO:"962",SY:"963",IQ:"964",KW:"965",SA:"966",YE:"967",OM:"968",PS:"970",AE:"971",IL:"972",BH:"973",QA:"974",BT:"975",MN:"976",NP:"977",TJ:"992",TM:"993",AZ:"994",GE:"995",KG:"996",UZ:"998",GS:500,PN:64,AQ:672,UM:1,AN:599})},function(t,e,n){var i,o;i=[n(38),n(96),n(95),n(103),n(101)],o=function(t,e,n,i,o){function r(t){return"RSA"===t}function s(t){return r(t)?"enroll-rsa":"enroll-onprem"}var a=t._;return n.extend({className:function(){return s(this.options.provider)},Model:function(){var t=this.options.provider;return{props:{credentialId:["string",!0],passCode:["string",!0],factorId:"string"},save:function(){return this.doTransaction(function(e){var n=a.findWhere(e.factors,{factorType:"token",provider:t});return n.enroll({passCode:this.get("passCode"),profile:{credentialId:this.get("credentialId")}})})}}},Form:function(){var n=this.options.provider,i=this.options.appState.get("factors"),l=i.findWhere(a.pick(this.options,"provider","factorType")),c=l.get("vendorName"),u=r(n)?t.loc("factor.totpHard.rsaSecurId","login"):c;return{title:u,noButtonBar:!0,autoSave:!0,className:s(n),formChildren:[e.Input({name:"credentialId",input:o,type:"text",placeholder:t.loc("enroll.onprem.username.placeholder","login",[c]),params:{innerTooltip:t.loc("enroll.onprem.username.tooltip","login",[c])}}),e.Input({name:"passCode",input:o,type:"password",placeholder:t.loc("enroll.onprem.passcode.placeholder","login",[c]),params:{innerTooltip:t.loc("enroll.onprem.passcode.tooltip","login",[c])}}),e.Toolbar({noCancelButton:!0,save:t.loc("mfa.challenge.verify","login")})]}},Footer:i})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(96),n(95),n(103),n(101)],o=function(t,e,n,i,o){var r=t._;return n.extend({className:"enroll-symantec",Model:{props:{credentialId:["string",!0],passCode:["string",!0],nextPassCode:["string",!0],factorId:"string"},save:function(){return this.doTransaction(function(t){var e=r.findWhere(t.factors,{factorType:"token",provider:"SYMANTEC"});return e.enroll({passCode:this.get("passCode"),nextPassCode:this.get("nextPassCode"),profile:{credentialId:this.get("credentialId")}})})}},Form:{title:r.partial(t.loc,"factor.totpHard.symantecVip","login"),subtitle:r.partial(t.loc,"enroll.symantecVip.subtitle","login"),noButtonBar:!0,autoSave:!0,className:"enroll-symantec",formChildren:function(){return[e.Input({name:"credentialId",input:o,type:"text",placeholder:t.loc("enroll.symantecVip.credentialId.placeholder","login"),params:{innerTooltip:t.loc("enroll.symantecVip.credentialId.tooltip","login")}}),e.Input({name:"passCode",input:o,type:"text",placeholder:t.loc("enroll.symantecVip.passcode1.placeholder","login"),params:{innerTooltip:t.loc("enroll.symantecVip.passcode1.tooltip","login")}}),e.Input({name:"nextPassCode",input:o,type:"text",placeholder:t.loc("enroll.symantecVip.passcode2.placeholder","login"),params:{innerTooltip:t.loc("enroll.symantecVip.passcode2.tooltip","login")}}),e.Toolbar({noCancelButton:!0,save:t.loc("mfa.challenge.verify","login")})]}},Footer:i})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(96),n(95),n(103),n(101)],o=function(t,e,n,i,o){var r=t._;return n.extend({className:"enroll-yubikey",Model:{props:{passCode:["string",!0],factorId:"string"},save:function(){return this.doTransaction(function(t){var e=r.findWhere(t.factors,{factorType:"token:hardware",provider:"YUBICO"});return e.enroll({passCode:this.get("passCode")})})}},Form:{title:r.partial(t.loc,"enroll.yubikey.title","login"),subtitle:r.partial(t.loc,"enroll.yubikey.subtitle","login"),noCancelButton:!0,save:r.partial(t.loc,"mfa.challenge.verify","login"),autoSave:!0,className:"enroll-yubikey",formChildren:[e.View({View:'<div class="yubikey-demo" data-type="yubikey-example"></div>'}),e.Input({name:"passCode",input:o,type:"password"})]},Footer:i})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(100),n(95),n(96),n(117),n(155),n(156),n(103)],o=function(t,e,n,i,o,r,s,a){var l=t._,c={__deviceType__:function(t){return void 0!==t}},u=t.View.extend({attributes:{"data-se":"app-download-instructions"},className:"app-download-instructions",template:'\t      <p class="instructions-title">{{title}}</p>\t      <span class="app-logo {{appIcon}}"></span>\t      <p class="instructions">{{{appStoreLinkText}}}</p>\t    ',initialize:function(){this.listenTo(this.model,"change:__deviceType__",this.render)},getTemplateData:function(){var n,i,o,s=e.getFactorLabel(this.model.get("__provider__"),this.model.get("__factorType__"));return o=r.STORE[this.model.get("__deviceType__")],"GOOGLE"===this.model.get("__provider__")?(n=r.GOOGLE[this.model.get("__deviceType__")],i="google-auth-38"):(n=r.OKTA[this.model.get("__deviceType__")],i="okta-verify-38"),{title:t.loc("enroll.totp.installApp","login",[s]),appStoreLinkText:t.loc("enroll.totp.downloadApp","login",[n,s,o]),appIcon:i}}}),p=n.extend({className:"enroll-totp",Model:function(){return{local:{__deviceType__:"string",__factorType__:["string",!1,this.options.factorType],__provider__:["string",!1,this.options.provider]},save:function(){return this.doTransaction(function(t){var e=l.findWhere(t.factors,{factorType:this.get("__factorType__"),provider:this.get("__provider__")});return e.enroll()})}}},Form:{title:function(){var n=e.getFactorLabel(this.model.get("__provider__"),this.model.get("__factorType__"));return t.loc("enroll.totp.title","login",[n])},subtitle:l.partial(t.loc,"enroll.totp.selectDevice","login"),autoSave:!0,noButtonBar:!0,attributes:{"data-se":"step-device-type"},formChildren:function(){var e={APPLE:"",ANDROID:""};this.settings.get("features.windowsVerify")&&"OKTA"===this.model.get("__provider__")?e.WINDOWS="":"GOOGLE"===this.model.get("__provider__")&&(e.BLACKBERRY="");var n=[i.Input({name:"__deviceType__",type:"radio",options:e,className:"device-type-input"}),i.Divider({showWhen:c}),i.View({View:u,showWhen:c}),i.Toolbar({noCancelButton:!0,save:t.loc("oform.next","login"),showWhen:c})];return n}},Footer:a});return p}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){!(t.exports={OKTA:{APPLE:"https://itunes.apple.com/us/app/okta-verify/id490179405",ANDROID:"https://play.google.com/store/apps/details?id=com.okta.android.auth",WINDOWS:"http://www.windowsphone.com/en-us/store/app/okta-verify/9df0e2c4-7301-411f-80e5-62fcf6679666"},GOOGLE:{APPLE:"https://itunes.apple.com/us/app/google-authenticator/id388497605",ANDROID:"https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2",BLACKBERRY:"https://support.google.com/accounts/answer/1066447"},STORE:{APPLE:"App Store",ANDROID:"Google Play Store",WINDOWS:"Windows Store",BLACKBERRY:"Blackberry World Store"}})},function(t,e,n){var i,o;i=[n(38),n(100),n(117)],o=function(t,e,n){var i=t._;return t.View.extend({className:"scan-instructions clearfix",template:'\t      <div class="scan-instructions-details-wrapper">\t          <div class="scan-instructions-details">\t              <p>{{instructions}}</p>\t          </div>\t      </div>\t      <div class="scan-instructions-qrcode-wrapper">\t          <div class="qrcode-wrap">\t              <img data-se="qrcode" class="qrcode-image" src="{{qrcode}}">\t              <div data-se="qrcode-success" class="qrcode-success"></div>\t              <div data-se="qrcode-error" class="qrcode-error"></div>\t          </div>\t          <a href="#" data-type="manual-setup" data-se="manual-setup" class="link manual-setup">\t            {{i18n code="enroll.totp.cannotScan" bundle="login"}}\t          </a>\t          <a href="#" data-type="refresh-qrcode" data-se="refresh-qrcode" class="link refresh-qrcode">\t            {{i18n code="enroll.totp.refreshBarcode" bundle="login"}}\t          </a>\t      </div>\t    ',
events:{'click [data-type="manual-setup"]':function(t){t.preventDefault();var e=n.createActivateFactorUrl(this.model.get("__provider__"),this.model.get("__factorType__"),"manual");this.options.appState.trigger("navigate",e)},'click [data-type="refresh-qrcode"]':function(t){t.preventDefault(),this.model.trigger("errors:clear");var e=this;this.model.doTransaction(function(t){return this.appState.get("isWaitingForActivation")?t.poll():t.activate()}).then(function(t){var n=t.data;"MFA_ENROLL_ACTIVATE"===n.status&&"WAITING"===n.factorResult&&i.defer(i.bind(e.render,e))})}},initialize:function(){this.listenTo(this.options.appState,"change:lastAuthResponse",function(){this.options.appState.get("isMfaEnrollActivate")?this.$el.toggleClass("qrcode-expired",!this.options.appState.get("isWaitingForActivation")):this.options.appState.get("isSuccessResponse")&&this.$el.addClass("qrcode-success")}),this.listenTo(this.model,"error",function(){this.options.appState.get("isMfaEnrollActivate")&&this.$el.toggleClass("qrcode-expired",!0)})},getTemplateData:function(){var n,i=e.getFactorLabel(this.model.get("__provider__"),this.model.get("__factorType__"));return n="GOOGLE"===this.model.get("__provider__")?t.loc("enroll.totp.setupGoogleAuthApp","login",[i]):t.loc("enroll.totp.setupApp","login",[i]),{instructions:n,qrcode:this.options.appState.get("qrcode")}}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(96),n(95),n(103),n(9),n(140)],o=function(t,e,n,i,o){var r=t._;return n.extend({className:"enroll-u2f",Model:{local:{__enrolled__:"boolean"},save:function(){return this.trigger("request"),this.get("__enrolled__")?this.activate():this.doTransaction(function(t){var e=r.findWhere(t.factors,{factorType:"u2f",provider:"FIDO"});return e.enroll()})},activate:function(){return this.set("__enrolled__",!0),this.trigger("errors:clear"),this.doTransaction(function(t){var e=t.factor.activation,n=e.appId,i=[{version:e.version,challenge:e.nonce}],r=this,s=o.defer();return u2f.register(n,i,[],function(e){r.trigger("errors:clear"),e.errorCode&&0!==e.errorCode?s.reject({responseJSON:{errorSummary:"Error Code: "+e.errorCode}}):s.resolve(t.activate({registrationData:e.registrationData,version:e.version,challenge:e.challenge,clientData:e.clientData}))}),s.promise})}},Form:{title:r.partial(t.loc,"enroll.u2f.title","login"),save:r.partial(t.loc,"enroll.u2f.save","login"),noCancelButton:!0,hasSavingState:!1,autoSave:!0,className:"enroll-u2f-form",modelEvents:{request:"_startEnrollment",error:"_stopEnrollment"},formChildren:[e.View({View:'<div class="u2f-instructions"><ol>\t            <li>{{i18n code="enroll.u2f.general1" bundle="login"}}</li>\t            <li>{{{i18n code="enroll.u2f.general2" bundle="login"}}}</li>\t            <li>{{i18n code="enroll.u2f.general3" bundle="login"}}</li>\t            </ol></div>'}),e.View({View:'\t            <div class="u2f-enroll-text hide">\t              <p>{{i18n code="enroll.u2f.instructions" bundle="login"}}</p>\t              <p>{{i18n code="enroll.u2f.instructionsBluetooth" bundle="login"}}</p>\t              <div data-se="u2f-devices" class="u2f-devices-images">\t                <div class="u2f-usb"></div>\t                <div class="u2f-bluetooth"></div>\t              </div>\t              <div data-se="u2f-waiting" class="okta-waiting-spinner"></div>\t            </div>'})],_startEnrollment:function(){this.$(".u2f-instructions").addClass("hide"),this.$(".u2f-enroll-text").removeClass("hide"),this.$(".o-form-button-bar").hide()},_stopEnrollment:function(){this.$(".u2f-instructions").removeClass("hide"),this.$(".u2f-enroll-text").addClass("hide"),this.$(".o-form-button-bar").show()}},Footer:i,trapAuthResponse:function(){if(this.options.appState.get("isMfaEnrollActivate"))return this.model.activate(),!0}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(100),n(95),n(96),n(117),n(156),n(103)],o=function(t,e,n,i,o,r,s){var a=t._;return n.extend({className:"barcode-totp",Model:function(){return{local:{__factorType__:["string",!1,this.options.factorType],__provider__:["string",!1,this.options.provider]}}},Form:{title:function(){var n=e.getFactorLabel(this.model.get("__provider__"),this.model.get("__factorType__"));return t.loc("enroll.totp.title","login",[n])},subtitle:a.partial(t.loc,"mfa.scanBarcode","login"),save:a.partial(t.loc,"oform.next","login"),noCancelButton:!0,attributes:{"data-se":"step-scan"},className:"barcode-scan",formChildren:[i.View({View:r})]},Footer:s,initialize:function(){this.listenTo(this.form,"save",function(){var t=o.createActivateFactorUrl(this.model.get("__provider__"),this.model.get("__factorType__"),"activate");this.options.appState.trigger("navigate",t)})}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(100),n(95),n(96),n(117),n(156),n(103)],o=function(t,e,n,i,o,r,s){var a=t._,l=6e3;return n.extend({className:"barcode-push",Model:function(){return{local:{__factorType__:["string",!1,this.options.factorType],__provider__:["string",!1,this.options.provider]}}},Form:{title:function(){var n=e.getFactorLabel(this.model.get("__provider__"),this.model.get("__factorType__"));return t.loc("enroll.totp.title","login",[n])},subtitle:a.partial(t.loc,"mfa.scanBarcode","login"),noButtonBar:!0,attributes:{"data-se":"step-scan"},className:"barcode-scan",initialize:function(){this.listenTo(this.model,"error errors:clear",function(){this.clearErrors()})},formChildren:[i.View({View:r})]},Footer:s,initialize:function(){this.pollForEnrollment()},pollForEnrollment:function(){return this.model.doTransaction(function(t){return t.poll(l)})},trapAuthResponse:function(){if(this.options.appState.get("isMfaEnrollActivate"))return!0}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(161),n(162),n(163),n(118),n(97)],o=function(t,e,n,i,o,r){var s=t.Handlebars.compile,a=t._,l=t.$,c=t.View.extend({template:'\t      <a href="#" data-se="needhelp" class="link help js-help">\t      {{i18n code="needhelp" bundle="login"}}\t      </a>\t      <ul class="help-links js-help-links">\t        <li>\t        <a href="#" data-se="forgot-password" class="link js-forgot-password">\t        {{i18n code="forgotpassword" bundle="login"}}\t        </a>\t        </li>\t        {{#if features.selfServiceUnlock}}\t          <li>\t          <a href="#" data-se="unlock" class="link js-unlock">\t          {{i18n code="unlockaccount" bundle="login"}}\t          </a>\t          </li>\t        {{/if}}\t        {{#each helpLinks.custom}}\t          <li>\t          <a href="{{href}}" class="link js-custom">{{text}}</a></li>\t        {{/each}}\t        <li>\t        <a href="{{helpLinkUrl}}" data-se="help-link" class="link js-help-link" target="_blank">\t        {{i18n code="help" bundle="login"}}\t        </a>\t        </li>\t      </ul>\t    ',className:"auth-footer",initialize:function(){this.listenTo(this.state,"change:enabled",function(t,e){this.$(":link").toggleClass("o-form-disabled",!e)})},getTemplateData:function(){var t,e=this.settings.get("helpLinks.help");return t=e?e:s("{{baseUrl}}/help/login")({baseUrl:this.settings.get("baseUrl")}),a.extend(this.settings.toJSON({verbose:!0}),{helpLinkUrl:t})},postRender:function(){this.$(".js-help-links").hide()},toggleLinks:function(t){t.preventDefault(),this.$(".js-help-links").slideToggle(200)},events:{"click .js-help":function(t){t.preventDefault(),this.state.get("enabled")&&this.toggleLinks(t)},"click .js-forgot-password":function(t){if(t.preventDefault(),this.state.get("enabled")){var e=this.settings.get("helpLinks.forgotPassword");e?o.redirect(e):this.options.appState.trigger("navigate","signin/forgot-password")}},"click .js-unlock":function(t){if(t.preventDefault(),this.state.get("enabled")){var e=this.settings.get("helpLinks.unlock");e?o.redirect(e):this.options.appState.trigger("navigate","signin/unlock")}}}});return r.extend({className:"primary-auth",state:{enabled:!0},View:e,constructor:function(t){var e;t.appState.unset("username"),this.model=new i({multiOptionalFactorEnroll:t.settings.get("features.multiOptionalFactorEnroll"),settings:t.settings,appState:t.appState},{parse:!0}),r.apply(this,arguments),this.addListeners(),t.settings.get("socialAuthConfigured")&&this.add(n,{prepend:t.settings.get("socialAuthPositionTop")}),this.add(new c(this.toJSON({appState:t.appState}))),e=this.model.get("username"),e&&this.options.appState.set("username",e)},events:{"focusout input[name=username]":function(){this.options.appState.set("username",this.model.get("username"))},"focusin input":function(t){l(t.target.parentElement).addClass("focused-input")},"focusout input":function(t){l(t.target.parentElement).removeClass("focused-input")}},initialize:function(){this.listenTo(this.model,"change:username",function(t,e){e||this.options.appState.set("username","")}),this.listenTo(this.model,"save",function(){this.state.set("enabled",!1)}),this.listenTo(this.model,"error",function(){this.state.set("enabled",!0)})}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(101)],o=function(t,e){var n=t._;return t.Form.extend({className:"primary-auth-form",noCancelButton:!0,save:n.partial(t.loc,"primaryauth.submit","login"),layout:"o-form-theme",title:function(){var e=t.loc("primaryauth.title","login");return this.settings.get("socialAuthConfigured")&&this.settings.get("socialAuthPositionTop")&&(e=""),e},initialize:function(){this.listenTo(this,"save",function(){var t=this.settings.get("processCreds");n.isFunction(t)&&t({username:this.model.get("username"),password:this.model.get("password")}),this.model.save()}),this.listenTo(this.state,"change:enabled",function(t,e){e?this.enable():this.disable()})},inputs:function(){var n=[{label:!1,"label-top":!0,placeholder:t.loc("primaryauth.username.placeholder","login"),name:"username",input:e,type:"text",params:{innerTooltip:{title:t.loc("primaryauth.username.placeholder","login"),text:t.loc("primaryauth.username.tooltip","login")},icon:"person-16-gray"}},{label:!1,"label-top":!0,placeholder:t.loc("primaryauth.password.placeholder","login"),name:"password",input:e,type:"password",params:{innerTooltip:{title:t.loc("primaryauth.password.placeholder","login"),text:t.loc("primaryauth.password.tooltip","login")},icon:"remote-lock-16"}}];return this.settings.get("features.rememberMe")&&n.push({label:!1,placeholder:t.loc("remember","login"),name:"remember",type:"checkbox","label-top":!0,className:"margin-btm-0",initialize:function(){this.listenTo(this.model,"change:remember",function(t,e){this.$(":checkbox").prop("checked",e).trigger("updateState")})}}),n},focus:function(){this.model.get("username")?this.getInputs().toArray()[1].focus():this.getInputs().first().focus()}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(119)],o=function(t,e){var n=t._,i=t.tpl('<div class="auth-divider">\t      <span class="auth-divider-text">{{text}}</span>\t    </div>'),o=t.tpl('<h2 data-se="o-form-head" class="okta-form-title o-form-head">{{title}}</h2>');return t.View.extend({className:"social-auth",children:function(){var e=[],r=this.settings.get("configuredSocialIdps"),s=i({text:t.loc("socialauth.divider.text","login")});return n.each(r,function(t){e.push(this._createButton(t))},this),this.settings.get("socialAuthPositionTop")?(e.unshift(o({title:t.loc("primaryauth.title","login")})),e.push(s)):e.unshift(s),e},_createButton:function(n){var i=n.type.toLowerCase(),o="social-auth-"+i+"-button";return t.createButton({attributes:{"data-se":o},className:"social-auth-button "+o,title:t.loc("socialauth."+i+".label"),events:{click:function(t){t.preventDefault(),e.getTokens(this.settings,{idp:n.id})}}})}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(98),n(127),n(104)],o=function(t,e,n,i){var o=t._;return e.extend({props:function(){var t,e=this.settings&&this.settings.get("username"),i=n.getCookieUsername(),o=!1;return e?(t=e,o=t===i):i&&(t=i,o=!0),{username:["string",!0,t],lastUsername:["string",!1,i],password:["string",!0],context:["object",!1],remember:["boolean",!0,o],multiOptionalFactorEnroll:["boolean",!0]}},constructor:function(e){this.settings=e&&e.settings,this.appState=e&&e.appState,t.Model.apply(this,arguments),this.listenTo(this,"change:username",function(t,e){this.set({remember:e===this.get("lastUsername")})})},parse:function(t){return o.omit(t,["settings","appState"])},save:function(){var t=this.settings.transformUsername(this.get("username"),i.PRIMARY_AUTH),e=this.get("password"),r=this.get("remember"),s=this.get("lastUsername"),a=this.get("multiOptionalFactorEnroll");return r||s!==t?r&&n.setUsernameCookie(t):n.removeUsernameCookie(),this.trigger("save"),this.appState.trigger("loading",!0),this.startTransaction(function(n){return n.signIn({username:t,password:e,options:{warnBeforePasswordExpired:!0,multiOptionalFactorEnroll:a}})}).fail(o.bind(function(){this.trigger("error"),this.appState.trigger("removeLoading"),n.removeUsernameCookie()},this)).fin(o.bind(function(){this.appState.trigger("loading",!1)},this))}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(100),n(95),n(96),n(117),n(165),n(101)],o=function(t,e,n,i,o,r,s){var a=t._;return n.extend({className:"enroll-manual-totp",Model:function(){return{local:{sharedSecret:["string",!1,this.options.appState.get("sharedSecret")],__factorType__:["string",!1,this.options.factorType],__provider__:["string",!1,this.options.provider]}}},Form:{title:function(){var n=e.getFactorLabel(this.model.get("__provider__"),this.model.get("__factorType__"));return t.loc("enroll.totp.title","login",[n])},subtitle:a.partial(t.loc,"enroll.totp.cannotScanBarcode","login"),noButtonBar:!0,attributes:{"data-se":"step-manual-setup"},formChildren:function(){return[i.View({View:'\t            <p class="okta-form-subtitle o-form-explain text-align-c">\t              {{i18n code="enroll.totp.manualSetupInstructions" bundle="login"}}\t            </p>\t          '}),i.Input({name:"sharedSecret",input:s,type:"text",disabled:!0}),i.Toolbar({noCancelButton:!0,save:t.loc("oform.next","login")})]}},Footer:r,initialize:function(){this.listenTo(this.form,"save",function(){var t=o.createActivateFactorUrl(this.model.get("__provider__"),this.model.get("__factorType__"),"activate");this.options.appState.trigger("navigate",t)})}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(117),n(104)],o=function(t,e,n){return t.View.extend({template:'\t      <a href="#" class="link help js-back" data-se="back-link">\t        {{i18n code="mfa.backToFactors" bundle="login"}}\t      </a>\t      <a href="#" class="link help goto js-goto" data-se="goto-link">\t        {{i18n code="mfa.scanBarcode" bundle="login"}}\t      </a>\t    ',className:"auth-footer",events:{"click .js-back":function(t){t.preventDefault(),this.back()},"click .js-goto":function(t){t.preventDefault(),this.model.startTransaction(function(t){return t.tx.resume()})}},back:function(){this.state.set("navigateDir",n.DIRECTION_BACK),this.options.appState.get("prevLink")?this.model.doTransaction(function(t){return t.prev()}):this.options.appState.trigger("navigate","signin/enroll")}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(149),n(100),n(95),n(96),n(117),n(167),n(148),n(101)],o=function(t,e,n,i,o,r,s,a,l){function c(t,e){var n=r.createActivateFactorUrl(t.options.appState.get("activatedFactorProvider"),t.options.appState.get("activatedFactorType"),e);t.options.appState.trigger("navigate",n)}function u(t){var e,n;"SMS"===t.model.get("activationType")&&(n=t.model.get("countryCode"),e=t.model.get("phoneNumber")),t.options.appState.set({factorActivationType:t.model.get("activationType"),userCountryCode:n,userPhoneNumber:e})}function p(t,e){return t.model.doTransaction(function(n){return n.prev().then(function(t){var n=h.findWhere(t.factors,{factorType:e,provider:"OKTA"});return n.enroll()}).then(function(e){var n,i,o,r=e.data;if(r&&r._embedded&&r._embedded.factor&&r._embedded.factor._embedded&&r._embedded.factor._embedded.activation){var s=r._embedded.factor;if(o=s._embedded.activation.sharedSecret,s._embedded.activation._links&&s._embedded.activation._links.send){var a=s._embedded.activation._links.send,l=h.findWhere(a,{name:"sms"});n=l?l.href:null;var c=h.findWhere(a,{name:"email"});i=c?c.href:null}}return t.model.set({SMS:n,EMAIL:i,sharedSecret:o}),e})})}var h=t._;return i.extend({className:"enroll-manual-push",Model:function(){return{local:{activationType:["string",!0,this.options.appState.get("factorActivationType")||"SMS"],countryCode:["string",!1,"US"],phoneNumber:"string",SMS:["string",!1,this.options.appState.get("textActivationLinkUrl")],EMAIL:["string",!1,this.options.appState.get("emailActivationLinkUrl")],sharedSecret:["string",!1,this.options.appState.get("sharedSecret")],__factorType__:["string",!1,this.options.factorType],__provider__:["string",!1,this.options.provider]},derived:{countryCallingCode:{deps:["countryCode"],fn:function(t){return"+"+e.getCallingCodeForCountry(t)}},fullPhoneNumber:{deps:["countryCallingCode","phoneNumber"],fn:function(t,e){return t+e}}}}},Form:{title:function(){var e=n.getFactorLabel(this.model.get("__provider__"),this.model.get("__factorType__"));return t.loc("enroll.totp.title","login",[e])},subtitle:h.partial(t.loc,"enroll.totp.cannotScanBarcode","login"),noButtonBar:!0,attributes:{"data-se":"step-manual-setup"},formChildren:function(){var n=[o.Input({name:"activationType",type:"select",wide:!0,options:{SMS:t.loc("enroll.totp.sendSms","login"),EMAIL:t.loc("enroll.totp.sendEmail","login"),MANUAL:t.loc("enroll.totp.setupManually","login")}}),o.Input({name:"countryCode",type:"select",wide:!0,options:e.getCountries(),showWhen:{activationType:"SMS"}}),o.Input({placeholder:t.loc("mfa.phoneNumber.placeholder","login"),className:"enroll-sms-phone",name:"phoneNumber",input:a,type:"text",showWhen:{activationType:"SMS"}}),o.View({View:'\t              <p class="okta-form-subtitle o-form-explain text-align-c">\t                {{i18n code="enroll.totp.sharedSecretInstructions" bundle="login"}}\t              </p>\t            ',showWhen:{activationType:"MANUAL"}}),o.Input({name:"sharedSecret",input:l,type:"text",disabled:!0,showWhen:{activationType:"MANUAL"},initialize:function(){this.listenTo(this.model,"change:sharedSecret",this.render)}}),o.View({View:'<div data-type="next-button-wrap"></div>',showWhen:{activationType:"MANUAL"}}),o.Button({title:t.loc("oform.next","login"),className:"button button-primary button-wide button-next",attributes:{"data-se":"next-button"},click:h.bind(function(){u(this),c(this,"passcode")},this)},'[data-type="next-button-wrap"]'),o.Toolbar({noCancelButton:!0,save:t.loc("oform.send","login"),showWhen:{activationType:function(t){return"SMS"===t||"EMAIL"===t}}})];return n}},Footer:s,initialize:function(){this.setInitialModel(),this.listenTo(this.form,"save",function(){var t=this;this.model.doTransaction(function(e){var n=this.get("activationType").toLowerCase(),i={};return"sms"===n&&(i.profile={phoneNumber:this.get("fullPhoneNumber")}),e.factor.activation.send(n,i).then(function(e){return u(t),h.defer(function(){c(t,"sent")}),e})})}),this.listenTo(this.model,"change:activationType",function(t,e){this.form.clearErrors(),"MANUAL"===e&&"token:software:totp"!==this.options.appState.get("activatedFactorType")?p(this,"token:software:totp"):"push"!==this.options.appState.get("activatedFactorType")&&p(this,"push")})},setInitialModel:function(){"SMS"===this.options.appState.get("factorActivationType")&&this.model.set({countryCode:this.options.appState.get("userCountryCode")||"US",phoneNumber:this.options.appState.get("userPhoneNumber")})},trapAuthResponse:function(){if(this.options.appState.get("isMfaEnrollActivate")||this.options.appState.get("isMfaEnroll"))return!0}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(117)],o=function(t,e){function n(t){var n=e.createActivateFactorUrl(t.get("activatedFactorProvider"),t.get("activatedFactorType"));t.trigger("navigate",n)}var i=t._;return t.View.extend({template:'\t      <a href="#" class="link help js-back" data-se="back-link">\t        {{i18n code="mfa.backToFactors" bundle="login"}}\t      </a>\t      <a href="#" class="link help goto js-goto" data-se="goto-link">\t        {{i18n code="mfa.scanBarcode" bundle="login"}}\t      </a>\t    ',className:"auth-footer",events:{"click .js-back":function(t){t.preventDefault(),this.back()},"click .js-goto":function(t){t.preventDefault();var e=i.partial(n,this.options.appState);this.options.appState.unset("factorActivationType"),"push"!==this.options.appState.get("activatedFactorType")?this.model.doTransaction(function(t){return t.prev().then(function(t){var e=i.findWhere(t.factors,{factorType:"push",provider:"OKTA"});return e.enroll()})}).then(e):this.model.startTransaction(function(t){return t.tx.resume()}).then(function(){setTimeout(e)})}},back:function(){var t=this;t.options.appState.unset("factorActivationType"),t.options.appState.get("prevLink")?this.model.doTransaction(function(t){return t.prev()}).then(function(){t.options.appState.trigger("navigate","signin/enroll")}):t.options.appState.trigger("navigate","signin/enroll")}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(149),n(95),n(96),n(117)],o=function(t,e,n,i,o){var r=t._,s=6e3,a=t.View.extend({template:'\t      <a href="#" class="link help js-back" data-se="back-link">\t        {{i18n code="oform.back" bundle="login"}}\t      </a>\t    ',className:"auth-footer",events:{"click .js-back":function(t){t.preventDefault(),this.back()}},back:function(){var t=o.createActivateFactorUrl(this.options.appState.get("activatedFactorProvider"),this.options.appState.get("activatedFactorType"),"manual");this.options.appState.trigger("navigate",t)}}),l={title:r.partial(t.loc,"enroll.totp.enrollViaEmail.title","login"),noButtonBar:!0,attributes:{"data-se":"sent-email-activation-link"},formChildren:[i.View({View:t.View.extend({template:'\t            <p>{{i18n code="enroll.totp.enrollViaEmail.msg" bundle="login"}}</p>\t            <p class="email-address">{{email}}</p>\t          ',getTemplateData:function(){return{email:this.options.appState.get("userEmail")}}})})]},c={title:r.partial(t.loc,"enroll.totp.enrollViaSms.title","login"),noButtonBar:!0,attributes:{"data-se":"sent-sms-activation-link"},formChildren:[i.View({View:t.View.extend({template:'\t            <p>{{i18n code="enroll.totp.enrollViaSms.msg" bundle="login"}}</p>\t            <p class="phone-number">{{phoneNumber}}</p>\t          ',getTemplateData:function(){return{phoneNumber:this.model.get("fullPhoneNumber")}}})})]};return n.extend({className:"enroll-activation-link-sent",Model:function(){return{local:{countryCode:["string",!1,this.options.appState.get("userCountryCode")],phoneNumber:["string",!1,this.options.appState.get("userPhoneNumber")],__factorType__:["string",!1,this.options.factorType],__provider__:["string",!1,this.options.provider]},derived:{countryCallingCode:{deps:["countryCode"],fn:function(t){return"+"+e.getCallingCodeForCountry(t)}},fullPhoneNumber:{deps:["countryCallingCode","phoneNumber"],fn:function(t,e){return t+e}}}}},Form:function(){var t=this.options.appState.get("factorActivationType");switch(t){case"SMS":return c;case"EMAIL":return l;default:throw new Error("Unknown activation option: "+t)}},Footer:a,initialize:function(){this.pollForEnrollment()},remove:function(){return n.prototype.remove.apply(this,arguments)},pollForEnrollment:function(){return this.model.doTransaction(function(t){return t.poll(s)})},trapAuthResponse:function(){if(this.options.appState.get("isWaitingForActivation"))return this.pollForEnrollment(),!0}})}.", "base64"));
  res.write(new Buffer("apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(95),n(117),n(99)],o=function(t,e,n,i){var o=t.View.extend({template:'\t      <a href="#" class="link help js-back" data-se="back-link">\t        {{i18n code="oform.back" bundle="login"}}\t      </a>\t    ',className:"auth-footer",events:{"click .js-back":function(t){t.preventDefault(),this.back()}},back:function(){var t=n.createActivateFactorUrl(this.options.appState.get("activatedFactorProvider"),"push","manual");this.options.appState.trigger("navigate",t)}});return e.extend({className:"activate-push",Model:function(){return{props:{factorId:["string",!0,this.options.appState.get("activatedFactorId")],passCode:["string",!0]},local:{__factorType__:["string",!1,this.options.factorType],__provider__:["string",!1,this.options.provider]},save:function(){return this.doTransaction(function(t){return t.activate({passCode:this.get("passCode")})})}}},Form:i,Footer:o})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(95),n(104),n(96),n(171),n(101)],o=function(t,e,n,i,o,r){var s=t._,a=t.View.extend({template:'\t      {{#if passwordWarn}}\t        <a href="#" class="link help js-skip" data-se="skip-link">\t          {{i18n code="password.expiring.later" bundle="login"}}\t        </a>\t      {{/if}}\t      <a href="#" class="link help goto js-signout" data-se="signout-link">{{i18n code="signout" bundle="login"}}</a>\t    ',className:"auth-footer clearfix",events:{"click .js-signout":function(t){t.preventDefault();var e=this;this.model.doTransaction(function(t){return t.cancel()}).then(function(){e.state.set("navigateDir",n.DIRECTION_BACK),e.options.appState.trigger("navigate","")})},"click .js-skip":function(t){t.preventDefault(),this.model.doTransaction(function(t){return t.skip()})}},getTemplateData:function(){return{passwordWarn:this.options.appState.get("isPwdExpiringSoon")}}});return e.extend({className:"password-expired",Model:{props:{oldPassword:["string",!0],newPassword:["string",!0],confirmPassword:["string",!0]},validate:function(){return o.validatePasswordMatch(this)},save:function(){return this.doTransaction(function(t){return t.changePassword({oldPassword:this.get("oldPassword"),newPassword:this.get("newPassword")})})}},Form:{save:s.partial(t.loc,"password.expired.submit","login"),title:function(){var e=this.options.appState.get("isPwdExpiringSoon"),n=this.options.appState.get("passwordExpireDays");return e&&n>0?t.loc("password.expiring.title","login",[n]):e&&0===n?t.loc("password.expiring.today","login"):t.loc("password.expired.title","login")},subtitle:function(){if(this.options.appState.get("isPwdExpiringSoon"))return t.loc("password.expiring.subtitle","login")},formChildren:function(){return[i.Input({"label-top":!0,label:!1,placeholder:t.loc("password.oldPassword.placeholder","login"),name:"oldPassword",input:r,type:"password",params:{innerTooltip:t.loc("password.oldPassword.tooltip","login"),icon:"credentials-16"}}),i.Divider(),i.Input({"label-top":!0,label:!1,placeholder:t.loc("password.newPassword.placeholder","login"),name:"newPassword",input:r,type:"password",params:{innerTooltip:t.loc("password.newPassword.tooltip","login"),icon:"credentials-16"}}),i.Input({"label-top":!0,label:!1,placeholder:t.loc("password.confirmPassword.placeholder","login"),name:"confirmPassword",input:r,type:"password",params:{innerTooltip:t.loc("password.confirmPassword.tooltip","login"),icon:"credentials-16"}})]}},Footer:a,initialize:function(){this.listenTo(this.form,"save",function(){var t=this.settings.get("processCreds");s.isFunction(t)&&t({username:this.options.appState.get("userEmail"),password:this.model.get("newPassword")}),this.model.save()})}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38)],o=function(t){var e={};return e.validateUsername=function(e){var n=e.get("username");if(n&&n.length>256)return{username:t.loc("model.validation.field.username","login")}},e.validatePasswordMatch=function(e){if(e.get("newPassword")!==e.get("confirmPassword"))return{confirmPassword:t.loc("password.error.match","login")}},e}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(95),n(104),n(96),n(171),n(173),n(101)],o=function(t,e,n,i,o,r,s){var a=t._,l=t.View.extend({template:'\t      <a href="#" class="link help js-back" data-se="back-link">\t        {{i18n code="goback" bundle="login"}}\t      </a>\t      {{#if helpSupportNumber}}\t      <a href="#" class="link goto js-contact-support">\t        {{i18n code="mfa.noAccessToEmail" bundle="login"}}\t      </a>\t      {{/if}}\t    ',className:"auth-footer",events:{"click .js-back":function(t){t.preventDefault(),this.back()},"click .js-contact-support":function(t){t.preventDefault(),this.state.trigger("contactSupport"),this.$(".js-contact-support").hide()}},getTemplateData:function(){return this.settings.pick("helpSupportNumber")},back:function(){this.state.set("navigateDir",n.DIRECTION_BACK),this.options.appState.trigger("navigate","")}});return e.extend({className:"forgot-password",Model:{props:{username:["string",!0],factorType:["string",!0,n.RECOVERY_FACTOR_TYPE_EMAIL]},validate:function(){return o.validateUsername(this)},save:function(){var t=this;this.startTransaction(function(e){return e.forgotPassword({username:t.settings.transformUsername(t.get("username"),n.FORGOT_PASSWORD),factorType:t.get("factorType")})}).fail(function(){t.set("factorType",n.RECOVERY_FACTOR_TYPE_EMAIL)})}},Form:{autoSave:!0,save:a.partial(t.loc,"password.forgot.sendEmail","login"),title:a.partial(t.loc,"password.reset","login"),formChildren:function(){var e=[i.Input({placeholder:t.loc("password.forgot.email.or.username.placeholder","login"),name:"username",input:s,type:"text",params:{innerTooltip:t.loc("password.forgot.email.or.username.tooltip","login"),icon:"person-16-gray"}})],n=this.settings.get("features.smsRecovery"),o=this.settings.get("features.callRecovery");return(n||o)&&e.push(i.View({View:t.View.extend({template:'\t                <p class="mobile-recovery-hint">\t                  {{i18n code="recovery.mobile.hint" bundle="login" arguments="mobileFactors"}}\t                </p>',getTemplateData:function(){var e;return e=n&&o?t.loc("recovery.smsOrCall"):o?t.loc("recovery.call"):t.loc("recovery.sms"),{mobileFactors:e}}})})),e},initialize:function(){var t=this;this.settings.get("features.callRecovery")&&(this.$el.addClass("forgot-password-call-enabled"),this.addRecoveryFactorButton("call-button","password.forgot.call",n.RECOVERY_FACTOR_TYPE_CALL,t)),this.settings.get("features.smsRecovery")&&(this.$el.addClass("forgot-password-sms-enabled"),this.addRecoveryFactorButton("sms-button","password.forgot.sendText",n.RECOVERY_FACTOR_TYPE_SMS,t)),this.listenTo(this.state,"contactSupport",function(){this.add(r,".o-form-error-container")}),this.listenTo(this,"save",function(){this.options.appState.set("username",this.model.get("username"))})},addRecoveryFactorButton:function(e,n,i,o){this.addButton({attributes:{"data-se":e},type:"button",className:"button-primary "+e,text:t.loc(n,"login"),action:function(){o.clearErrors(),this.model.isValid()&&(this.model.set("factorType",i),o.trigger("save",this.model))}},{prepend:!0})}},Footer:l,initialize:function(){this.options.appState.unset("username")}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38)],o=function(t){return t.View.extend({template:'\t      <div class="infobox">\t        <span class="icon info-16"></span>\t        <p>{{i18n code="contact.support" bundle="login" arguments="helpSupportNumber"}}</p>\t      </div>',className:"contact-support",getTemplateData:function(){return this.settings.pick("helpSupportNumber")}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(95),n(96),n(104),n(123),n(101)],o=function(t,e,n,i,o,r){var s=t._,a=3e4;return e.extend({className:"recovery-challenge",Model:{props:{passCode:["string",!0]},local:{ableToResend:"boolean"},resendCode:function(){return this.limitResending(),this.doTransaction(function(t){return t.resend()})},limitResending:function(){this.set({ableToResend:!1}),s.delay(s.bind(this.set,this),a,{ableToResend:!0})},save:function(){return this.doTransaction(function(t){
return t.verify({passCode:this.get("passCode")})})}},Form:{autoSave:!0,save:s.partial(t.loc,"mfa.challenge.verify","login"),title:function(){return this.options.appState.get("factorType")===i.RECOVERY_FACTOR_TYPE_CALL?t.loc("recoveryChallenge.call.title","login"):t.loc("recoveryChallenge.sms.title","login")},className:"recovery-challenge",initialize:function(){this.listenTo(this.model,"error",function(){this.clearErrors()})},formChildren:function(){return[n.Button({title:t.loc("mfa.resendCode","login"),attributes:{"data-se":"resend-button"},className:"button sms-request-button",click:function(){this.model.resendCode()},initialize:function(){this.listenTo(this.model,"change:ableToResend",function(e,n){n?(this.options.title=t.loc("mfa.resendCode","login"),this.enable(),this.render()):(this.options.title=t.loc("mfa.sent","login"),this.disable(),this.render())})}}),n.Input({placeholder:t.loc("mfa.challenge.enterCode.placeholder","login"),className:"enroll-sms-phone",name:"passCode",input:r,type:"text"})]}},events:{"click .send-email-link":function(t){t.preventDefault();var e=this.model.settings,n=this.options.appState.get("username"),o=this.options.appState.get("recoveryType");this.model.startTransaction(function(t){switch(o){case i.RECOVERY_TYPE_PASSWORD:return t.forgotPassword({username:e.transformUsername(n,i.FORGOT_PASSWORD),factorType:i.RECOVERY_FACTOR_TYPE_EMAIL});case i.RECOVERY_TYPE_UNLOCK:return t.unlockAccount({username:e.transformUsername(n,i.UNLOCK_ACCOUNT),factorType:i.RECOVERY_FACTOR_TYPE_EMAIL});default:return}})}},initialize:function(){var e,n=this.options.appState.get("recoveryType");switch(n){case i.RECOVERY_TYPE_PASSWORD:e='\t            <a href="#" class="link send-email-link" data-se="send-email-link">\t              {{i18n code="password.forgot.code.notReceived" bundle="login"}}\t            </a>';break;case i.RECOVERY_TYPE_UNLOCK:e='\t            <a href="#" class="link send-email-link" data-se="send-email-link">\t              {{i18n code="account.unlock.sms.notReceived" bundle="login"}}\t            </a>'}e&&this.add(e),this.add(new o(s.extend(this.toJSON(),{linkText:t.loc("goback","login"),linkClassName:""})))},postRender:function(){this.model.limitResending()}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(104),n(95),n(96)],o=function(t,e,n,i){var o=t._;return n.extend({className:"password-reset-email-sent",Model:function(){return{local:{userFullName:["string",!1,this.options.appState.get("userFullName")]}}},Form:{title:o.partial(t.loc,"password.forgot.emailSent.title","login"),subtitle:function(){var e=this.options.appState.get("username");return t.loc("password.forgot.emailSent.desc","login",[e])},noButtonBar:!0,attributes:{"data-se":"pwd-reset-email-sent"},formChildren:function(){return[i.Button({title:t.loc("goback","login"),className:"button button-primary button-wide",attributes:{"data-se":"back-button"},click:function(){var t=this;return this.model.doTransaction(function(t){return t.cancel()}).then(function(){t.state.set("navigateDir",e.DIRECTION_BACK),t.options.appState.trigger("navigate","")})}})]}},initialize:function(t){this.settings.callGlobalSuccess(e.FORGOT_PASSWORD_EMAIL_SENT,{username:t.appState.get("username")})}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(95),n(96),n(123),n(101)],o=function(t,e,n,i,o){return e.extend({className:"recovery-question",Model:{props:{answer:["string",!0],showAnswer:"boolean"},save:function(){return this.doTransaction(function(t){return t.answer({answer:this.get("answer")})})}},Form:{autoSave:!0,save:function(){switch(this.options.appState.get("recoveryType")){case"PASSWORD":return t.loc("password.forgot.question.submit","login");case"UNLOCK":return t.loc("account.unlock.question.submit","login");default:return t.loc("mfa.challenge.verify","login")}},title:function(){switch(this.options.appState.get("recoveryType")){case"PASSWORD":return t.loc("password.forgot.question.title","login");case"UNLOCK":return t.loc("account.unlock.question.title","login");default:return""}},formChildren:function(){return[n.Input({label:this.options.appState.get("recoveryQuestion"),placeholder:t.loc("mfa.challenge.answer.placeholder","login"),name:"answer",input:o,type:"password",initialize:function(){this.listenTo(this.model,"change:showAnswer",function(){var t=this.model.get("showAnswer")?"text":"password";this.getInputs()[0].changeType(t)})}}),n.Input({label:!1,"label-top":!0,placeholder:t.loc("mfa.challenge.answer.showAnswer","login"),className:"recovery-question-show margin-btm-0",name:"showAnswer",type:"checkbox"})]}},Footer:i})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(95),n(96),n(171),n(123),n(101)],o=function(t,e,n,i,o,r){var s=t._;return e.extend({className:"password-reset",Model:{props:{newPassword:["string",!0],confirmPassword:["string",!0]},validate:function(){return i.validatePasswordMatch(this)},save:function(){var t=this;return this.doTransaction(function(e){return e.resetPassword({newPassword:t.get("newPassword")})})}},Form:{save:s.partial(t.loc,"password.reset","login"),title:s.partial(t.loc,"password.reset.title","login"),subtitle:function(){var e=this.options.appState.get("policy");if(e&&e.complexity){var n={minLength:{i18n:"password.complexity.length",args:!0},minLowerCase:{i18n:"password.complexity.lowercase"},minUpperCase:{i18n:"password.complexity.uppercase"},minNumber:{i18n:"password.complexity.number"},minSymbol:{i18n:"password.complexity.symbol"},excludeUsername:{i18n:"password.complexity.no_username"}},i=s.map(e.complexity,function(e,i){var o=n[i];return o.args?t.loc(o.i18n,"login",[e]):t.loc(o.i18n,"login")});return i.length?(i=s.reduce(i,function(e,n){return e?e+t.loc("password.complexity.list.element","login",[n]):n}),t.loc("password.complexity.description","login",[i])):void 0}},formChildren:function(){return[n.Input({placeholder:t.loc("password.newPassword.placeholder","login"),name:"newPassword",input:r,type:"password",params:{innerTooltip:t.loc("password.newPassword.tooltip","login"),icon:"credentials-16"}}),n.Input({placeholder:t.loc("password.confirmPassword.placeholder","login"),name:"confirmPassword",input:r,type:"password",params:{innerTooltip:t.loc("password.confirmPassword.tooltip","login"),icon:"credentials-16"}})]}},Footer:o,initialize:function(){this.listenTo(this.form,"save",function(){var t=this.settings.get("processCreds");s.isFunction(t)&&t({username:this.options.appState.get("userEmail"),password:this.model.get("newPassword")}),this.model.save()})}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(95)],o=function(t,e){return e.extend({className:"recovery-loading",Model:{},Form:{noButtonBar:!0},initialize:function(t){var e=this;return this.model.startTransaction(function(e){return e.verifyRecoveryToken({recoveryToken:t.token})}).fail(function(){e.options.appState.trigger("loading",!1)})},preRender:function(){this.options.appState.trigger("loading",!0)},trapAuthResponse:function(){return this.options.appState.trigger("loading",!1),!1}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(95),n(104),n(96),n(171),n(173),n(101)],o=function(t,e,n,i,o,r,s){var a=t._,l=t.View.extend({template:'\t      <a href="#" class="link help js-back" data-se="back-link">\t        {{i18n code="goback" bundle="login"}}\t      </a>\t      {{#if helpSupportNumber}}\t      <a href="#" class="link goto js-contact-support">\t        {{i18n code="mfa.noAccessToEmail" bundle="login"}}\t      </a>\t      {{/if}}\t    ',className:"auth-footer",events:{"click .js-back":function(t){t.preventDefault(),this.back()},"click .js-contact-support":function(t){t.preventDefault(),this.state.trigger("contactSupport"),this.$(".js-contact-support").hide()}},getTemplateData:function(){return this.settings.pick("helpSupportNumber")},back:function(){this.state.set("navigateDir",n.DIRECTION_BACK),this.options.appState.trigger("navigate","")}});return e.extend({className:"account-unlock",Model:{props:{username:["string",!0],factorType:["string",!0,n.RECOVERY_FACTOR_TYPE_EMAIL]},validate:function(){return o.validateUsername(this)},save:function(){var t=this;return this.startTransaction(function(e){return e.unlockAccount({username:t.settings.transformUsername(t.get("username"),n.UNLOCK_ACCOUNT),factorType:t.get("factorType")})}).fail(function(){t.set("factorType",n.RECOVERY_FACTOR_TYPE_EMAIL)})}},Form:{autoSave:!0,save:a.partial(t.loc,"account.unlock.sendEmail","login"),title:a.partial(t.loc,"account.unlock.title","login"),formChildren:function(){var e=[i.Input({placeholder:t.loc("account.unlock.email.or.username.placeholder","login"),name:"username",input:s,type:"text",params:{innerTooltip:t.loc("account.unlock.email.or.username.tooltip","login"),icon:"person-16-gray"}})];return this.settings.get("features.smsRecovery")&&e.push(i.View({View:'\t            <p class="sms-hint">\t              {{i18n code="recovery.sms.hint" bundle="login"}}\t            </p>\t          '})),e},initialize:function(){var e=this;this.listenTo(this,"save",function(){this.options.appState.set("username",this.model.get("username"))}),this.settings.get("features.smsRecovery")&&(this.$el.addClass("forgot-password-sms-enabled"),this.addButton({attributes:{"data-se":"sms-button"},type:"button",className:"button-primary sms-button",text:t.loc("account.unlock.sendText","login"),action:function(){e.clearErrors(),this.model.isValid()&&(this.model.set("factorType",n.RECOVERY_FACTOR_TYPE_SMS),e.trigger("save",this.model))}},{prepend:!0})),this.listenTo(this.state,"contactSupport",function(){this.add(r,".o-form-error-container")})}},Footer:l})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(104),n(95),n(96)],o=function(t,e,n,i){var o=t._;return n.extend({className:"account-unlocked",Model:function(){return{local:{userFullName:["string",!1,this.options.appState.get("userFullName")]}}},Form:{title:o.partial(t.loc,"account.unlock.unlocked.title","login"),subtitle:o.partial(t.loc,"account.unlock.unlocked.desc","login"),noButtonBar:!0,attributes:{"data-se":"account-unlocked"},formChildren:function(){return[i.Button({title:t.loc("goback","login"),className:"button button-primary button-wide",attributes:{"data-se":"back-button"},click:function(){this.state.set("navigateDir",e.DIRECTION_BACK),this.options.appState.trigger("navigate","")}})]}}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(104),n(95),n(96)],o=function(t,e,n,i){var o=t._;return n.extend({className:"account-unlock-email-sent",Model:function(){return{local:{userFullName:["string",!1,this.options.appState.get("userFullName")]}}},Form:{title:o.partial(t.loc,"account.unlock.emailSent.title","login"),subtitle:function(){var e=this.options.appState.get("username");return t.loc("account.unlock.emailSent.desc","login",[e])},noButtonBar:!0,attributes:{"data-se":"unlock-email-sent"},formChildren:function(){return[i.Button({title:t.loc("goback","login"),className:"button button-primary button-wide",attributes:{"data-se":"back-button"},click:function(){this.state.set("navigateDir",e.DIRECTION_BACK),this.options.appState.trigger("navigate","")}})]}},initialize:function(t){this.settings.callGlobalSuccess(e.UNLOCK_ACCOUNT_EMAIL_SENT,{username:t.appState.get("username")})}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(9),n(100),n(183),n(116)],o=function(t,e,n,i,o){var r=t._;return t.View.extend({template:'\t      <div class="beacon-blank auth-beacon">\t        <div class="beacon-blank js-blank-beacon-border auth-beacon-border"></div>\t      </div>\t      <div class="bg-helper auth-beacon auth-beacon-factor {{className}}" data-se="factor-beacon">\t        <div class="okta-sign-in-beacon-border auth-beacon-border"></div>\t      </div>\t      <div data-type="factor-types-dropdown" class="factors-dropdown-wrap"></div>\t    ',events:{"click .auth-beacon-factor":function(t){t.preventDefault(),t.stopPropagation(),this.$(".dropdown .options").toggle()}},initialize:function(){this.options.appState.set("beaconType","factor")},getTemplateData:function(){var t,e,n=this.options.appState.get("factors");return t=n?n.findWhere(r.pick(this.options,"provider","factorType")):new o.Model(this.options.appState.get("factor"),this.toJSON()),e=t.get("iconClassName"),{className:e||""}},postRender:function(){this.options.animate&&this.$(".auth-beacon-factor").fadeIn(200);var t=this.options.appState;t.get("hasMfaRequiredOptions")&&this.add(i,'[data-type="factor-types-dropdown"]')},fadeOut:function(){var t=e.defer();return this.$(".auth-beacon-factor").fadeOut(200,function(){t.resolve()}),t.promise},equals:function(t,e){return t&&this instanceof t&&e.provider===this.options.provider&&(e.factorType===this.options.factorType||n.isOktaVerify(e.provider,e.factorType)&&n.isOktaVerify(this.options.provider,this.options.factorType))}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(184),n(185)],o=function(t,e,n){var i=t._,o=t.$;return o(document).click(function(t){var e=o(t.target),n=e.closest(".option-selected").length>0&&e.closest(".dropdown").length>0;n||o(".dropdown .options").hide()}),n.extend({className:"bg-helper icon-button",events:{"click a.option-selected":function(t){t.preventDefault(),i.result(this,"disabled")?t.stopPropagation():this.$(".options").toggle()},"click .dropdown-disabled":function(t){t.preventDefault(),t.stopPropagation()}},initialize:function(){this.addOption(e.getDropdownOption("TITLE")),this.options.appState.get("factors").each(function(t){this.addOption(e.getDropdownOption(t.get("factorName")),{model:t}),this.listenTo(this.last(),"options:toggle",function(){this.$(".options").hide()})},this)}})}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(38),n(117)],o=function(t,e){var n=t._,i=function(t){var n=e.createVerifyUrl(t.get("provider"),t.get("factorType")),i=this;this.model.manageTransaction(function(t,e){return"MFA_CHALLENGE"===t.status&&t.prev?t.prev().then(function(t){i.trigger("options:toggle"),i.options.appState.trigger("navigate",n),e(t)}):(i.trigger("options:toggle"),void i.options.appState.trigger("navigate",n))})},o={TITLE:{title:n.partial(t.loc,"mfa.factors.dropdown.title","login"),className:"dropdown-list-title"},OKTA_VERIFY:{icon:"factor-icon mfa-okta-verify-30",title:function(){return this.model.get("factorLabel")},action:function(){i.call(this,this.model)}},OKTA_VERIFY_PUSH:{icon:"factor-icon mfa-okta-verify-30",title:function(){return this.model.get("factorLabel")},action:function(){i.call(this,this.model)}},GOOGLE_AUTH:{icon:"factor-icon mfa-google-auth-30",title:function(){return this.model.get("factorLabel")},action:function(){i.call(this,this.model)}},SYMANTEC_VIP:{icon:"factor-icon mfa-symantec-30",title:function(){return this.model.get("factorLabel")},action:function(){i.call(this,this.model)}},RSA_SECURID:{icon:"factor-icon mfa-rsa-30",title:n.partial(t.loc,"factor.totpHard.rsaSecurId","login"),action:function(){i.call(this,this.model)}},ON_PREM:{icon:"factor-icon mfa-onprem-30",title:function(){return this.model.get("factorLabel")},action:function(){i.call(this,this.model)}},DUO:{icon:"factor-icon mfa-duo-30",title:function(){return this.model.get("factorLabel")},action:function(){i.call(this,this.model)}},DUO_PUSH:{icon:"duo-push-16",className:"suboption",title:n.partial(t.loc,"mfa.duoSecurity.push","login",["XXX-XXX-7890"])},DUO_SMS:{icon:"duo-sms-16",className:"suboption",title:n.partial(t.loc,"mfa.duoSecurity.sms","login",["XXX-XXX-7890"])},DUO_CALL:{icon:"duo-call-16",className:"suboption",title:n.partial(t.loc,"mfa.duoSecurity.call","login",["XXX-XXX-7890"])},YUBIKEY:{icon:"factor-icon mfa-yubikey-30",title:function(){return this.model.get("factorLabel")},action:function(){i.call(this,this.model)}},SMS:{icon:"factor-icon mfa-sms-30",title:function(){return this.model.get("factorLabel")},action:function(){i.call(this,this.model)}},CALL:{icon:"factor-icon mfa-call-30",title:function(){return this.model.get("factorLabel")},action:function(){i.call(this,this.model)}},QUESTION:{icon:"factor-icon mfa-question-30",title:function(){return this.model.get("factorLabel")},action:function(){i.call(this,this.model)}},WINDOWS_HELLO:{icon:"factor-icon mfa-windows-hello-30",title:function(){return this.model.get("factorLabel")},action:function(){i.call(this,this.model)}},U2F:{icon:"factor-icon mfa-u2f-30",title:function(){return this.model.get("factorLabel")},action:function(){i.call(this,this.model)}}};return{getDropdownOption:function(t){return o[t]}}}.apply(e,i),!(void 0!==o&&(t.exports=o))},function(t,e,n){var i,o;i=[n(2),n(6),n(46),n(45)],o=function(t,e,n,i){var o=n.tpl('\t    <a class="icon-16 {{className}}" data-se="{{seleniumId}}">\t      {{#if icon}}\t      <span class="icon {{icon}}"></span>\t      {{/if}}\t      {{#if title}}\t      {{title}}\t      {{/if}}\t      {{#if subtitle}}\t        <p class="option-subtitle">{{subtitle}}</p>\t      {{/if}}\t   </a>\t   '),r=i.extend({tagName:"li",events:{click:function(t){t.preventDefault(),this.action&&this.action.call(this)}},constructor:function(){i.apply(this,arguments),this.$el.addClass("okta-dropdown-option option")},render:function(){return this.$el.html(o({icon:t.result(this,"icon"),className:t.result(this,"className")||"",title:t.result(this,"title"),subtitle:t.result(this,"subtitle"),seleniumId:t.result(this,"seleniumId")})),this}});return i.extend({events:{"click a.option-selected":function(e){e.preventDefault(),t.result(this,"disabled")&&e.stopPropagation()},"click .dropdown-disabled":function(t){t.preventDefault(),t.stopPropagation()}},items:[],constructor:function(){var e=this.className;this.className=null,i.apply(this,arguments),this.className=e,this.$el.addClass("dropdown more-actions float-l"),t.each(t.result(this,"items"),function(t){this.addOption(t,this.options)},this)},template:'\t      <a href="#" class="link-button {{className}} link-button-icon option-selected center">\t        {{#if icon}}\t        <span class="icon {{icon}}"></span>\t        {{/if}}\t        <span class="option-selected-text">{{title}}</span>\t        <span class="icon-dm"></span>\t      </a>\t      <div class="options clearfix" style="display: none;">\t      <ul class="okta-dropdown-list options-wrap clearfix"></ul>\t      </div>\t    ',getTemplateData:function(){var n=[t.result(this,"className")||"",t.result(this,"disabled")?"dropdown-disabled":""];return{icon:t.result(this,"icon"),className:e.trim(n.join(" ")),title:t.result(this,"title")}},addOption:function(t,e){this.add(r.extend(t),"ul.options-wrap",{options:e||{}})}})}.apply(e,i),!(void 0!==o&&(t.exports=o))}])});", "base64"));
  res.end();

  return __filename;
};
