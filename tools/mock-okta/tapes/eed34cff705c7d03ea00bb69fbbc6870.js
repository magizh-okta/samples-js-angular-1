var path = require("path");

/**
 * GET /assets/loginpage/css/loginpage-theme.b2539e43c793daf42939a0acff530300.css
 *
 * host: rain.okta1.com:1802
 * connection: keep-alive
 * user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:48.0) Gecko/20100101 Firefox/48.0
 * accept: text/css,* / *;q=0.1
 * accept-encoding: gzip
 * accept-language: en-US
 * cookie: DT=DI0jRgRLD_uQBqSzCUCxXy5OA; t=default; JSESSIONID=C8CAB112A54DECAB36F64A605FA44B2A
 * cache-control: no-cache, no-store
 * pragma: no-cache
 */

module.exports = function (req, res) {
  res.statusCode = 200;

  res.setHeader("server", "Apache-Coyote/1.1");
  res.setHeader("accept-ranges", "bytes");
  res.setHeader("etag", "W/\"40891-1477769290000\"");
  res.setHeader("last-modified", "Sat, 29 Oct 2016 19:28:10 GMT");
  res.setHeader("content-type", "text/css");
  res.setHeader("content-length", "40891");
  res.setHeader("date", "Sat, 05 Nov 2016 23:23:48 GMT");

  res.setHeader("x-yakbak-tape", path.basename(__filename, ".js"));

  res.write(new Buffer("", "base64"));
  res.write(new Buffer("ZnQ6IDA7CiAgfQogICNva3RhLXNpZ24taW4gLmF1dGgtY29udGVudCB7CiAgICB3aWR0aDogMzE2cHg7CiAgICBtaW4td2lkdGg6IDMwMHB4OwogICAgbWFyZ2luOiAwcHggYXV0bzsKICB9Cn0KCi8qIyBzb3VyY2VNYXBwaW5nVVJMPWxvZ2lucGFnZS10aGVtZS5jc3MubWFwICovCg==", "base64"));
  res.end();

  return __filename;
};
