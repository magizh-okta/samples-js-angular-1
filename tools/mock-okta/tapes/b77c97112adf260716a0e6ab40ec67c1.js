var path = require("path");

/**
 * GET /assets/js/mvc/vendor/plugins/jquery.browser.js
 *
 * host: rain.okta1.com:1802
 * connection: keep-alive
 * user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:48.0) Gecko/20100101 Firefox/48.0
 * accept: * / *
 * accept-encoding: gzip
 * accept-language: en-US
 * cookie: DT=DI0jRgRLD_uQBqSzCUCxXy5OA; t=default; JSESSIONID=C8CAB112A54DECAB36F64A605FA44B2A
 * cache-control: no-cache, no-store
 * pragma: no-cache
 */

module.exports = function (req, res) {
  res.statusCode = 200;

  res.setHeader("server", "Apache-Coyote/1.1");
  res.setHeader("accept-ranges", "bytes");
  res.setHeader("etag", "W/\"5527-1477769062000\"");
  res.setHeader("last-modified", "Sat, 29 Oct 2016 19:24:22 GMT");
  res.setHeader("content-type", "text/javascript");
  res.setHeader("content-length", "5527");
  res.setHeader("date", "Sat, 05 Nov 2016 23:23:48 GMT");

  res.setHeader("x-yakbak-tape", path.basename(__filename, ".js"));

  res.write(new Buffer("LyohCiAqIGpRdWVyeSBCcm93c2VyIFBsdWdpbiAwLjAuNwogKiBodHRwczovL2dpdGh1Yi5jb20vZ2FiY2ViL2pxdWVyeS1icm93c2VyLXBsdWdpbgogKgogKiBPcmlnaW5hbCBqcXVlcnktYnJvd3NlciBjb2RlIENvcHlyaWdodCAyMDA1LCAyMDEzIGpRdWVyeSBGb3VuZGF0aW9uLCBJbmMuIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKgogKiBNb2RpZmljYXRpb25zIENvcHlyaWdodCAyMDE0IEdhYnJpZWwgQ2VicmlhbgogKiBodHRwczovL2dpdGh1Yi5jb20vZ2FiY2ViCiAqCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZQogKgogKiBEYXRlOiAxMi0xMi0yMDE0CiAqLwovKmdsb2JhbCB3aW5kb3c6IGZhbHNlICovCgooZnVuY3Rpb24gKGZhY3RvcnkpIHsKICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7CiAgICAvLyBBTUQuIFJlZ2lzdGVyIGFzIGFuIGFub255bW91cyBtb2R1bGUuCiAgICBkZWZpbmUoWydqcXVlcnknXSwgZnVuY3Rpb24oJCkgewogICAgICBmYWN0b3J5KCQpOwogICAgfSk7CiAgfSBlbHNlIGlmICh0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlLmV4cG9ydHMgPT09ICdvYmplY3QnKSB7CiAgICAvLyBOb2RlLWxpa2UgZW52aXJvbm1lbnQKICAgIG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeShyZXF1aXJlKCdqcXVlcnknKSk7CiAgfSBlbHNlIHsKICAgIC8vIEJyb3dzZXIgZ2xvYmFscwogICAgZmFjdG9yeSh3aW5kb3cualF1ZXJ5KTsKICB9Cn0oZnVuY3Rpb24oalF1ZXJ5KSB7CiAgInVzZSBzdHJpY3QiOwoKICBmdW5jdGlvbiB1YU1hdGNoKCB1YSApIHsKICAgIC8vIElmIGFuIFVBIGlzIG5vdCBwcm92aWRlZCwgZGVmYXVsdCB0byB0aGUgY3VycmVudCBicm93c2VyIFVBLgogICAgaWYgKCB1YSA9PT0gdW5kZWZpbmVkICkgewogICAgICB1YSA9IHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50OwogICAgfQogICAgdWEgPSB1YS50b0xvd2VyQ2FzZSgpOwoKICAgIHZhciBtYXRjaCA9IC8oZWRnZSlcLyhbXHcuXSspLy5leGVjKCB1YSApIHx8CiAgICAgICAgLyhvcHIpW1wvXShbXHcuXSspLy5leGVjKCB1YSApIHx8CiAgICAgICAgLyhjaHJvbWUpWyBcL10oW1x3Ll0rKS8uZXhlYyggdWEgKSB8fAogICAgICAgIC8odmVyc2lvbikoYXBwbGV3ZWJraXQpWyBcL10oW1x3Ll0rKS4qKHNhZmFyaSlbIFwvXShbXHcuXSspLy5leGVjKCB1YSApIHx8CiAgICAgICAgLyh3ZWJraXQpWyBcL10oW1x3Ll0rKS4qKHZlcnNpb24pWyBcL10oW1x3Ll0rKS4qKHNhZmFyaSlbIFwvXShbXHcuXSspLy5leGVjKCB1YSApIHx8CiAgICAgICAgLyh3ZWJraXQpWyBcL10oW1x3Ll0rKS8uZXhlYyggdWEgKSB8fAogICAgICAgIC8ob3BlcmEpKD86Lip2ZXJzaW9ufClbIFwvXShbXHcuXSspLy5leGVjKCB1YSApIHx8CiAgICAgICAgLyhtc2llKSAoW1x3Ll0rKS8uZXhlYyggdWEgKSB8fAogICAgICAgIHVhLmluZGV4T2YoInRyaWRlbnQiKSA+PSAwICYmIC8ocnYpKD86OnwgKShbXHcuXSspLy5leGVjKCB1YSApIHx8CiAgICAgICAgdWEuaW5kZXhPZigiY29tcGF0aWJsZSIpIDwgMCAmJiAvKG1vemlsbGEpKD86Lio/IHJ2OihbXHcuXSspfCkvLmV4ZWMoIHVhICkgfHwKICAgICAgICBbXTsKCiAgICB2YXIgcGxhdGZvcm1fbWF0Y2ggPSAvKGlwYWQpLy5leGVjKCB1YSApIHx8CiAgICAgICAgLyhpcG9kKS8uZXhlYyggdWEgKSB8fAogICAgICAgIC8oaXBob25lKS8uZXhlYyggdWEgKSB8fAogICAgICAgIC8oa2luZGxlKS8uZXhlYyggdWEgKSB8fAogICAgICAgIC8oc2lsaykvLmV4ZWMoIHVhICkgfHwKICAgICAgICAvKGFuZHJvaWQpLy5leGVjKCB1YSApIHx8CiAgICAgICAgLyh3aW5kb3dzIHBob25lKS8uZXhlYyggdWEgKSB8fAogICAgICAgIC8od2luKS8uZXhlYyggdWEgKSB8fAogICAgICAgIC8obWFjKS8uZXhlYyggdWEgKSB8fAogICAgICAgIC8obGludXgpLy5leGVjKCB1YSApIHx8CiAgICAgICAgLyhjcm9zKS8uZXhlYyggdWEgKSB8fAogICAgICAgIC8ocGxheWJvb2spLy5leGVjKCB1YSApIHx8CiAgICAgICAgLyhiYikvLmV4ZWMoIHVhICkgfHwKICAgICAgICAvKGJsYWNrYmVycnkpLy5leGVjKCB1YSApIHx8CiAgICAgICAgW107CgogICAgdmFyIGJyb3dzZXIgPSB7fSwKICAgICAgICBtYXRjaGVkID0gewogICAgICAgICAgYnJvd3NlcjogbWF0Y2hbIDUgXSB8fCBtYXRjaFsgMyBdIHx8IG1hdGNoWyAxIF0gfHwgIiIsCiAgICAgICAgICB2ZXJzaW9uOiBtYXRjaFsgMiBdIHx8IG1hdGNoWyA0IF0gfHwgIjAiLAogICAgICAgICAgdmVyc2lvbk51bWJlcjogbWF0Y2hbIDQgXSB8fCBtYXRjaFsgMiBdIHx8ICIwIiwKICAgICAgICAgIHBsYXRmb3JtOiBwbGF0Zm9ybV9tYXRjaFsgMCBdIHx8ICIiCiAgICAgICAgfTsKCiAgICBpZiAoIG1hdGNoZWQuYnJvd3NlciApIHsKICAgICAgYnJvd3NlclsgbWF0Y2hlZC5icm93c2VyIF0gPSB0cnVlOwogICAgICBicm93c2VyLnZlcnNpb24gPSBtYXRjaGVkLnZlcnNpb247CiAgICAgIGJyb3dzZXIudmVyc2lvbk51bWJlciA9IHBhcnNlSW50KG1hdGNoZWQudmVyc2lvbk51bWJlciwgMTApOwogICAgfQoKICAgIGlmICggbWF0Y2hlZC5wbGF0Zm9ybSApIHsKICAgICAgYnJvd3NlclsgbWF0Y2hlZC5wbGF0Zm9ybSBdID0gdHJ1ZTsKICAgIH0KCiAgICAvLyBUaGVzZSBhcmUgYWxsIGNvbnNpZGVyZWQgbW9iaWxlIHBsYXRmb3JtcywgbWVhbmluZyB0aGV5IHJ1biBhIG1vYmlsZSBicm93c2VyCiAgICBpZiAoIGJyb3dzZXIuYW5kcm9pZCB8fCBicm93c2VyLmJiIHx8IGJyb3dzZXIuYmxhY2tiZXJyeSB8fCBicm93c2VyLmlwYWQgfHwgYnJvd3Nlci5pcGhvbmUgfHwKICAgICAgYnJvd3Nlci5pcG9kIHx8IGJyb3dzZXIua2luZGxlIHx8IGJyb3dzZXIucGxheWJvb2sgfHwgYnJvd3Nlci5zaWxrIHx8IGJyb3dzZXJbICJ3aW5kb3dzIHBob25lIiBdKSB7CiAgICAgIGJyb3dzZXIubW9iaWxlID0gdHJ1ZTsKICAgIH0KCiAgICAvLyBUaGVzZSBhcmUgYWxsIGNvbnNpZGVyZWQgZGVza3RvcCBwbGF0Zm9ybXMsIG1lYW5pbmcgdGhleSBydW4gYSBkZXNrdG9wIGJyb3dzZXIKICAgIGlmICggYnJvd3Nlci5jcm9zIHx8IGJyb3dzZXIubWFjIHx8IGJyb3dzZXIubGludXggfHwgYnJvd3Nlci53aW4gKSB7CiAgICAgIGJyb3dzZXIuZGVza3RvcCA9IHRydWU7CiAgICB9CgogICAgLy8gQ2hyb21lLCBPcGVyYSAxNSsgYW5kIFNhZmFyaSBhcmUgd2Via2l0IGJhc2VkIGJyb3dzZXJzCiAgICBpZiAoIGJyb3dzZXIuY2hyb21lIHx8IGJyb3dzZXIub3ByIHx8IGJyb3dzZXIuc2FmYXJpICkgewogICAgICBicm93c2VyLndlYmtpdCA9IHRydWU7CiAgICB9CgogICAgLy8gSUUxMSBoYXMgYSBuZXcgdG9rZW4gc28gd2Ugd2lsbCBhc3NpZ24gaXQgbXNpZSB0byBhdm9pZCBicmVha2luZyBjaGFuZ2VzCiAgICAvLyBJRTEyIGRpc2d1aXNlcyBpdHNlbGYgYXMgQ2hyb21lLCBidXQgYWRkcyBhIG5ldyBFZGdlIHRva2VuLgogICAgaWYgKCBicm93c2VyLnJ2IHx8IGJyb3dzZXIuZWRnZSApIHsKICAgICAgdmFyIGllID0gIm1zaWUiOwoKICAgICAgbWF0Y2hlZC5icm93c2VyID0gaWU7CiAgICAgIGJyb3dzZXJbaWVdID0gdHJ1ZTsKICAgIH0KCiAgICAvLyBCbGFja2JlcnJ5IGJyb3dzZXJzIGFyZSBtYXJrZWQgYXMgU2FmYXJpIG9uIEJsYWNrQmVycnkKICAgIGlmICggYnJvd3Nlci5zYWZhcmkgJiYgYnJvd3Nlci5ibGFja2JlcnJ5ICkgewogICAgICB2YXIgYmxhY2tiZXJyeSA9ICJibGFja2JlcnJ5IjsKCiAgICAgIG1hdGNoZWQuYnJvd3NlciA9IGJsYWNrYmVycnk7CiAgICAgIGJyb3dzZXJbYmxhY2tiZXJyeV0gPSB0cnVlOwogICAgfQoKICAgIC8vIFBsYXlib29rIGJyb3dzZXJzIGFyZSBtYXJrZWQgYXMgU2FmYXJpIG9uIFBsYXlib29rCiAgICBpZiAoIGJyb3dzZXIuc2FmYXJpICYmIGJyb3dzZXIucGxheWJvb2sgKSB7CiAgICAgIHZhciBwbGF5Ym9vayA9ICJwbGF5Ym9vayI7CgogICAgICBtYXRjaGVkLmJyb3dzZXIgPSBwbGF5Ym9vazsKICAgICAgYnJvd3NlcltwbGF5Ym9va10gPSB0cnVlOwogICAgfQoKICAgIC8vIEJCMTAgaXMgYSBuZXdlciBPUyB2ZXJzaW9uIG9mIEJsYWNrQmVycnkKICAgIGlmICggYnJvd3Nlci5iYiApIHsKICAgICAgdmFyIGJiID0gImJsYWNrYmVycnkiOwoKICAgICAgbWF0Y2hlZC5icm93c2VyID0gYmI7CiAgICAgIGJyb3dzZXJbYmJdID0gdHJ1ZTsKICAgIH0KCiAgICAvLyBPcGVyYSAxNSsgYXJlIGlkZW50aWZpZWQgYXMgb3ByCiAgICBpZiAoIGJyb3dzZXIub3ByICkgewogICAgICB2YXIgb3BlcmEgPSAib3BlcmEiOwoKICAgICAgbWF0Y2hlZC5icm93c2VyID0gb3BlcmE7CiAgICAgIGJyb3dzZXJbb3BlcmFdID0gdHJ1ZTsKICAgIH0KCiAgICAvLyBTdG9jayBBbmRyb2lkIGJyb3dzZXJzIGFyZSBtYXJrZWQgYXMgU2FmYXJpIG9uIEFuZHJvaWQuCiAgICBpZiAoIGJyb3dzZXIuc2FmYXJpICYmIGJyb3dzZXIuYW5kcm9pZCApIHsKICAgICAgdmFyIGFuZHJvaWQgPSAiYW5kcm9pZCI7CgogICAgICBtYXRjaGVkLmJyb3dzZXIgPSBhbmRyb2lkOwogICAgICBicm93c2VyW2FuZHJvaWRdID0gdHJ1ZTsKICAgIH0KCiAgICAvLyBLaW5kbGUgYnJvd3NlcnMgYXJlIG1hcmtlZCBhcyBTYWZhcmkgb24gS2luZGxlCiAgICBpZiAoIGJyb3dzZXIuc2FmYXJpICYmIGJyb3dzZXIua2luZGxlICkgewogICAgICB2YXIga2luZGxlID0gImtpbmRsZSI7CgogICAgICBtYXRjaGVkLmJyb3dzZXIgPSBraW5kbGU7CiAgICAgIGJyb3dzZXJba2luZGxlXSA9IHRydWU7CiAgICB9CgogICAgIC8vIEtpbmRsZSBTaWxrIGJyb3dzZXJzIGFyZSBtYXJrZWQgYXMgU2FmYXJpIG9uIEtpbmRsZQogICAgaWYgKCBicm93c2VyLnNhZmFyaSAmJiBicm93c2VyLnNpbGsgKSB7CiAgICAgIHZhciBzaWxrID0gInNpbGsiOwoKICAgICAgbWF0Y2hlZC5icm93c2VyID0gc2lsazsKICAgICAgYnJvd3NlcltzaWxrXSA9IHRydWU7CiAgICB9CgogICAgLy8gQXNzaWduIHRoZSBuYW1lIGFuZCBwbGF0Zm9ybSB2YXJpYWJsZQogICAgYnJvd3Nlci5uYW1lID0gbWF0Y2hlZC5icm93c2VyOwogICAgYnJvd3Nlci5wbGF0Zm9ybSA9IG1hdGNoZWQucGxhdGZvcm07CiAgICByZXR1cm4gYnJvd3NlcjsKICB9CgogIC8vIFJ1biB0aGUgbWF0Y2hpbmcgcHJvY2VzcywgYWxzbyBhc3NpZ24gdGhlIGZ1bmN0aW9uIHRvIHRoZSByZXR1cm5lZCBvYmplY3QKICAvLyBmb3IgbWFudWFsLCBqUXVlcnktZnJlZSB1c2UgaWYgZGVzaXJlZAogIHdpbmRvdy5qUUJyb3dzZXIgPSB1YU1hdGNoKCB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudCApOwogIHdpbmRvdy5qUUJyb3dzZXIudWFNYXRjaCA9IHVhTWF0Y2g7CgogIC8vIE9ubHkgYXNzaWduIHRvIGpRdWVyeS5icm93c2VyIGlmIGpRdWVyeSBpcyBsb2FkZWQKICBpZiAoIGpRdWVyeSApIHsKICAgIGpRdWVyeS5icm93c2VyID0gd2luZG93LmpRQnJvd3NlcjsKICB9CgogIHJldHVybiB3aW5kb3cualFCcm93c2VyOwp9KSk7Cg==", "base64"));
  res.end();

  return __filename;
};
